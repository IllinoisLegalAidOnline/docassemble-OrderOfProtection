metadata:
  title: Order of protection
  short title: Order of protection
  comment: This program helps you ask the court to order someone to stop harming or threatening you or other household members.
  authors:
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:escape_button.yml  
  - docassemble.ALToolbox:phone-number-validation.yml  
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
#---  added for testing css
#features:
#  css:
#    - temp.css
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[i].work_address: ALAddress
  - shared_kids: ALPeopleList.using(complete_attribute='complete', there_are_any=True)
  - petitioner_kids: ALPeopleList.using(there_are_any=True)
  - other_hh_members: ALPeopleList.using(there_are_any=True)
  - dependent_adult: ALIndividual
  - high_risk_adult: ALIndividual
  - other_ops: DAList.using(object_type=Thing, there_are_any=True)
  - other_cases: DAList.using(object_type=Thing, there_are_any=True)
  - incidents: DAList.using(object_type=Thing, there_are_any=True)
  - jobs: ALAddressList.using(there_are_any=True)
  - schools: ALAddressList.using(there_are_any=True)
  #- schools[i].kids_who_attend: DADict
  - other_locations: ALAddressList.using(there_are_any=True)
  - other_caretaker: ALIndividual
  - return_children_other_person: ALIndividual
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')

---
code: |
  ilao_easy_form_title = "Order of Protection"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/order-protection"
  form_name = "Order of Protection"
  al_form_type = 'new_case'
  user_ask_role = 'plaintiff'
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-OrderOfProtection'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_basic: Basic information
  - section_petitioner: People you want to protect
  - section_incidents: What happened
  - section_protections: Protections
  - section_child: About your children (optional)
  - section_property: Property details
  - section_remedies: Other remedies
  - section_respondent: About person who caused abuse
  - section_filing_info: Case info and Next steps
  - section_download: Download
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  instructions
  whats_next
  accept_terms
  who_can_be_protected
  important_op_info
  if in_illinois == False:
    not_in_illinois
  
  nav.set_section('section_basic')
  trial_court
  if jurisdiction_type.all_false():
    other_jurisdiction_location
  if relationship_type.all_false():
    other_relief
  users.gather(number=1)
  other_parties.gather(number=1)

  nav.set_section('section_petitioner')
  minor_kids_with_respondent
  protect_petitioner
  if minor_kids_with_respondent:
    shared_kids.gather()
  if protect_petitioner_kids:
    petitioner_kids.gather()
  if protect_other_hh_members:
    other_hh_members.gather()
  if protect_dependent_adult:
    dependent_adult.name.first
  if protect_high_risk_adult:
    high_risk_adult.name.first

  nav.set_section('section_incidents')
  incidents_intro
  incidents.gather()

  nav.set_section('section_protections')
  no_harassment
  stay_away
  hide_address
  users[0].address.address
  if residence_remedies == 'exclusive possession':
    exclusive_possession_reason
  if not (stay_away or no_communication or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')):
    no_stay_under_influence
  if stay_away_jobs:
    if hide_work_address == False:
      jobs[0].employer
      if stay_away_jobs_2:
        jobs[1].employer
  if stay_away_schools:
    schools[0].name
    if minor_kids_with_respondent or protect_petitioner_kids:
      if schools[0].hide:
        schools[0].type
    if stay_away_schools_2:
      schools[1].name
      if minor_kids_with_respondent or protect_petitioner_kids:
        if schools[1].hide:
          schools[1].type
  if stay_away_other:
    if hide_other_address_1:
      other_locations_hidden_description_1
    else:  
      other_locations[0].name
      if hide_other_address_2:
        other_locations_hidden_description_2
      else:
        if stay_away_other_2:
          other_locations[1].name
  if same_school:
    if same_school_restrictions != "none":
      same_school_name
    
  nav.set_section('section_child')
  if parentage == "parentage_established_other":
    parentage_other
  if primary_caretaker == "other":
    other_caretaker.name.first
    other_caretaker.address.address
  temp_custody_of_children  
  physical_care_of_children
  no_conceal_children
  no_removal_school
  keep_schools_confidential
  no_records_no_contact
  if current_possession_of_children == False:
    return_children_to
    if return_children_to == "court":
      appear_with_children_prevent
  if parenting_time != "reserve":
    if parenting_time == "restrict" or parenting_time == "deny":
      restrict_or_deny_pt_reasons
    if parenting_time == "restrict" or parenting_time == "allow":
      if pt_format == "interview":
        if pt_weekdays:
          pt_weekday_days
        if pt_weekends:
          pt_weekend_days
        if pt_holidays:
          pt_holiday_list
        pt_start_date

  nav.set_section('section_property')


  nav.set_section('section_remedies')
  if request_counseling:
    dv_counseling

  nav.set_section('section_respondent')
  knows_respondent_dob
  other_parties[0].address.address
  other_parties[0].phone_number
  if knows_respondent_work:
    other_parties[0].work_address.address
  if has_other_ops == "Yes":
    other_ops.gather()
  if has_other_cases == "Yes":
    other_cases.gather()  
  if knows_respondent_dob == "exact":  
    if other_parties[0].age_in_years() < 18:
      respondent_parent_help
      if respondent_parent_help:
        respondent_parent_name

  nav.set_section('section_filing_info')
  eop 
  case_number
  nav.set_section('section_download')  
  get_docs_screen
---
terms:
  - "advance written notice": |
      **Advance written notice** means they received a copy of the Petition for Order of Protection and Summons before the court hearing. These include the date and time of the court hearing.
---
id: welcome
question: |
  Order of Protection
subquestion: |
  Welcome to Illinois Legal Aid Online's **Order of Protection** Easy Form.

  This program makes forms that help you ask the court to order someone to stop harming or threatening you or other household members.
  
  To learn more, read ILAO's article about [**Orders of Protection**](https://www.illinoislegalaid.org/node/29806).
field: sees_nav_bar
---
id: instructions
continue button field: instructions
question: |
  Instructions
subquestion: |
  To use this program you will need: 

  * Thing 1
  * Thing 2

  EDIT: You can find this information on other court papers you have about this case. 

  Set aside 15 to 30 minutes to finish this program. You can login and save your work to return to later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some questions have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that also gives help.
---
template: help_example
subject: |
  **You can expand sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your ${ form_name } forms, you must file them with the court. This program does not file your ${ form_name } for you.
  
  Read the "How to Ask for an Order of Protection" instructions you can download at the end of this program. 
---
id: accept terms
question: |
  Terms of use
subquestion: |
  This program does not provide legal advice. It does not take the place of advice from a lawyer.

  Using this program does not create an attorney-client relationship between you and Illinois Legal Aid Online or its employees.

  ${ collapse_template(get_legal_help) }  

fields:
  - To continue, you must accept the [**terms of use**](https://www.illinoislegalaid.org/about/terms-of-use).: accept
    datatype: checkboxes
    none of the above: False
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use. 
continue button field: accept_terms
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
  
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: who can be protected
continue button field: who_can_be_protected
question: |
  Who can be protected
subquestion: |
  You can ask for an Order of Protection if you have been abused by a family or household member, such as a:
  
  * Current or ex-romantic partner,
  * Current or ex-spouse,
  * Person with whom you live or used to live,
  * The other parent of your child,
  * Relative by blood,
  * Related through a current or a prior marriage,
  * Relative of your child (includes relatives of your foster child, adopted child or prospective adopted child, or relatives of a child for whom you are the legally-appointed guardian or legally-appointed custodian), or
  * Caregiver for persons with disabilities.

  You can also ask for an Order of Protection if you are filing for any person who has been abused by a family or household member, but is unable to file on their own.
---
id: important op info
continue button field: important_op_info
question: |
  Before you get started
subquestion: |
  The person who caused the abuse is called **the Respondent**. In court, the judge will use this word to refer to the abuser. This program and the forms will do the same.

  You will need to list an address on your court forms. **If you do not want the Respondent to know where you are staying, or if you do not have a home address, you can list a different mailing address where you will receive court documents.**

  You have to include an email address on your court forms, if you have one. If you do not want to use your personal email, you can create a new email account to receive information about your case.

  **You will need to include an address where the Respondent can be found.** This is so the sheriff can deliver the court papers. Delivery of the court papers is called **service.** This might be where the Respondent lives, works, or a place where they stay. **Note: the Respondent will get a copy of all the court forms, except for the ones that are confidential like school or daycare location.**

  At the end of this program, you can file your forms by emailing them to the clerk. You can also download a copy of the forms for your records. Your forms will include instructions that will explain the next steps.

  **If you are filing your forms electronically, you will need an email address.** The email address you use will appear on your court forms. If you need to create another email account, do that now.

  **The Order of Protection is not valid until signed by a judge.** You must go to court, either in person or remotely, where a judge will decide whether or not to grant you an Order of Protection.
---
id: in illinois
question: |
  Do you want to file for an Order of Protection in Illinois?
subquestion: |
  You can file in Illinois if:

  * You live in Illinois,
  * The person you are filing against lives in Illinois,
  * The abuse took place in Illinois, or
  * You are in Illinois to avoid abuse elsewhere.
fields:
  - no label: in_illinois
    datatype: yesnoradio
---
id: not in illinois
event: not_in_illinois
question: |
  Sorry
subquestion: |
  This program is only for people who want an Order of Protection in Illinois.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: county
continue button field: case_county
question: |
  In which county will you file your ${ form_name }?
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
---
depends on:
  - trial_court_index
code: |
  trial_court = court_list.as_court('trial_court', trial_court_index)
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: jurisdiction
#continue button field: jurisdiction
question: |
  Why do you want to file in ${ trial_court.address.county } County?
fields:
  - no label: jurisdiction_type
    datatype: checkboxes
    choices:
      - I live in ${ trial_court.address.county } County.: I live here
      - The person I am filing against lives in ${ trial_court.address.county } County.: Respondent lives here
      - The abuse took place in ${ trial_court.address.county } County.: Abuse was here
      - I am in ${ trial_court.address.county } County to avoid abuse elsewhere.: Abuse was elsewhere
---
id: not proper location
event: other_jurisdiction_location
question: |
  Sorry
subquestion: |
  You can file your case in the Illinois county:
  
  * Where you live,
  * Where the person who caused the abuse lives,
  * Where the abuse occurred, or
  * Where you are staying to avoid abuse.

  If Illinois is not the right place to ask for an Order of Protection, you can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: relationship
question: |
  Relationship with the person who caused the abuse
subquestion: |
  How is the person who caused the abuse related to you or the person you want to protect? You can check more than one.
  
    ${ collapse_template(relationship_example) } 
fields:
  - no label: relationship_type
    datatype: checkboxes
    choices:
      - Spouse: se
      - Ex-spouse: xs
      - Boyfriend, girlfriend, or romantic partner (including ex-): bg
      - We have a child in common (never married): cc
      - We share or shared a living space: cs
      - Child: ch
      - Parent: pa
      - Brother, sister, or sibling: sb
      - Other family member: of
      - Step child: sc
      - Step brother, step sister, or step sibling: ss
      - Step parent: sp
      - Grandchild: gc
      - Grandparent: gp
      - In-law: il
      - Protected person has a disability and receives care from the abuser: pd
      - Person responsible for a high risk adult: pc
        help: |
          A **high risk adult with disabilities** is a person aged 18 or over whose physical or mental disability keeps them from protecting themself from abuse, neglect, or exploitation.
      - Personal assistant or caregiver to a person with a disability: pr
      - Family or household member of my foster child: f
      - Family or household member of my adopted child, or of my prospective adopted child: a
      - Family or household member of a child that I am the legally-appointed custodian of: l
---
template: relationship_example
subject: |
  **Can I see some examples?**
content: |  
  If you want an Order of Protection against your mother, you will select **Child** because you are the child of that person.
  
  If you want an Order of Protection against the father of your foster child, select **Family or household member of my foster child**.
---
id: not proper relationship
event: other_relief
question: |
  Sorry
subquestion: |
  You can file for an Order of Protection only if the person you want protected has a qualifying relationship with the abuser.
  
  A Stalking No Contact Order might work better in your situation. Read ILAO's article about [**Getting a no contact order for stalking**](https://www.illinoislegalaid.org/node/30216) to learn more.
  
buttons:
  - Exit: exit
  - Restart: restart
---
id: petitioner name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
subquestion: |
  Enter your name, even if you are filing the Order of Protection on behalf of your family or household members. In court and on the forms, you will be listed as the **Petitioner**.
fields:
  - code: |
      users[0].name_fields()
---
id: respondent name
sets:
    - other_parties[0].name.first
    - other_parties[0].name.last
    - other_parties[0].name.middle
    - other_parties[0].name.suffix
question:  |
  Who is the person you want an Order of Protection against?
subquestion: |
  This person will be called the **Respondent** in court and on the forms.
fields:
  - code: |
      other_parties[0].name_fields()
---
id: know respondent birthdate
question: |
  Do you know ${other_parties[0].name.full(middle="full")}'s birthdate?
fields:   
  - no label: knows_respondent_dob
    datatype: radio
    choices:
      - Yes, I will enter the date.: exact
      - I know some of it.: some
        help: |
          For example, "June 3rd" or "Summer of 1990."
      - I don't know it.: idk
  - ${other_parties[0].name.full(middle="full")}'s date of birth: other_parties[0].birthdate
    datatype: date
    max: ${ today().format("yyyy-MM-dd") }
    show if: 
      variable: knows_respondent_dob
      is: exact
  - What you know about ${other_parties[0].name.full(middle="full")}'s date of birth: other_parties[0].birthdate_info
    maxlength: 25
    show if:
      variable: knows_respondent_dob
      is: some

  
---
id: minor kids with respondent
question: |
  Do you have any minor children with ${other_parties[0].name.full(middle="full")}?
subquestion:
  Minor children are under 18.
field: minor_kids_with_respondent
choices:
  - Yes: True
  - No: False
---
depends on: minor_kids_with_respondent
code: |
  if minor_kids_with_respondent == False:
    protect_shared_kids = False
---
reconsider: True
code: |
  protected_minor_kids_list = []
  if minor_kids_with_respondent:
    if shared_kids.number() > 0:
      for person in shared_kids:
        if person.protect == True:
          protected_minor_kids_list.append( person.name.full(middle="full") )
#---
#sets:
#  - protect_shared_kids
#reconsider: True
#code: |
#  if minor_kids_with_respondent:
#    protect_shared_kids = False
#    for person in shared_kids:
#      if person.protect:
#        protect_shared_kids = True

---
id: protected parties
question: |
  Who do you want protected by this Order of Protection?
subquestion: |
  Check all that apply.
fields:
  - Me: protect_petitioner
    datatype: yesnowide
    default: True
  - Minor children I have with ${other_parties[0].name.full(middle="full")}: protect_shared_kids
    datatype: yesnowide
    show if:
      code: |
        minor_kids_with_respondent == True
  - My minor children I **did not** have with ${other_parties[0].name.full(middle="full")}: protect_petitioner_kids
    datatype: yesnowide
  - A dependent adult: protect_dependent_adult
    datatype: yesnowide
    help: |
      A **dependent adult** is an elder adult who can't protect themself from abuse by a family or household member.
  - A high risk adult with disabilities: protect_high_risk_adult
    datatype: yesnowide
    help: |
      A **high risk adult with disabilities** is a person aged 18 or over whose physical or mental disability keeps them from protecting themself from abuse, neglect, or exploitation.
  - Other household members: protect_other_hh_members
    datatype: yesnowide
    help: |
      **Other household members** include spouses, former spouses, parents, children, stepchildren and other persons related by blood or by present or prior marriage, persons who share or formerly shared a common dwelling, persons who have or allegedly have a child in common, persons who share or allegedly share a blood relationship through a child, persons who have or have had a dating or engagement relationship, persons with disabilities and their personal assistants, and caregivers. 
validation code: |
  if not (protect_petitioner or protect_shared_kids or protect_petitioner_kids or protect_dependent_adult or protect_high_risk_adult or protect_other_hh_members):
    validation_error("You need to select at least one choice to continue.", field="protect_other_hh_members")
---
sets:
  - shared_kids[0].name.first
  - shared_kids[0].name.middle
  - shared_kids[0].name.last
  - shared_kids[0].name.suffix
id: name of first child with respondent
question: |
  Who is your minor child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  The statewide Order of Protection forms have space for up to 4 minor children with the Respondent.
fields:
  - code: |
      shared_kids[0].name_fields()
---
id: names of other children with respondent
sets:
  - shared_kids[i].name.first
  - shared_kids[i].name.middle
  - shared_kids[i].name.last
  - shared_kids[i].name.suffix
question: |
  Who is your ${ ordinal(i) } minor child with ${other_parties[0].name.full(middle="full")}?
fields:
  - code: |
      shared_kids[i].name_fields()
---
id: any other children with respondent
question: |
  Do you have another minor child with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  The statewide Order of Protection forms have space for up to 4 minor children with the Respondent.
  % if len(shared_kids.elements) >= 1:  
  So far you have told us about ${comma_and_list(shared_kids.complete_elements().full_names())}.
  % endif
fields:
  - "Anyone else?": shared_kids.there_is_another
    datatype: yesnoradio
---
sets:
  - petitioner_kids[0].name.first
  - petitioner_kids[0].name.middle
  - petitioner_kids[0].name.last
  - petitioner_kids[0].name.suffix
id: name of first child not with respondent
question: |
  Who is your minor child **not with** ${other_parties[0].name.full(middle="full")} you want protected by this order?
subquestion: |
  If you want to include more than one, you can enter their names on following screens.
fields:
  - code: |
      petitioner_kids[0].name_fields()
---
id: names of other children not with respondent
sets:
  - petitioner_kids[i].name.first
  - petitioner_kids[i].name.middle
  - petitioner_kids[i].name.last
  - petitioner_kids[i].name.suffix
question: |
  Who is your ${ ordinal(i) } minor child **not with** ${other_parties[0].name.full(middle="full")}  you want protected by this order?
fields:
  - code: |
      petitioner_kids[i].name_fields()
---
id: any other children not with respondent
question: |
  Do you have another minor child **not with** ${other_parties[0].name.full(middle="full")} you want protected by this order?
subquestion: |
  % if len(petitioner_kids.elements) >= 1:  
  So far you have told us about ${comma_and_list(petitioner_kids.complete_elements().full_names())}.
  % endif
fields:
  - "Anyone else?": petitioner_kids.there_is_another
    datatype: yesnoradio
---
sets:
  - other_hh_members[0].name.first
  - other_hh_members[0].name.middle
  - other_hh_members[0].name.last
  - other_hh_members[0].name.suffix
id: name of first other household member
question: |
  Who is the household member you want protected by this order?
subquestion: |
  If you wanto to include more than one, you can enter their names on following screens.
fields:
  - code: |
      other_hh_members[0].name_fields()
---
id: names of other household members
sets:
  - other_hh_members[i].name.first
  - other_hh_members[i].name.middle
  - other_hh_members[i].name.last
  - other_hh_members[i].name.suffix
question: |
  What is the name of the ${ ordinal(i) } household member you want protected by this order?
fields:
  - code: |
      other_hh_members[i].name_fields()
---
id: any other household members
question: |
  Do you have another household member you want protected by this order?
subquestion: |
  % if len(other_hh_members.elements) >= 1:  
  So far you have told us about ${comma_and_list(other_hh_members.complete_elements().full_names())}.
  % endif
fields:
  - "Anyone else?": other_hh_members.there_is_another
    datatype: yesnoradio
---
id: minor child info
generic object: ALIndividual
question: |
  Tell us more about ${ x.name.full(middle="full")}
fields:
  - Date of birth: x.birthdate
    datatype: date
    max: ${ today().format("yyyy-MM-dd") }
  - State of residence: x.address.state
    code: states_list()
  - Include as a protected person?: x.protect
    datatype: yesnoradio
---
code: |
  shared_kids[i].name.first
  shared_kids[i].birthdate
  shared_kids[i].complete = True
---
code: |
  if shared_kids.number_gathered() >= 4:
    shared_kids.there_is_another = False
---
sets:
  - dependent_adult.name.first
  - dependent_adult.name.middle
  - dependent_adult.name.last
  - dependent_adult.name.suffix
id: name of dependent adult
question: |
  Who is the dependent adult you want protected by this order?
fields:
  - code: |
      dependent_adult.name_fields()
---
sets:
  - high_risk_adult.name.first
  - high_risk_adult.name.middle
  - high_risk_adult.name.last
  - high_risk_adult.name.suffix
id: name of high risk adult
question: |
  Who is the high risk adult you want protected by this order?
fields:
  - code: |
      high_risk_adult.name_fields()
---
id: order type
question: |
  Which type of Order of Protection do you want against ${other_parties[0].name.full(middle="full")}?
fields:
  - Emergency: eop
    datatype: yesnowide
    help: |
      **Emergency Order of Protection**

      * Judge can give this order on the same day you file, without notifying ${other_parties[0].name.full(middle="full")}
      * Lasts for 14 - 21 days
      * After ${other_parties[0].name.full(middle="full")} is served with court papers, you can ask for a long-term (Plenary) Order of Protection
  - Plenary: pop
    datatype: yesnowide
    help: |
      **Plenary (long-term) Order of Protection**
          
      * Judge can give this order on a later date, after ${other_parties[0].name.full(middle="full")} has been notified
      * Lasts for up to 2 years
      * ${other_parties[0].name.full(middle="full")} will have a chance to participate in the court case
validation code: |
  if not (eop or pop):
    validation_error("You need to select at least one choice to continue.", field="pop")

---
id: other ops
question: |
  Other Orders of Protection
subquestion: |
  Is there now, or has there ever been, an Order of Protection in any state against ${other_parties[0].name.full(middle="full")} involving you or other people you want to protect in this Order?
fields:
  - Other Orders of Protection?: has_other_ops
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know: I don't know
#  - How many?: other_op_total
#    datatype: number
#    max: 9
#    validation messages:
#      max: |
#        You can list up to 9 other Orders of Protection on the forms.
#    show if: 
#      variable: has_other_ops
#      is: True
---
id: other ops detail
question: |
  Tell us about the ${ ordinal(i) } Order of Protection
fields:
  - Names of people involved: other_ops[i].name.text
  - State: other_ops[i].state
    code: |
      states_list()
  - County: other_ops[i].county
  - Year: other_ops[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
---
id: more ops
question: |
  Are there any more Orders of Protection you would like to list?
field: other_ops.there_is_another
choices:
  - Yes: True
  - No: False

---
id: other cases
question: |
  Other court cases
subquestion: |
  Are there now, or have there ever been, any other court cases (civil or criminal) involving ${other_parties[0].name.full(middle="full")} and you or other people you want to protect in this Order?
  Examples include divorce, custody, child support, paternity, parenting time, guardianship, adoption, or abuse and neglect cases.
  Note: do not include other Orders of Protection.
fields:
  - Other cases?: has_other_cases
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know: I don't know
#  - How many?: other_cases_total
#    datatype: number
#    max: 9
#    validation messages:
#      max: |
#        You can list up to 9 other court cases on the forms.
#    show if: 
#      variable: has_other_cases
#      is: True
---
id: other cases detail
question: |
  Tell us about the ${ ordinal(i) } court case
fields:
  - Type of court case: other_cases[i].name.text
    help: |
      Examples include divorce, custody, child support, paternity, parenting time, guardianship, adoption, or abuse and neglect cases.
  - State: other_cases[i].state
    code: |
      states_list()
  - County: other_cases[i].county
  - Year: other_cases[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
---
id: more cases
question: |
  Are there any more court cases you would like to list?
field: other_cases.there_is_another
choices:
  - Yes: True
  - No: False
---
id: incidents intro
continue button field: incidents_intro
question: |
  You can do this
subquestion: |
  It can be hard, but it is important to list the full history of abuse in your petition.

  Start with what happened **most recently**.

  Be sure to include the **most severe** abuse, even if it happened long ago.

  Explain **how the abuse affected you**, even if the abuse was emotional, verbal, financial, or controlling.

  You can include any past abuse and any criminal convictions that resulted.
---
id: incidents detail
question: |
  Tell us about the ${ ordinal(i) } incident of abuse
subquestion: |
  Try to be specific about:
  
  * What ${other_parties[0].name.full(middle="full")} did, and
  * The effect the abuse had on you or the other survivors.
  
  For repeated abuse, you can say things like "weekly" for the date or "anytime I work late" for the time. 
  
  ${ collapse_template(incidents_help) }  

fields:
  - Date: incidents[i].date
    maxlength: 20
  - Time: incidents[i].time
    maxlength: 20
  - What happened: incidents[i].name.text
    input type: area
    rows: 12
    maxlength: 875

---
template: incidents_help
subject: |
  **What if I don't remember the date and time?**
content: |  
  If you don't remember the exact date, enter the month and year.  

  If you don't remember the exact time, enter "morning" or "afternoon" or "night."
---
id: more cases
question: |
  Are there any more events of abuse you would like to list?
field: incidents.there_is_another
choices:
  - Yes: True
  - No: False
---
id: no abuse
question: |
  What do you want the court to order ${other_parties[0].name.full(middle="full")} to not do?
subquestion: |
  This includes ordering ${other_parties[0].name.full(middle="full")} to not to threaten to do these things.

  Check all that apply.
fields:
  - Harassment: no_harassment
    datatype: yesnowide
    help: |
      **Harassment** means knowing conduct which is not necessary to accomplish a purpose that is reasonable under the circumstances, would cause a reasonable person emotional distress, and does cause emotional distress to Petitioner.
  - Physical abuse: no_physical
    datatype: yesnowide
    help: |
      **Physical abuse** includes sexual abuse and means any of the following:

      * Knowing or reckless use of physical force, confinement or restraint, 
      * Knowing, repeated and unnecessary sleep deprivation, or
      * Knowing or reckless conduct which creates an immediate risk of physical harm.
  - Stalking: no_stalking
    datatype: yesnowide
    help: |
      **Stalking** means knowingly and without lawful justification, on at least two (2) separate occasions, following another person or placing the person under surveillance or any combination thereof and:
      
      * At any time transmitting a threat of immediate or future bodily harm, sexual assault, confinement or restraint and the threat is directed towards that person or a family member of that person,
      * Placing that person in reasonable apprehension of immediate or future bodily harm, sexual assault, confinement or restraint, or
      * Placing that person in reasonable apprehension that a family member will receive immediate or future bodily harm, sexual assault, confinement, or restraint.
  - Willful deprivation: no_willful
    datatype: yesnowide
    help: |
      **Willful deprivation** means willfully denying a person who because of age, health or disability requires medication, medical care, shelter, food, therapeutic device, or other physical assistance, and thereby exposing that person to the risk of physical, mental or emotional harm, except with regard to medical care or treatment when the dependent person has expressed an intent to forego such medical care or treatment. This paragraph does not create any new affirmative duty to provide support to dependent persons.
  - Intimidation of a dependent: no_intimidation
    datatype: yesnowide
    help: |
      **Intimidation of a dependent** means subjecting a person who is dependent because of age, health or disability to participation in or the witnessing of: physical force against another or physical confinement or restraint of another which constitutes physical abuse as defined in this Act, regardless of whether the abused person is a family or household member.
  - Exploitation of a high-risk adult with disabilities: no_exploitation
    datatype: yesnowide
    help: |
      **Exploitation** means the illegal, including tortious, use of a high-risk adult with disabilities or of the assets or resources of a high-risk adult with disabilities. Exploitation includes, but is not limited to, the misappropriation of assets or resources of a high-risk adult with disabilities by undue influence, by breach of a fiduciary relationship, by fraud, deception, or extortion, or the use of such assets or resources in a manner contrary to law.
  - Neglect of a high-risk adult with disabilities: no_neglect
    datatype: yesnowide
    help: |
      **Neglect** means the failure to exercise that degree of care toward a high-risk adult with disabilities which a reasonable person would exercise under the circumstances and includes but is not limited to:
      
      * The failure to take reasonable steps to protect a high-risk adult with disabilities from acts of abuse,
      * The repeated, careless imposition of unreasonable confinement,
      * The failure to provide food, shelter, clothing, and personal hygiene to a high-risk adult with disabilities who requires such assistance,
      * The failure to provide medical and rehabilitative care for the physical and mental health needs of a high-risk adult with disabilities, or
      * The failure to protect a high-risk adult with disabilities from health and safety hazards.
  - Interference with personal liberty: no_interference
    datatype: yesnowide
    help: |
      **Interference with personal liberty** means committing or threatening physical abuse, harassment, intimidation or willful deprivation so as to compel another to engage in conduct from which she or he has a right to abstain or to refrain from conduct in which she or he has a right to engage.
---
id: stay away
question: |
  Do you want the court to order ${other_parties[0].name.full(middle="full")} to stay away and not communicate with people protected by this order?
subquestion: |
  * If ordered to **stay away** from Petitioner, Respondent must not have any physical, non-physical, direct or indirect contact with Petitioner.
  * If ordered to **not communicate** with Petitioner, communication includes oral communication, written communication, sign language, telephone and cell phone calls, faxes, texts, tweets, emails, posts, or communication by any other social media, and all other communication with Petitioner. This also includes contact or communication through others who may not know about the Order of Protection.
  
  Check all that apply.
fields:
  - Stay away at all times: stay_away
    datatype: yesnowide
  - How far do you want ${other_parties[0].name.full(middle="full")} to stay away, in feet? (optional): stay_away_distance
    datatype: number
    required: False
    show if: 
      variable: stay_away
      is: True
    help: |
      A car is about 15 feet long, and a basketball court is about 90 feet long.
  - No communication: no_communication
    datatype: yesnowide
---
id: no stay under influence
question: |
  Do you want the court to order ${other_parties[0].name.full(middle="full")} to stay away from and not be at your residence while under the influence?
subquestion: |
  Select **Yes** if when ${other_parties[0].name.full(middle="full")} is under the influence of drugs or alcohol, they are a threat to you or your children.
fields:
  - No entry or presence while under the influence: no_stay_under_influence
    datatype: yesnoradio

---
id: hide address
question: |
  Do you want to keep your address hidden?
subquestion: |
  You do not need to list where you are staying on your court papers. You can use an address where you can receive court notices instead.
field: hide_address
choices:
  - Yes: True
  - No: False
---
id: get address
question: |
  % if hide_address:
  What is your mailing address?
  % else:
  What is your home address?
  % endif
subquestion: |
  % if hide_address:
  **This address will appear on your court papers.** You may receive court notices and documents about your case at this address.
  % else:
  **This address will appear on your court papers.** If you do not want this, click **< Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[0].address.zip
---
id: residence remedies
question: |
  What do you want the court to order about where you are living?
subquestion: |
  This does not affect who owns the property, only who gets to use or occupy it.
  
fields:
  - no label: residence_remedies
    datatype: radio
    choices:
    - I want **exclusive possession** of my residence, and ${other_parties[0].name.full(middle="full")} should not be allowed to enter or stay there.: exclusive possession
    - I want ${other_parties[0].name.full(middle="full")} to **provide a different place** for me and the protected people to live because we share a residence.: provide alternate housing
    - None of the above: none
  
#  
#fields:
#  - I want **exclusive possession** of my residence, and ${other_parties[0].name.full(middle="full")} should not be allowed to enter or stay there.: exclusive_possession
#    datatype: yesnowide
#  #- I want ${other_parties[0].name.full(middle="full")} **not to stay** at my residence while under the influence of drugs or alcohol. This would be a threat to the safety or well-being of myself or my children.: no_stay_under_influence
#  #  datatype: yesnowide
#  #  hide if: 
#  #    code: |
#  #      any((no_communication, stay_away)) 
#  - I want ${other_parties[0].name.full(middle="full")} to **provide a different place** for me and the protected people to live because we share a residence.: provide_alt_housing
#    datatype: yesnowide
#  - None of the above: no_residence_remedy
#    datatype: yesnowide

# alt question radio buttons but no show if functionality
#---
#id: residence remedies
#question: |
#  What do you want the court to order about where you are living?
#subquestion: |
#  This does not affect who owns the property, only who gets to use or occupy it.
#field: residence_remedy
#choices:
#  - I want **exclusive possession** of my residence, and ${other_parties[0].name.full(middle="full")} should not be allowed to enter or stay there.: exclusive_possession
#  - I want ${other_parties[0].name.full(middle="full")} **not to stay** at my residence while under the influence of drugs or alcohol. This would be a threat to the safety or well-being of myself or my children.: no_stay_under_influence
#    hide if: 
#      code: |
#        any((no_communication, stay_away)) 
#  - I want ${other_parties[0].name.full(middle="full")} to **provide a different place** for me and the protected people to live because we share a residence.: provide_alt_housing
#  - None of the above: none
#
---
id: exclusive possession reason
question: |
  Why should the court give you exclusive possession of your residence?
field: exclusive_possession_reason
choices:
  - I have a right to occupy the residence and ${other_parties[0].name.full(middle="full")} has no right.: respondent_no_right_to_stay
  - Both of us have a right to occupy the residence, but it would be harder on me to leave.: both_parties_right_to_stay

---
id: respondent info
question: |
  Tell us more about ${other_parties[0].name.full(middle="full")}
subquestion: |
  If you do not know, leave these blank.
fields:
  - Phone: other_parties[0].phone_number
    datatype: al_international_phone
    required: False
  - Email address: other_parties[0].email    
    datatype: email
    required: False
---
id: respondent address
question: |
  What is ${other_parties[0].name.full(middle="full")}'s home address?
subquestion: |
  If you do not know, leave these blank.
fields:
  - Street address: other_parties[0].address.address
    address autocomplete: True
    required: False
  - Address line 2: other_parties[0].address.unit
    required: False
  - City: other_parties[0].address.city
    required: False
  - State: other_parties[0].address.state
    code: |
      states_list()
    required: False
  - ZIP code: other_parties[0].address.zip
    required: False

---
id: respondent work question
question: |
  Do you know ${other_parties[0].name.full(middle="full")}'s work information?
fields:
  - Know ${other_parties[0].name.full(middle="full")}'s work info?: knows_respondent_work
    datatype: yesnoradio
---
id: respondent work info
question: |
  Tell us about ${other_parties[0].name.full(middle="full")}'s job
subquestion: |
fields:
  - Employer or company: other_parties[0].employer
  - Street address: other_parties[0].work_address.address
    address autocomplete: True
  - Address line 2: other_parties[0].work_address.unit
    required: False
  - City: other_parties[0].work_address.city
  - State: other_parties[0].work_address.state
    code: |
      states_list()
  - ZIP code: other_parties[0].work_address.zip
---
id: stay away work question
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to stay away from where you work?
subquestion: |
  The statewide Order of Protection forms have space for up to 2 places of employment.
  
  If you do not want to list where you work on your court papers, you can hide it on the next screen.
fields:
  - no label: stay_away_jobs
    datatype: yesnoradio
---
id: hide work address
question: |
  Do you want to keep your work address hidden?
subquestion: |
  You do not need to list where you work on your court papers. If you select **Yes**, your workplace will be listed as, "Wherever protected party may be employed."
field: hide_work_address
choices:
  - Yes: True
  - No: False
---
id: stay away work info
question: |
  % if i==0:
  Tell us about your job
  % else:
  Tell us about your other job
  % endif
  
  **This address will appear on your court papers.** If you do not want this, click **< Back** to keep your work address hidden.

fields:
  - Employer or company: jobs[i].employer
  - Street address: jobs[i].address
    address autocomplete: True
  - Address line 2: jobs[i].unit
    required: False
  - City: jobs[i].city
  - State: jobs[i].state
    code: |
      states_list()
  - ZIP code: jobs[i].zip
---
id: another stay away job
question: |
  Do you have another job you want ${other_parties[0].name.full(middle="full")} to stay away from?
fields:
  - no label: stay_away_jobs_2
    datatype: yesnoradio
---
id: stay away school question
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to stay away from any schools, kindergartens, or daycare centers?
subquestion: |
  The statewide Order of Protection forms have space for up to 2 schools or daycares.
  
  Note: You can keep the name and address of these schools confidential.
fields:
  - no label: stay_away_schools
    datatype: yesnoradio
---
id: stay away school info
question: |
  % if i==0:
  Tell us about the school, kindergarten, or daycare
  % else:
  Tell us about the other school, kindergarten, or daycare
  % endif
fields:
  - School or daycare name: schools[i].name
  - Street address: schools[i].address
    address autocomplete: True
  - Address line 2: schools[i].unit
    required: False
  - City: schools[i].city
  - State: schools[i].state
    code: |
      states_list()
  - ZIP code: schools[i].zip
  - Hide this information from ${ other_parties[0].name.full(middle="full") }?: schools[i].hide
    datatype: yesnoradio
    show if: 
      code: |
        minor_kids_with_respondent or protect_petitioner_kids
    help: |
      If you hide this information, it will not be listed on your Petition. You will get a confidential form that you will file with the court clerk.
---
id: another stay away school
question: |
  Do you have another school or daycare you want ${other_parties[0].name.full(middle="full")} to stay away from?
fields:
  - no label: stay_away_schools_2
    datatype: yesnoradio
---
# this depends on doesn't seem to be triggering on name change. hoping it would for kids_who_attend
depends on:
  - shared_kids[i].name
  - shared_kids[i].name.middle
  - shared_kids[i].name.last
  - shared_kids[i].name.suffix
reconsider: True
code: |
  minor_kids_list = []
  if minor_kids_with_respondent:
    if shared_kids.number() > 0:
      for person in shared_kids:
        minor_kids_list.append( {person.name.full(middle="full"): person.name.full(middle="full") } )
  if protect_petitioner_kids:
    if petitioner_kids.number() > 0:
      for person in petitioner_kids:
        minor_kids_list.append( {person.name.full(middle="full"): person.name.full(middle="full") } )
---
id: confidential school details
question: |
  Details about ${ schools[i].name }
fields:
  - Is ${ schools[i].name } a school or a daycare?: schools[i].type
    datatype: radio
    choices:
      - School: school
      - Daycare: daycare
  - Children who attend ${ schools[i].name}: schools[i].kids_who_attend
    datatype: checkboxes
    none of the above: False
    code: minor_kids_list
    show if:
      code: |
        shared_kids.number() > 0 or protect_petitioner_kids == True
---
id: stay away other location question
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to stay away from other places?
subquestion: |
  The statewide Order of Protection forms have space for up to 2 other places.
fields:
  - no label: stay_away_other
    datatype: yesnoradio
---
id: hide other location 1
question: |
  Do you want to hide the address of this location?
subquestion: |
  You do not need to list the exact location or address on your court papers. If you select **Yes**, you can enter a general description of the place.
field: hide_other_address_1
choices:
  - Yes: True
  - No: False
---
id: hide other location 2
question: |
  Do you want to hide the address of this second location?
subquestion: |
  You do not need to list the exact location or address on your court papers. If you select **Yes**, you can enter a general description of the place.
field: hide_other_address_2
choices:
  - Yes: True
  - No: False
---
id: stay away other location 1 name
question: |
  Tell us about the place you want ${other_parties[0].name.full(middle="full")} to stay away from
subquestion: |
  This description will appear on your court papers.
fields:
  - Description: other_locations_hidden_description_1
---
id: stay away other location 2 name
question: |
  Tell us about the second place you want ${other_parties[0].name.full(middle="full")} to stay away from
subquestion: |
  This description will appear on your court papers.
fields:
  - Description: other_locations_hidden_description_2

---
id: stay away other location info
question: |
  % if i==0:
  Tell us about the place you want ${other_parties[0].name.full(middle="full")} to stay away from
  % else:
  Tell us about the second place you want ${other_parties[0].name.full(middle="full")} to stay away from
  % endif
fields:
  - Name: other_locations[i].name
  - Street address: other_locations[i].address
    address autocomplete: True
  - Address line 2: other_locations[i].unit
    required: False
  - City: other_locations[i].city
  - State: other_locations[i].state
    code: |
      states_list()
  - ZIP code: other_locations[i].zip
---
id: another stay away location
question: |
  Do you have another place you want ${other_parties[0].name.full(middle="full")} to stay away from?
fields:
  - no label: stay_away_other_2
    datatype: yesnoradio
---
id: attend same school
question: |
  Does ${other_parties[0].name.full(middle="full")} attend the same school as you or any of the people you want to protect?
fields:
  - no label: same_school
    datatype: yesnoradio
---
id: school restrictions
question: |
  What should the court order ${other_parties[0].name.full(middle="full")} to do at the school?
fields:
  - no label: same_school_restrictions
    datatype: radio
    choices:
      - ${other_parties[0].name.full(middle="full")} should not attend the school while I or other protected people are enrolled there.: not attend
      - ${other_parties[0].name.full(middle="full")} should change their placement or program at the school, as determined by the public school district or private school.: change program
      - ${other_parties[0].name.full(middle="full")} should not be present in certain parts of the school.: not present in parts
        help: |
          If you select this, you can list the parts of the school where ${other_parties[0].name.full(middle="full")} should not go.
      - I don't want the court to order any school restrictions on ${other_parties[0].name.full(middle="full")}.: none
  - Parts of the school where ${other_parties[0].name.full(middle="full")} should not go: parts_of_school
    show if: 
      variable: same_school_restrictions
      is: "not present in parts"
      
---
id: same school name
question: |
  What is the name of the school ${other_parties[0].name.full(middle="full")} attends?
subquestion: |
  This can be an elementary, middle, or high school. 
fields:
  - School name: same_school_name
    maxlength: 50

---
id: minor respondent parents help
question: |
  Do you want ${other_parties[0].name.full(middle="full")}'s parent or guardian help them follow the Order of Protection?
fields:
  - no label: respondent_parent_help
    datatype: yesnoradio
---
id: minor respondent parent info
question: |
  Requirements for ${other_parties[0].name.full(middle="full")}'s parent or guardian
fields:
  - Parent or guardian name: respondent_parent_name
    maxlength: 60
    required: False
  - What should ${other_parties[0].name.full(middle="full")}'s parent or guardian be ordered to do?: respondent_parent_order
    input type: area
    rows: 3
    maxlength: 150

---
id: request counseling for respondent
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to get counseling?
subquestion: |
  The court can order evaluation and treatment only after ${other_parties[0].name.full(middle="full")} has received written notice or attended the court hearing where this is decided.

  ${ collapse_template(counseling_help) }  
fields:
  - no label: request_counseling
    datatype: yesnoradio
---
template: counseling_help
subject: |
  **What kinds of counseling are available?**
content: |  
  The court can order:
  
  * Domestic violence partner abuse counseling,
  * An Alcohol and substance abuse evaluation and counseling,
  * A Mental health evaluation and counseling, and
  * Other counseling that may be appropriate.
---
id: counseling types
question: |
  What kinds of counseling do you want the court to order ${other_parties[0].name.full(middle="full")} to participate in and complete?
subquestion: |
  The court can order evaluation and treatment only after ${other_parties[0].name.full(middle="full")} has received **{advance written notice}** or attended the court hearing where this is decided.
  
  Check all that apply.
fields:
  - Domestic violence partner abuse counseling: dv_counseling
    datatype: yesnowide
  - Alcohol and substance abuse evaluation and counseling: alcohol_counseling
    datatype: yesnowide
  - Mental health evaluation and counseling: mental_health_counseling 
    datatype: yesnowide
  - Other counseling: other_counseling
    datatype: yesnowide
  - Other counseling ${other_parties[0].name.full(middle="full")} should complete: other_counseling_text
    input type: area
    rows: 3
    maxlength: 150
    show if: other_counseling

---
id: parentage established question
question: |
  Has legal parentage of your minor children with ${other_parties[0].name.full(middle="full")} been established?
subquestion: |
  Parentage can be established in a few ways.
  
  Children who were born before, during or within 300 days after the marriage, are considered legal children of the married couple.
  
  If the parents are not married, parentage can be established by the following:  
  
  * Parents can be listed on the birth certificate,
  * Parents can sign a Voluntary Acknowledgment of Paternity, also called a VAP,
  * A court or administrative order can establish parentage, or
  * In rare cases, another legal process can established parentage.
fields:
  - no label: parentage
    datatype: radio
    choices:
      - Yes, the children were born before, during, or within 300 days of our marriage.: parentage_established_by_marriage
      - Yes, we are not married but parentage was established. I will explain on the next screen.: parentage_established_other
      - No, we are not married and parentage has not been established.: parentage_not_established
---
id: parentage method
question: |
  How was legal parentage of your minor children with ${other_parties[0].name.full(middle="full")} established?
fields:
  - We are listed on the birth certificate.: parentage_birth_certificate
    datatype: yesnowide
  - We signed a Voluntary Acknowledgment of Paternity, also called a VAP.: parentage_vap 
    datatype: yesnowide
  - A court or administrative order established us as the legal parents of the children.: parentage_order 
    datatype: yesnowide
  - Legal parentage was established another way. I will explain below.: parentage_other
    datatype: yesnowide
  - Other parentage method: other_parentage_method
    input type: area
    rows: 3
    maxlength: 150
    show if: parentage_other
---
id: primary caretaker
question: |
  Who is the primary caretaker of the children with ${other_parties[0].name.full(middle="full")}?
fields:
  - no label: primary_caretaker
    datatype: radio
    choices:
      - I am.: petitioner
      - ${other_parties[0].name.full(middle="full")} is.: respondent
      - Another person is the primary caretaker of the children with ${other_parties[0].name.full(middle="full")}.: other
---
sets:
  - other_caretaker.name.first
  - other_caretaker.name.middle
  - other_caretaker.name.last
  - other_caretaker.name.suffix
id: other caretaker name
question: |
  Who is the primary caretaker of the children with ${other_parties[0].name.full(middle="full")}?
fields:
  - code: |
      other_caretaker.name_fields()
---
id: other caretaker address
question: | 
  What is ${ other_caretaker.name.full(middle="full") }'s address?
fields:
  - Street address: other_caretaker.address.address
    address autocomplete: True
  - Address line 2: other_caretaker.address.unit
    required: False
  - City: other_caretaker.address.city
  - State: other_caretaker.address.state
    code: |
      states_list()
  - ZIP code: other_caretaker.address.zip
---
id: temporary custody
question: |
  Do you want the court to grant you temporary decisionmaking responsibility of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  This used to be called "custody" in Illinois.
  
  Note: The court can order this only after ${other_parties[0].name.full(middle="full")} received **{advance written notice}** or attended the court hearing where this is decided.

fields:
  - no label: temp_custody_of_children
    datatype: yesnoradio
---
id: physical care and possession of children
question: |
  Do you want the court to grant you physical care and possession of the children you have with ${other_parties[0].name.full(middle="full")}?
subquestion: |
  Note: This is **not** the same as primary decisionmaking responsibility, or what used to be called "custody" in Illinois. This just means getting the children back to you.
fields:
  - no label: physical_care_of_children
    datatype: yesnoradio
---
id: concealment of children
question: |
  Do you want the court to order that ${other_parties[0].name.full(middle="full")} cannot hide or remove the children from Illinois?
subquestion: |
  You may want this if ${other_parties[0].name.full(middle="full")} has made threats or attempts to unlawfully remove the children.
fields:
  - no label: no_conceal_children
    datatype: yesnoradio    
---
id: no removal of children from petitioner or school
question: |
  Do you want the court to order that ${other_parties[0].name.full(middle="full")} cannot remove the children from your care or from a school or daycare?
subquestion: |
  You can keep the name and location of the school or daycare hidden from ${other_parties[0].name.full(middle="full")}.
fields:
  - no label: no_removal_school
    datatype: yesnoradio    
---
id: confidential schools
question: |
  Do you want the court to keep the school or daycare information confidential?
subquestion: |
  % if schools[0].hide and schools[1].hide:
  You are listing ${schools[0].name} and ${ schools[1].name } as confidential. 
  % elif schools[0].hide:
  You are listing ${schools[0].name} as confidential.
  % elif schools[1].hide:
  You are listing ${ schools[1].name } as confidential.
  % else:
  You are not listed any school locations as confidential.
  % endif

  If you want to change confidential schools, edit information about schools in [**Protections**](${ url_action('section_protections') }) section.
fields:
  - no label: keep_schools_confidential
    datatype: yesnoradio    
---
id: have current possession of children
question: |
  Do you currently have physical care and possession of your children with  ${other_parties[0].name.full(middle="full")}?
subquestion: |
  The court can order ${other_parties[0].name.full(middle="full")} to return the children to you, to another person, or to bring the children to court.
fields:
  - no label: current_possession_of_children
    datatype: yesnoradio
---
id: children returned to whom
question: |
  Who should ${other_parties[0].name.full(middle="full")} return the children to?
fields:
  - no label: return_children_to
    datatype: radio
    choices:
      - ${other_parties[0].name.full(middle="full")} should bring the children to court.: court
      - ${other_parties[0].name.full(middle="full")} should return the children to me.: petitioner
      - ${other_parties[0].name.full(middle="full")} should return the children to someone else.: other
  - note: |
      Enter the name of the person ${other_parties[0].name.full(middle="full")} should return the children to. 
    show if:
      variable: return_children_to
      is: "other"
  - First: return_children_other_person.name.first
    show if:
      variable: return_children_to
      is: "other"
  - Middle: return_children_other_person.name.middle
    required: False
    show if:
      variable: return_children_to
      is: "other"
  - Last: return_children_other_person.name.last
    show if:
      variable: return_children_to
      is: "other"
  - Suffix: return_children_other_person.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: return_children_to
      is: "other"
---
id: reason respondent should bring childrent to court
question: |
  Why should ${other_parties[0].name.full(middle="full")} be ordered to bring the children to court?
subquestion: |
  Check all that apply.
fields:
  - To prevent abuse, neglect, removal, or concealment of the children: appear_with_children_prevent
    datatype: yesnowide
  - To return the children to you: appear_with_children_return
    datatype: yesnowide
  - To permit a court-ordered interview or examination of the children or of ${other_parties[0].name.full(middle="full")}: appear_with_children_exam
    datatype: yesnowide
---
id: childrens records
question: |
  Do you want the court to prevent ${other_parties[0].name.full(middle="full")} from accessing your children's records?
subquestion: |
  These include school records, health care records, or any other records. 

  If you want to deny ${other_parties[0].name.full(middle="full")} accessing to your children's records, select the reasons why. Check all that apply.
fields:
  - Yes. I am requesting that ${other_parties[0].name.full(middle="full")} not be allowed to have contact with the minor children.: no_records_no_contact
    help: |
      Select this if you asked the court to prevent ${other_parties[0].name.full(middle="full")} from having any contact with the children.
    datatype: yesnowide
  - Yes. My address is not included on the court forms to avoid further abuse.: no_records_hide_address
    help: |
      Select this if you are hiding your home address.
    datatype: yesnowide
  - Yes. It is necessary to prevent abuse or wrongful removal or concealment of the minor children.: no_records_no_removal
    help: |
      Select this if you asked the court to prevent ${other_parties[0].name.full(middle="full")} from hiding or removing the children.
    datatype: yesnowide
---
id: parenting time
question: |
  How do you want the court to handle parenting time?
subquestion: |
  This used to be called "visitation" in Illinois.
fields:
  - The court should:: parenting_time
    datatype: radio
    choices:
      - Deny ${other_parties[0].name.full(middle="full")} parenting time (no visits at all): deny
        help: |
          You can enter reasons why you want to deny parenting time on the next screen.
      - Restrict ${other_parties[0].name.full(middle="full")}'s parenting time (allow visits with limits): restrict
        help: |
          You can enter reasons why you want to restrict parenting time on the next screen.
      - Grant ${other_parties[0].name.full(middle="full")} parenting (allow visits according to schedule): grant
      - Reserve ${other_parties[0].name.full(middle="full")}'s parenting time until a later hearing: reserve

---
id: restrict or deny parenting time reasons
question: |
  % if parenting_time == "restrict":
  Why do you want to restrict ${other_parties[0].name.full(middle="full")}'s parenting time?
  % else:
  Why do you want to deny ${other_parties[0].name.full(middle="full")} any parenting time?
  % endif  
subquestion: |
  Check all that apply.
fields:
  - ${other_parties[0].name.full(middle="full")} is likely to:: restrict_or_deny_pt_reasons
    datatype: checkboxes
    none of the above: False
    choices:
      - Abuse or endanger the children during parenting time.: no_pt_no_abuse
      - Use parenting time to abuse or harass me, my family, or household members.: no_pt_no_harass
      - Improperly hide or detain the children.: no_pt_no_hide
      - Act in a way that is not in the best interest of the children.: no_pt_no_best_interest
---
id: parenting time format
question: |
  How do you want to tell the court about your parenting time schedule?
subquestion: |
  Your parenting time schedule should include days and times when ${other_parties[0].name.full(middle="full")} will be able to visit the children.
fields:
  - no label: pt_format
    datatype: radio
    choices:
    - I will enter the parenting time schedule on the next screens.: interview
      #datatype: yesnowide
    - I will make a parenting time schedule and attach it to my court forms.: attach
      #datatype: yesnowide
      help: |
        Be sure your parenting time schedule includes:
        
        * Days of the week when parenting time will happen, 
        * Start and end times for each day,
        * Any changes because of holidays, and
        * The date you want the parenting time schedule to start.
---
id: parenting time weekdays
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to have parenting time on weekdays?
subquestion: |
  You can pick which days and times on the next screen.
fields:
  - no label: pt_weekdays
    datatype: yesnoradio
---
id: parenting time weekday schedule
question: |
  What weekday parenting time schedule do you want ${other_parties[0].name.full(middle="full")} to have?
fields:
  - Days: pt_weekday_days
    datatype: checkboxes
    none of the above: False
    choices:
      - Monday: Mon
      - Tuesday: Tue
      - Wednesday: Wed
      - Thursday: Thu
      - Friday: Fri
  - Start time: pt_weekday_start
    datatype: time
  - End time: pt_weekday_end
    datatype: time
    
---
id: parenting time weekends
question: |
  Do you want ${other_parties[0].name.full(middle="full")} to have parenting time on weekends?
subquestion: |
  You can pick weekend days and times on the next screen.
fields:
  - no label: pt_weekends
    datatype: yesnoradio
---
id: parenting time weekend schedule
question: |
  What weekend parenting time schedule do you want ${other_parties[0].name.full(middle="full")} to have?
fields:
  - How often?: pt_weekend_cadence
    datatype: radio
    choices:
      - Every weekend: every
      - Every other weekend: other
  - Days: pt_weekend_days
    datatype: checkboxes
    none of the above: False
    choices:
      - Friday to Saturday: frisat
      - Friday to Sunday: frisun
      - Saturday no overnight: sat
      - Saturday to Sunday: satsun
      - Sunday no overnight: sun
  - Start time: pt_weekend_start
    datatype: time
  - End time: pt_weekend_end
    datatype: time
---
id: parenting time holidays
question: |
  Do you want the parenting time to be different on holidays?
subquestion: |
  You can list holidays and times on the next screen.
fields:
  - no label: pt_holidays
    datatype: yesnoradio
---
id: parenting time holiday schedule
question: |
  What holiday parenting time schedule do you want ${other_parties[0].name.full(middle="full")} to have?
fields:
  - List holidays (separate by commas): pt_holiday_list
    input type: area
    rows: 3
    maxlength: 150
    help: |
      For example: New Years Day, Fourth of July, Thanksgiving
  - Start time: pt_holiday_start
    datatype: time
  - End time: pt_holiday_end
    datatype: time
---
id: parenting time start date
question: |
  When do you want the parenting time schedule to start?
fields:
  - Date: pt_start_date
    datatype: date
    min: ${ today().format("yyyy-MM-dd") }



---
id: case number
question: |
  What is the case number?
subquestion: |
  This is optional 
fields:
  - Case number: case_number
    required: False

---
id: get docs screen
question: |
  Download
subquestion: |
  
  Your forms are ready. View and download your forms below. Click **Make changes** to fix any mistakes.

  This program does not file your ${ form_name } with the court. You will need to do this yourself.

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program does not file your ${ form_name } with the court.
  
  Thank you for using ILAO Easy Forms!
event: get_docs_screen
under: |
  % if not user_logged_in():
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [create](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=user_info().question_id, easy_form_variable=user_info().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Your forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---

---
objects:
  - op_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - op_petition: ALDocument.using(title="Petition", filename="petition.pdf", has_addendum=False)
  - op_schools: ALDocument.using(title="Confidential School or Daycare", filename="confidential_schools.pdf", has_addendum=False)
---
code: |
  op_instructions.enabled = True
  op_petition.enabled = True
  op_schools.enabled = False
  
  if minor_kids_with_respondent or protect_petitioner_kids:
    if schools[0].hide or schools[1].hide:
      op_schools.enabled = True


---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[op_instructions, op_petition, op_schools], filename="order_of_protection.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[op_petition, op_schools], filename="order_of_protection.pdf", title="Order of protection")
---

---
attachment:
  variable name: op_instructions[i]
  name: instructions
  filename: op_instructions
  skip undefined: True
  editable: False
  pdf template file: op_instructions.pdf
  fields:
    - "fake": ${ "" }
---
attachment:
  variable name: op_petition[i]
  name: petition
  filename: petition
  skip undefined: True
  editable: False
  pdf template file: op_petition.pdf
  fields:
    - "county": ${ trial_court.address.county.upper() }
    - "civil_proceeding": True
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "petitioner__2": ${ users[0].name.full(middle="full") }
    - "respondent": ${other_parties[0].name.full(middle="full")}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "case_number__4": ${ case_number }
    - "case_number__5": ${ case_number }
    - "case_number__6": ${ case_number }
    - "case_number__7": ${ case_number }
    - "case_number__8": ${ case_number }
    - "case_number__9": ${ case_number }
    - "case_number__10": ${ case_number }
    - "case_number__11": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    - "shared_kids_list": ${ comma_and_list(protected_minor_kids_list ) if protect_shared_kids else ''}
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name.full(middle="full") if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name.full(middle="full") if protect_high_risk_adult else '' }

    - "eop": ${ eop }
    - "pop": ${ pop }

    - "hide_address": ${ hide_address }
    - "notice_address_one_line": ${ users[0].address.on_one_line(bare=True) if hide_address else ""}
    - "show_address": ${ not hide_address }
    - "home_address_one_line": ${ users[0].address.on_one_line(bare=True) if not hide_address else "" }
      # page 2
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ other_parties[0].birthdate_info }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_home_address": |
        % if other_parties[0].address.address != "":
        ${ other_parties[0].address.on_one_line(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_info": |
        % if knows_respondent_work:
        ${ other_parties[0].employer + ", " + other_parties[0].work_address.on_one_line(bare=True) }
        % else:
        ${ "do not know" }
        % endif

    - "relationship_se": ${ relationship_type['se'] }
    - "relationship_xs": ${ relationship_type['xs'] }
    - "relationship_bg": ${ relationship_type['bg'] }
    - "relationship_cc": ${ relationship_type['cc'] }
    - "relationship_cs": ${ relationship_type['cs'] }
    - "relationship_ch": ${ relationship_type['ch'] }
    - "relationship_pa": ${ relationship_type['pa'] }
    - "relationship_sb": ${ relationship_type['sb'] }
    - "relationship_of": ${ relationship_type['of'] }
    - "relationship_il": ${ relationship_type['il'] }
    - "relationship_sc": ${ relationship_type['sc'] }
    - "relationship_ss": ${ relationship_type['ss'] }
    - "relationship_sp": ${ relationship_type['sp'] }
    - "relationship_gc": ${ relationship_type['gc'] }
    - "relationship_gp": ${ relationship_type['gp'] }
    - "relationship_pc": ${ relationship_type['pc'] }
    - "relationship_pr": ${ relationship_type['pr'] }
    - "relationship_f": ${ relationship_type['f'] }
    - "relationship_a": ${ relationship_type['a'] }
    - "relationship_l": ${ relationship_type['l'] }
    - "relationship_ot": ${ relationship_type['ot'] }
    - "relationship_pd": ${ relationship_type['pd'] }

    - "has_other_ops_yes": ${ has_other_ops == "Yes" }
    - "has_other_ops_no": ${ has_other_ops == "No" }
    - "has_other_ops_idk": ${ has_other_ops == "I don't know" }
    - "other_ops_people_1": ${ other_ops[0].name.text }
    - "other_ops_state_county_1": ${ other_ops[0].state + ", " + other_ops[0].county }
    - "other_ops_year_1": ${ other_ops[0].year }
    - "other_ops_people_2": ${ other_ops[1].name.text }
    - "other_ops_state_county_2": ${ other_ops[1].state + ", " + other_ops[1].county }
    - "other_ops_year_2": ${ other_ops[1].year }
    - "other_ops_additional": ${ other_ops.number() > 2 } 
    - "has_other_cases_yes": ${ has_other_cases == "Yes" }
    - "has_other_cases_no": ${ has_other_cases == "No" }
    - "has_other_cases_idk": ${ has_other_cases == "I don't know" }
    - "other_cases_type_1": ${ other_cases[0].name.text }
    - "other_cases_state_county_1": ${ other_cases[0].state + ", " + other_ops[0].county }
    - "other_cases_year_1": ${ other_cases[0].year }
    - "other_cases_type_2": ${ other_cases[1].name.text }
    - "other_cases_state_county_2": ${ other_cases[1].state + ", " + other_cases[1].county }
    - "other_cases_year_2": ${ other_cases[1].year }
    - "other_cases_additional": ${ other_cases.number() > 2 } 
    - "jurisdiction_petitioner_lives_here": ${ jurisdiction_type['I live here'] }
    - "jurisdiction_respondent_lives_here": ${ jurisdiction_type['Respondent lives here'] }
    - "jurisdiction_abuse_here": ${ jurisdiction_type['Abuse was here'] }
    - "jurisdiction_abuse_elsewhere": ${ jurisdiction_type['Abuse was elsewhere'] }

      # page 3
    - "incident_date_1": ${ incidents[0].date }
    - "incident_time_1": ${ incidents[0].time }
    - "incident_reason_1": ${ incidents[0].name.text }
    - "incident_date_2": ${ incidents[1].date }
    - "incident_time_2": ${ incidents[1].time }
    - "incident_reason_2": ${ incidents[1].name.text }
    - "incident_date_3": ${ incidents[2].date }
    - "incident_time_3": ${ incidents[2].time }
    - "incident_reason_3": ${ incidents[2].name.text }
    - "incident_date_4": ${ incidents[3].date }
    - "incident_time_4": ${ incidents[3].time }
    - "incident_reason_4": ${ incidents[3].name.text }
    - "additional_incidents": ${ incidents.number() > 4 }

    - "no_abuse": ${ any((no_harassment, no_physical, no_stalking, no_willful, no_intimidation, no_exploitation, no_neglect, no_interference)) }
    - "no_harassment": ${ no_harassment }
    - "no_physical": ${ no_physical }
    - "no_stalking": ${ no_stalking }
    - "no_willful": ${ no_willful }
    - "no_intimidation": ${ no_intimidation }
    - "no_exploitation": ${ no_exploitation }
    - "no_neglect": ${ no_neglect }
    - "no_interference": ${ no_interference}
    - "stay_away_checkbox": ${ any((no_communication, stay_away)) }
    - "no_communication": ${ no_communication }
    - "stay_away": ${ stay_away }

      # page 4
    - "possession_residence": ${ not (residence_remedies == 'none') }
    - "exclusive_possession": ${ residence_remedies == 'exclusive possession' }
    - "exclusive_home_address_checkbox": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "exclusive_home_address_one_line": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ users[0].address.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "exclusive_address_hidden": |
        % if hide_address and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "respondent_no_right_to_stay": ${ exclusive_possession_reason == "respondent_no_right_to_stay" }
    - "both_parties_right_to_stay": ${ exclusive_possession_reason == "both_parties_right_to_stay" }
    - "provide_alt_housing": ${ residence_remedies == 'provide alternate housing' }
      
      
    - "stay_away_locations": ${ any((stay_away_jobs, stay_away_schools, stay_away_other))}
    - "stay_away_jobs": ${ stay_away_jobs }
    - "stay_away_job_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs:
        ${ jobs[0].employer + ", " + jobs[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_2": |
        % if hide_work_address and stay_away_jobs:
        ${ "" }
        % elif stay_away_jobs_2:
        ${ jobs[1].employer + ", " + jobs[1].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_schools": ${ stay_away_schools }
    - "stay_away_school_1": |
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name + ", " + schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
    - "stay_away_school_2": |
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name + ", " + schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
    - "confidential_schools": ${ True if (schools[0].hide or schools[1].hide) else False }
    
    - "stay_away_other": ${ stay_away_other }
    - "stay_away_other_1": |
        % if hide_other_address_1 and stay_away_other:
        ${ other_locations_hidden_description_1 }
        % elif stay_away_other:
        ${ other_locations[0].name + ", " + other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_2": |
        % if hide_other_address_2 and stay_away_other:
        ${ other_locations_hidden_description_2 }
        % elif stay_away_other_2:
        ${ other_locations[1].name + ", " + other_locations[1].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif

    - "same_school_restrictions": ${ True if (same_school and same_school_restrictions != "none") else ""} 
    - "same_school_name": ${ same_school_name if (same_school and same_school_restrictions != "none") else ""}


      # page 5
    - "same_school_not_attend": ${ True if (same_school and same_school_restrictions == "not attend") else ""}
    - "same_school_change_placement": ${ True if (same_school and same_school_restrictions == "change program") else ""}
    - "same_school_avoid_parts": ${ True if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "same_school_parts": ${ parts_of_school if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "respondent_parent_help": ${respondent_parent_help}
    - "respondent_parent_name": ${ respondent_parent_name if respondent_parent_help else "" }
    - "respondent_parent_order": ${ respondent_parent_order if respondent_parent_help else "" }
    - "counseling": ${ request_counseling }    
    - "request_counseling": ${ request_counseling }    
    - "dv_counseling": ${ True if request_counseling and dv_counseling else '' }    
    - "alcohol_counseling": ${ True if request_counseling and alcohol_counseling else '' }    
    - "mental_health_counseling": ${ True if request_counseling and mental_health_counseling else '' } 
    - "other_counseling": ${ True if request_counseling and other_counseling else '' }    
    - "other_counseling_text": ${ other_counseling_text if request_counseling and other_counseling else '' }    
      
    - "care_and_possession_of_children": ${ minor_kids_with_respondent } 
    - "minor_kids_with_respondent": ${ minor_kids_with_respondent }
    - "shared_kids_1_name": ${ shared_kids[0].name.full(middle="full") }
    - "shared_kids_1_age": ${ shared_kids[0].age_in_years() }
    - "shared_kids_1_state": ${ shared_kids[0].address.state }
    - "shared_kids_1_include_yes": ${ shared_kids[0].protect }
    - "shared_kids_1_include_no": ${ shared_kids[0].protect is False }
    - "shared_kids_2_name": ${ shared_kids[1].name.full(middle="full") }
    - "shared_kids_2_age": ${ shared_kids[1].age_in_years() }
    - "shared_kids_2_state": ${ shared_kids[1].address.state }
    - "shared_kids_2_include_yes": ${ shared_kids[1].protect}
    - "shared_kids_2_include_no": ${ shared_kids[1].protect is False }
    - "shared_kids_3_name": ${ shared_kids[2].name.full(middle="full") }
    - "shared_kids_3_age": ${ shared_kids[2].age_in_years() }
    - "shared_kids_3_state": ${ shared_kids[2].address.state }
    - "shared_kids_3_include_yes": ${ shared_kids[2].protect }
    - "shared_kids_3_include_no": ${ shared_kids[2].protect is False }
    - "shared_kids_4_name": ${ shared_kids[3].name.full(middle="full") }
    - "shared_kids_4_age": ${ shared_kids[3].age_in_years() }
    - "shared_kids_4_state": ${ shared_kids[3].address.state }
    - "shared_kids_4_include_yes": ${ shared_kids[3].protect }
    - "shared_kids_4_include_no": ${ shared_kids[3].protect is False }
    - "parentage_cb": ${ minor_kids_with_respondent }
    - "parentage_not_established": ${ True if (parentage == "parentage_not_established" and minor_kids_with_respondent) else '' }
    - "parentage_established": ${ True if ((parentage == "parentage_established_by_marriage" or parentage == "parentage_established_other") and minor_kids_with_respondent) else '' }
    - "parentage_established_marriage": ${ True if (parentage == "parentage_established_by_marriage" and minor_kids_with_respondent) else '' }
    - "parentage_established_other": ${ True if (parentage == "parentage_established_other" and (parentage_birth_certificate == True or parentage_vap == True or parentage_order == True) and minor_kids_with_respondent) else '' }
    - "parentage_other_text": ${ other_parentage_method if (minor_kids_with_respondent and parentage == "parentage_established_other") else '' }
    - "caretaker_cb": ${ minor_kids_with_respondent }
    - "caretaker_petitioner": ${ True if (primary_caretaker == "petitioner" and minor_kids_with_respondent) else '' }

      # page 6
    - "caretaker_respondent": ${ True if (primary_caretaker == "respondent" and minor_kids_with_respondent) else '' }
    - "caretaker_other": ${ True if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_name": ${ other_caretaker.name.full(middle="full") if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_address": ${ other_caretaker.address.on_one_line(bare=True) if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "care_and_possession_cb": ${ True if physical_care_of_children or return_children_to == "petitioner" or return_children_to == "other" or no_removal_school or keep_schools_confidential else '' }

    - "physical_care_of_children": ${ True if keep_schools_confidential and minor_kids_with_respondent else '' }
    - "return_children_possession": ${ True if (return_children_to == "petitioner" or return_children_to == "other") and minor_kids_with_respondent else '' }
    - "return_children_other_person": ${ return_children_other_person.name.full(middle="full") if return_children_to == "other" and minor_kids_with_respondent else '' }
    - "no_removal_school": ${ True if no_removal_school and minor_kids_with_respondent else '' }
    - "confidential_schools": ${ True if keep_schools_confidential and minor_kids_with_respondent else '' }
    - "temp_custody_cb": ${ True if temp_custody_of_children and minor_kids_with_respondent else '' }
    - "requests_temp_custody": ${ True if temp_custody_of_children and minor_kids_with_respondent else '' }
    - "parenting_time_cb": ${ True if parenting_time and minor_kids_with_respondent else '' }
    - "parenting_time_grant": ${ True if parenting_time == "grant" and minor_kids_with_respondent else '' }
    - "parenting_time_reserve": ${ True if parenting_time == "reserve" and minor_kids_with_respondent else '' }
    - "parenting_time_deny": ${ True if parenting_time == "deny" and minor_kids_with_respondent else '' }
    - "parenting_time_restrict": ${ True if parenting_time == "restrict" and minor_kids_with_respondent else '' }
    - "no_pt_no_abuse": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_abuse"] and minor_kids_with_respondent else '' }
    - "no_pt_no_harass": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_harass"] and minor_kids_with_respondent else '' }
    - "no_pt_no_hide": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_hide"] and minor_kids_with_respondent else '' }
    - "no_pt_no_best_interest": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_best_interest"] and minor_kids_with_respondent else '' }
    - "pt_format": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and minor_kids_with_respondent else '' }
    - "pt_attach": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "attach" and minor_kids_with_respondent else ''  }
    - "pt_interview": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else ''  }
 

      # page 7
    - "appear_with_children_cb": ${ True if return_children_to == "court" and minor_kids_with_respondent else '' }
    - "appear_with_children_prevent": ${ True if appear_with_children_prevent and return_children_to == "court" and minor_kids_with_respondent else '' }
    - "appear_with_children_return": ${ True if appear_with_children_return and return_children_to == "court" and minor_kids_with_respondent else '' }
    - "appear_with_children_exam": ${ True if appear_with_children_exam and return_children_to == "court" and minor_kids_with_respondent else '' }
    - "no_conceal_children_cb": ${ True if no_conceal_children and minor_kids_with_respondent else '' }

      # page 9
    - "no_stay_under_influence": ${ no_stay_under_influence if not (stay_away or no_communication or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
    - "childrens_records_cb": ${ True if (minor_kids_with_respondent or protect_petitioner_kids) and ( no_records_no_contact or no_records_hide_address or no_records_no_removal ) else "" }
    - "no_records_no_contact": ${ True if (minor_kids_with_respondent or protect_petitioner_kids) and no_records_no_contact else "" }
    - "no_records_hide_address": ${ True if (minor_kids_with_respondent or protect_petitioner_kids) and no_records_hide_address else "" }
    - "no_records_no_removal": ${ True if (minor_kids_with_respondent or protect_petitioner_kids) and no_records_no_removal else "" }



---
attachment:
  variable name: op_schools[i]
  name: confidential_schools
  filename: confidential_schools
  skip undefined: True
  editable: False
  pdf template file: op_schools.pdf
  fields:
    - "county": ${ trial_court.address.county.upper() }
    - "petitioner__1": ${ users[0].name.full(middle="full") }
    - "respondent": ${other_parties[0].name.full(middle="full")}
    - "case_number__1": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    - "shared_kids_list": ${ comma_and_list(protected_minor_kids_list ) if protect_shared_kids else ''}
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name.full(middle="full") if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name.full(middle="full") if protect_high_risk_adult else '' }

    - "school_1_kids": ${ comma_and_list(schools[0].kids_who_attend.true_values()) }
    - "school_1_name": ${ schools[0].name }
    - "school_1_type_school": ${ True if schools[0].type=='school' else '' }
    - "school_1_type_daycare": ${ True if schools[0].type=='daycare' else '' }
    - "school_1_address": ${ schools[0].on_one_line(bare=True) }
    - "school_2_kids": ${ comma_and_list(schools[1].kids_who_attend.true_values()) }
    - "school_2_name": ${ schools[1].name }
    - "school_2_type_school": ${ True if schools[1].type=='school' else '' }
    - "school_2_type_daycare": ${ True if schools[1].type=='daycare' else '' }
    - "school_2_address": ${ schools[1].on_one_line(bare=True) }




---
############### Review pages
id: review screen
event: review_answers
question: |
  Review screen
subquestion: |
  Edit your answers below.
review: 
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${users[0].name.full(middle="full")}
  - Edit: 
      - trial_court_index
      - recompute:
        - trial_court
    button: |
      **County where you will file:**
      ${ trial_court.address.county }
  - Edit: jurisdiction_type
    button: |
      **Filing in ${ trial_court.address.county } County because:**
      
      % if jurisdiction_type['I live here']:
      * I live here
      % endif
      % if jurisdiction_type['Respondent lives here']:
      * Respondent lives here
      % endif
      % if jurisdiction_type['Abuse was here']:
      * Abuse was here
      % endif
      % if jurisdiction_type['Abuse was elsewhere']:
      * Abuse was elsewhere
      % endif
  - Edit: relationship_type
    button: |
      **Protected party's relationship to person who caused abuse:**
      
      % if relationship_type['se'] == True:
      * Spouse
      % endif
      % if relationship_type['xs'] == True:
      * Ex-spouse
      % endif
      % if relationship_type['bg'] == True:
      * Boyfriend, girlfriend, or romantic partner (including ex-)
      % endif
      % if relationship_type['cc'] == True:
      * We have a child in common (never married)
      % endif
      % if relationship_type['cs'] == True:
      * We share or shared a living space
      % endif
      % if relationship_type['ch'] == True:
      * Child
      % endif
      % if relationship_type['pa'] == True:
      * Parent
      % endif
      % if relationship_type['sb'] == True:
      * Brother, sister, or sibling
      % endif
      % if relationship_type['of'] == True:
      * Other family member
      % endif
      % if relationship_type['sc'] == True:
      * Step child
      % endif
      % if relationship_type['ss'] == True:
      * Step brother, step sister, or step sibling
      % endif
      % if relationship_type['sp'] == True:
      * Step parent
      % endif
      % if relationship_type['gc'] == True:
      * Grandchild
      % endif
      % if relationship_type['gp'] == True:
      * Grandparent
      % endif
      % if relationship_type['il'] == True:
      * In-law
      % endif
      % if relationship_type['pd'] == True:
      * Protected person has a disability and receives care from the abuser
      % endif
      % if relationship_type['pc'] == True:
      * Person responsible for a high risk adult
      % endif
      % if relationship_type['pr'] == True:
      * Personal assistant or caregiver to a person with a disability
      % endif
      % if relationship_type['f'] == True:
      * Family or household member of my foster child
      % endif
      % if relationship_type['a'] == True:
      * Family or household member of my adopted child, or of my prospective adopted child
      % endif
      % if relationship_type['l'] == True:
      * Family or household member of a child that I am the legally-appointed custodian of
      % endif
      
  - Edit: other_parties[0].name.first
    button: |
      **Person you want an Order of Protection against:**
      ${other_parties[0].name.full(middle="full")}
  - Edit: minor_kids_with_respondent
    button: |
      **Do you have minor children with ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(minor_kids_with_respondent)) }

  - Edit: protect_petitioner
    button: |
      **People to protect with this Order of Protection:**
      
      % if protect_petitioner == True:
      * You
      % endif
      % if protect_shared_kids == True:
      * Minor children you have with ${other_parties[0].name.full(middle="full")}
      % endif
      % if protect_petitioner_kids == True:
      * Minor children you **did not** have with ${other_parties[0].name.full(middle="full")}
      % endif
      % if protect_dependent_adult == True:
      * A dependent adult
      % endif
      % if protect_high_risk_adult == True:
      * A high risk adult with disabilities
      % endif      
      % if protect_other_hh_members == True:
      * Other household members
      % endif
    
  - Edit: shared_kids.revisit
    button: |
      **Your minor children with ${other_parties[0].name.full(middle="full")}: (Edit to change names and details)**

      % for my_var in shared_kids:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: minor_kids_with_respondent

  - Edit: petitioner_kids.revisit
    button: |
      **Your minor children **not with** ${other_parties[0].name.full(middle="full")}:**

      % for my_var in petitioner_kids:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: protect_petitioner_kids

  - Edit: other_hh_members.revisit
    button: |
      **Other household members:**

      % for my_var in other_hh_members:
        * ${ my_var.name.full(middle="full") }
      % endfor
    show if: protect_other_hh_members

  - Edit: dependent_adult.name.first
    button: |
      **Dependent adult you want to protect:**
      ${dependent_adult.name.full(middle="full")}
    show if: protect_dependent_adult

  - Edit: high_risk_adult.name.first
    button: |
      **High risk adult you want to protect:**
      ${high_risk_adult.name.full(middle="full")}
    show if: protect_high_risk_adult

  - Edit: incidents.revisit
    button: |
      **Incidents: (Edit to review what happened or change details)**

      % for my_var in incidents:
        * Date: ${ my_var.date }, Time: ${ my_var.time }
      % endfor

  - Edit: no_harassment
    button: |
      **What you want the court to order ${other_parties[0].name.full(middle="full")} to not do:**
      
      % if no_harassment:
      * Harassment
      % endif
      % if no_physical:
      * Physical abuse
      % endif
      % if no_stalking:
      * Stalking
      % endif
      % if no_willful:
      * Willful deprivation
      % endif
      % if no_intimidation:
      * Intimidation of a dependent
      % endif
      % if no_exploitation:
      * Exploitation of a high-risk adult with disabilities
      % endif
      % if no_neglect:
      * Neglect of a high-risk adult with disabilities
      % endif
      % if no_interference:
      * Interference with personal liberty
      % endif

  - Edit: stay_away
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stay away at all times?**
      ${ word(yesno(stay_away)) }
  - Edit: stay_away_distance
    button: |
      **How far do you want ${other_parties[0].name.full(middle="full")} to stay away, in feet? (optional)**
      ${ int(stay_away_distance) }
    show if: stay_away

  - Edit: no_communication
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stop communicating with you?**
      ${ word(yesno(no_communication)) }

  - Edit: hide_address
    button: |
      **Do you want to keep your address hidden?**
      ${ word(yesno(hide_address)) }
  - Edit: users[0].address.address
    button: |
      % if hide_address:
      **Your mailing address (will appear on your court papers): **
      % else:
      **Your home address: **
      % endif    
      ${ users[0].address.on_one_line(bare=True) }
  - Edit: residence_remedies
    button: |
      **What should the court order about where you are living?**
      % if residence_remedies == 'exclusive possession':
      I want **exclusive possession** of my residence.
      % elif residence_remedies == 'provide alternate housing':
      I want ${other_parties[0].name.full(middle="full")} to **provide a different place** for me and the protected people to live.
      % else:
      Nothing. I don't want the court to give me exclusive possession or to order ${other_parties[0].name.full(middle="full")} to provide a different place for me and the protected people to live.
      % endif    
  - Edit: exclusive_possession_reason
    button: |
      **Why should the court give you exclusive possession of the residence?**
      % if exclusive_possession_reason == 'respondent_no_right_to_stay':
      I have a right to occupy the residence and ${other_parties[0].name.full(middle="full")} has no right.
      % else:
      Both of us have a right to occupy the residence, but it would be harder on me to leave.
      % endif
    show if: residence_remedies == 'exclusive possession'
  - Edit: no_stay_under_influence
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stay away from and not be at your residence while under the influence?**
      ${ word(yesno(no_stay_under_influence)) }
    show if: not (stay_away or no_communication or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing'))
  - Edit: stay_away_jobs
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stay away from where you work?**
      ${ word(yesno(stay_away_jobs)) }
  - Edit: hide_work_address
    button: |
      **Do you want to keep your work address hidden?**
      ${ word(yesno(hide_work_address)) }
  - Edit: jobs[0].address
    button: |
      **Employer name and address:**
      ${ jobs[0].employer + ", " + jobs[0].on_one_line(bare=True) }
    show if: stay_away_jobs and hide_work_address == False
  - Edit: stay_away_jobs_2
    button: |
      **Do you have another job you want ${other_parties[0].name.full(middle="full")} to stay away from?**
      ${ word(yesno(stay_away_jobs_2)) }
    show if: stay_away_jobs and hide_work_address == False
  - Edit: jobs[1].address
    button: |
      **Second employer name and address:**
      ${ jobs[1].employer }, ${ jobs[1].on_one_line(bare=True) }
    show if: stay_away_jobs_2 and hide_work_address == False

  - Edit: stay_away_schools
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stay away from schools or daycares?**
      ${ word(yesno(stay_away_schools)) }
  - Edit: schools[0].address
    button: |
      **School name and address:**
      ${ schools[0].name + ", " + schools[0].on_one_line(bare=True) }
    show if: stay_away_schools
  - Edit: schools[0].hide
    button: |
      **Do you want to hide information about ${ schools[0].name } from  ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(schools[0].hide)) }
    show if: stay_away_schools and (minor_kids_with_respondent or protect_petitioner_kids)
  - Edit: schools[0].type
    button: |
      **Confidential school information about ${ schools[0].name }:**
      ${ "Type: " + schools[0].type + ", Children who attend: " + comma_and_list(schools[0].kids_who_attend.true_values()) }
    show if: stay_away_schools and (minor_kids_with_respondent or protect_petitioner_kids)

  - Edit: stay_away_schools_2
    button: |
      **Do you have another school you want ${other_parties[0].name.full(middle="full")} to stay away from?**
      ${ word(yesno(stay_away_schools_2)) }
  - Edit: schools[1].address
    button: |
      **Second school name and address:**
      ${ schools[1].name }, ${ schools[1].on_one_line(bare=True) }
    show if: stay_away_schools_2
  - Edit: schools[1].hide
    button: |
      **Do you want to hide information about ${ schools[1].name } from  ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(schools[1].hide)) }
    show if: stay_away_schools_2 and (minor_kids_with_respondent or protect_petitioner_kids)
  - Edit: schools[1].type
    button: |
      **Confidential school information about ${ schools[1].name }:**
      ${ "Type: " + schools[1].type + ", Children who attend: " + comma_and_list(schools[1].kids_who_attend.true_values()) }
    show if: stay_away_schools_2 and (minor_kids_with_respondent or protect_petitioner_kids)



  - Edit: stay_away_other
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to stay away from other places?**
      ${ word(yesno(stay_away_other)) }
  - Edit: hide_other_address_1
    button: |
      **Do you want to hide the details of the place you want ${other_parties[0].name.full(middle="full") } to stay away from?**
      ${ word(yesno(hide_other_address_1)) }
  - Edit: other_locations_hidden_description_1
    button: |
      **Other location description:**
      ${ other_locations_hidden_description_1 }
    show if: stay_away_other and hide_other_address_1
  - Edit: other_locations[0].address
    button: |
      **Other location name and address:**
      ${ other_locations[0].name + ", " + other_locations[0].on_one_line(bare=True) }
    show if: stay_away_other and hide_other_address_1 == False
  - Edit: stay_away_other_2
    button: |
      **Do you have another place you want ${other_parties[0].name.full(middle="full")} to stay away from?**
      ${ word(yesno(stay_away_other_2)) }
  - Edit: hide_other_address_2
    button: |
      **Do you want to hide the details of the second place you want ${other_parties[0].name.full(middle="full") } to stay away from?**
      ${ word(yesno(hide_other_address_2)) }
  - Edit: other_locations_hidden_description_2
    button: |
      **Second other location description:**
      ${ other_locations_hidden_description_2 }
    show if: stay_away_other and hide_other_address_2
  - Edit: other_locations[1].address
    button: |
      **Second location name and address:**
      ${ other_locations[1].name }, ${ other_locations[1].on_one_line(bare=True) }
    show if: stay_away_other_2 and hide_other_address_2 == False
  - Edit: same_school
    button: |
      **Does ${other_parties[0].name.full(middle="full")} attend the same school as you or other protected people?**
      ${ word(yesno(same_school)) }
  - Edit: same_school_name
    button: |
      **School name:**
      ${ same_school_name }
    show if: same_school
  - Edit: same_school_restrictions
    button: |
      **Same school restrictions:**
      ${ same_school_restrictions }
    show if: same_school
  - Edit: parts_of_school
    button: |
      **Parts of school where ${other_parties[0].name.full(middle="full")} should not go:**
      ${ parts_of_school }
    show if: same_school_restrictions


  - Edit: eop
    button: |
      **Order type:**
      % if eop and pop:
      Both Emergency and Plenary Orders of Protection
      % elif eop:
      Emergency Order of Protection (not Plenary)
      % else:
      Plenary Order of Protection (not Emergency)
      % endif

  - Edit: knows_respondent_dob
    button: |
      **What you know about ${other_parties[0].name.full(middle="full")}'s birthdate:**
      % if knows_respondent_dob == "exact":
      The exact date
      % elif knows_respondent_dob == "some":
      Something about it
      % else:
      Nothing
      % endif

  - Edit: knows_respondent_dob
    button: |
      **${other_parties[0].name.full(middle="full")}'s birthdate:**
      % if knows_respondent_dob == "exact" and other_parties[0].birthdate != "":
      ${ other_parties[0].birthdate }
      % elif knows_respondent_dob == "some":
      ${ other_parties[0].birthdate_info }
      % else:
      ${ "Unknown" }
      % endif
  - Edit: other_parties[0].phone_number
    button: |
      **${other_parties[0].name.full(middle="full")}'s phone number:**
      % if other_parties[0].phone_number != "":
      ${ phone_number_formatted(other_parties[0].phone_number) }      
      % else:
      ${ "do not know" }
      % endif
  - Edit: other_parties[0].email
    button: |
      **${other_parties[0].name.full(middle="full")}'s email:**
      % if other_parties[0].email != "":
      ${ other_parties[0].email }
      % else:
      ${ "do not know" }
      % endif
  - Edit: other_parties[0].address.address
    button: |
      **${other_parties[0].name.full(middle="full")}'s home address: **
      % if other_parties[0].address.address != "":
      ${ other_parties[0].address.on_one_line(bare=True) }
      % else:
      ${ "do not know" }
      % endif
  - Edit: knows_respondent_work
    button: |
      **Do you know ${other_parties[0].name.full(middle="full")}'s work info?**
      ${ word(yesno(knows_respondent_work)) }
  - Edit: other_parties[0].work_address.address
    button: |
      **${other_parties[0].name.full(middle="full")}'s work info: **
      % if knows_respondent_work:
      ${ other_parties[0].employer + ", " + other_parties[0].work_address.on_one_line(bare=True) }
      % else:
      ${ "do not know" }
      % endif

  - Edit: has_other_ops
    button: |
      **Are there other Orders of protections against ${other_parties[0].name.full(middle="full")}?**
      ${ has_other_ops }
      
  - Edit: other_ops.revisit
    button: |
      **Other Orders of Protection against ${other_parties[0].name.full(middle="full")}: (Edit to change details)**

      % for my_var in other_ops:
        * ${ my_var.name.text } in ${ my_var.year }
      % endfor
    show if: has_other_ops == "Yes"

  - Edit: has_other_cases
    button: |
      **Are there other cases with ${other_parties[0].name.full(middle="full")}?**
      ${ has_other_cases }
      
  - Edit: other_cases.revisit
    button: |
      **Other cases with ${other_parties[0].name.full(middle="full")}: (Edit to change details)**

      % for my_var in other_cases:
        * ${ my_var.name.text } in ${ my_var.year }
      % endfor
    show if: has_other_cases == "Yes"

  - Edit: respondent_parent_help
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")}'s parent or guardian help them follow the Order of Protection?**
      ${ word(yesno(respondent_parent_help)) }
  - Edit: respondent_parent_name
    button: |
      **Parent or guardian name:**
      ${ respondent_parent_name }
    show if: respondent_parent_help
  - Edit: respondent_parent_order
    button: |
      **What should ${other_parties[0].name.full(middle="full")}'s parent or guardian be ordered to do?**
      ${ respondent_parent_order }
    show if: respondent_parent_help


  - Edit: request_counseling
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to get counseling?**
      ${ word(yesno(request_counseling)) }
  - Edit: dv_counseling
    button: |
      **Counseling you want ${ other_parties[0].name.full(middle="full") } to do:**
      
      % if dv_counseling:
      * Domestic violence partner abuse counseling
      % endif
      % if alcohol_counseling:
      * Alcohol and substance abuse evaluation and counseling
      % endif
      % if mental_health_counseling:
      * Mental health evaluation and counseling
      % endif
      % if other_counseling:
      * Other
      % endif
  - Edit: other_counseling_text
    button: |
      **Other counseling:**
      ${ other_counseling_text }
    show if: other_counseling

  - Edit: parentage
    button: |
      **Has parentage of the minor children been established?**
      % if parentage == "parentage_established_by_marriage":
      Yes, the children were born before, during, or within 300 days after the marriage.
      % elif parentage == "parentage_established_other":
      Yes, we are not married, but parentage was established.
      % else:
      No, parentage has not been established.
      % endif
  - Edit: parentage_other
    button: |
      **Legal parentage of the children has been established by:**
      
      % if parentage_birth_certificate:
      * We are listed on the birth certificate.
      % endif
      % if parentage_vap:
      * We signed a Voluntary Acknowledgement of Paternity, also called a VAP.
      % endif
      % if parentage_order:
      * A court or administrative order established us as the legal parents of the children.
      % endif
      % if parentage_other:
      * Legal parentage was established another way.
      % endif
    show if: parentage == "parentage_established_other"
  - Edit: other_parentage_method
    button: |
      **Other parentage method:**
      ${ other_parentage_method }
    show if: parentage == "parentage_established_other" and parentage_other
  - Edit: primary_caretaker
    button: |
      **Primary caretaker of the children with ${ other_parties[0].name.full(middle="full") }:**
      % if primary_caretaker == "petitioner":
      Me
      % elif primary_caretaker == "respondent":
      ${ other_parties[0].name.full(middle="full") }
      % else:
      Another person, not me or ${ other_parties[0].name.full(middle="full") }
      % endif
  - Edit: other_caretaker.name.first
    button: |
      **Other caretaker:**
      ${ other_caretaker.name.full(middle="full") }
    show if: primary_caretaker == "other"
  - Edit: other_caretaker.address.address
    button: |
      **${other_caretaker.name.full(middle="full")}'s address: **
      ${ other_caretaker.address.on_one_line(bare=True) }
    show if: primary_caretaker == "other"

  - Edit: temp_custody_of_children
    button: |
      **Do you want the court to grant you temporary decisionmaking responsibility (custody) of the children you have with ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(temp_custody_of_children)) }


  - Edit: physical_care_of_children
    button: |
      **Do you want the court to give you possession of the children you have with ${ other_parties[0].name.full(middle="full") }?**
      ${ word(yesno(physical_care_of_children)) }
  - Edit: no_conceal_children
    button: |
      **Do you want the court to order that ${other_parties[0].name.full(middle="full")} cannot hide or remove the children from Illinois?**
      ${ word(yesno(no_conceal_children)) }
  - Edit: no_removal_school
    button: |
      **Do you want the court to order that ${other_parties[0].name.full(middle="full")} cannot remove the children from your care or from a school or daycare?**
      ${ word(yesno(no_removal_school)) }
  - Edit: keep_schools_confidential
    button: |
      **Do you want the court to keep the school or daycare information confidential?**
      ${ word(yesno(keep_schools_confidential)) }
  - Edit: current_possession_of_children
    button: |
      **Do you currently have physical care and possession of your children with  ${other_parties[0].name.full(middle="full")}?**
      ${ word(yesno(current_possession_of_children)) }
  - Edit: return_children_to
    button: |
      **Who should ${other_parties[0].name.full(middle="full")} return the children to?**
      % if return_children_to == "petitioner":
      Me
      % elif return_children_to == "court":
      ${other_parties[0].name.full(middle="full")} should bring them to court
      % else:
      Another person
      % endif
  - Edit: return_children_to
    button: |
      **Other parentage method:**
      ${ return_children_other_person.name.full(middle="full") }
    show if: return_children_to == "other"
  - Edit: appear_with_children_prevent
    button: |
      **${other_parties[0].name.full(middle="full")} should be ordered to bring the children to court:**
      
      % if appear_with_children_prevent:
      * To prevent abuse, neglect, removal, or concealment of the children
      % endif
      % if appear_with_children_return:
      * To return the children to me
      % endif
      % if appear_with_children_exam:
      * To permit a court-ordered interview or examination of the children or of ${other_parties[0].name.full(middle="full")}
      % endif
  - Edit: no_records_no_contact
    button: |
      **${other_parties[0].name.full(middle="full")} should not have access to the children's records for the following reasons:**
      
      % if no_records_no_contact:
      * I am requesting ${other_parties[0].name.full(middle="full")} have no contact with the children.
      % endif
      % if no_records_hide_address:
      * My address is not listed on the court forms to prevent further abuse.
      % endif
      % if no_records_no_removal:
      * It is necessary to prevent abuse or wrongful removal or concealment of the minor children.
      % endif
      % if (minor_kids_with_respondent or protect_petitioner_kids) and no_records_no_contact == False and no_records_hide_address == False and no_records_no_removal == False:
      * I am not asking for this protection.
      % endif
  - Edit: parenting_time
    button: |
      **What should the court do about parenting time?**
      % if parenting_time == "deny":
      Deny ${other_parties[0].name.full(middle="full")} any parenting time
      % endif 
      % if parenting_time == "restrict":
      Restrict ${other_parties[0].name.full(middle="full")}'s parenting time
      % endif 
      % if parenting_time == "grant":
      Grant or allow ${other_parties[0].name.full(middle="full")} parenting time
      % endif 
      % if parenting_time == "reserve":
      Reserve ${other_parties[0].name.full(middle="full")}'s parenting time until a later hearing
      % endif 
  - Edit: restrict_or_deny_pt_reasons
    button: |
      % if parenting_time == "restrict":
      **Why do you want to restrict ${other_parties[0].name.full(middle="full")}'s parenting time?**
      % else:
      **Why do you want to deny ${other_parties[0].name.full(middle="full")} any parenting time?**
      % endif  
      
      % if restrict_or_deny_pt_reasons["no_pt_no_abuse"]:
      * They might abuse or endanger the children during parenting time.
      % endif
      % if restrict_or_deny_pt_reasons["no_pt_no_harass"]:
      * They might use parenting time to abuse or harass me, my family, or household members.
      % endif
      % if restrict_or_deny_pt_reasons["no_pt_no_hide"]:
      * They might improperly hide or detain the children.
      % endif
      % if restrict_or_deny_pt_reasons["no_pt_no_best_interest"]:
      * They might act in a way that is not in the best interest of the children.
      % endif
    show if: parenting_time == "restrict" or parenting_time == "deny"
    
  - Edit: pt_format
    button: |
      **How do you want to tell the court about your parenting time schedule?**
      % if pt_format == "interview":
      I will answer questions in this program.
      % else:
      I will attach a written parenting time to my court forms.
      % endif
    show if: parenting_time == "restrict" or parenting_time == "grant"
  - Edit: pt_weekdays
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to have parenting time on weekdays?**
      ${ word(yesno(pt_weekdays)) }
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview"
  - Edit: pt_weekday_days
    button: |
      **Weekday parenting time schedule:**
      From ${ format_time(pt_weekday_start) } to ${ format_time(pt_weekday_end) } on:

      % if pt_weekday_days["Mon"] == True:
        * Monday
      % endif
      % if pt_weekday_days["Tue"] == True:
        * Tuesday
      % endif
      % if pt_weekday_days["Wed"] == True:
        * Wednesday
      % endif
      % if pt_weekday_days["Thu"] == True:
        * Thursday
      % endif
      % if pt_weekday_days["Fri"] == True:
        * Friday
      % endif
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview" and pt_weekdays
    
  - Edit: pt_weekends
    button: |
      **Do you want ${other_parties[0].name.full(middle="full")} to have parenting time on weekends?**
      ${ word(yesno(pt_weekends)) }
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview"
  - Edit: pt_weekend_days
    button: |
      **Weekend parenting time schedule:**
      % if pt_weekend_cadence == "every":
      Every weekend:
      % else:
      Every other weekend:
      % endif

      % if pt_weekend_days["frisat"] == True:
        * Friday to Saturday
      % endif
      % if pt_weekend_days["frisun"] == True:
        * Friday to Sunday
      % endif
      % if pt_weekend_days["sat"] == True:
        * Saturday no overnight
      % endif
      % if pt_weekend_days["satsun"] == True:
        * Saturday to Sunday
      % endif
      % if pt_weekend_days["sun"] == True:
        * Sunday no overnight
      % endif
      
      From ${ format_time(pt_weekend_start) } to ${ format_time(pt_weekend_end) }.
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview" and pt_weekends

  - Edit: pt_holidays
    button: |
      **Do you want parenting time to be different on holidays?**
      ${ word(yesno(pt_holidays)) }
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview"
  - Edit: pt_weekend_days
    button: |
      **Holday parenting time schedule:**
      From ${ format_time(pt_holiday_start) } to ${ format_time(pt_holiday_end) } on: 
      ${ pt_holiday_list }
    show if: (parenting_time == "restrict" or parenting_time == "grant") and pt_format == "interview" and pt_holidays
  - Edit: pt_start_date
    button: |
      **When do you want the parenting time schedule to start?**
      ${ pt_start_date }






  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
---
id: shared kids revisit
continue button field: shared_kids.revisit
question: |
  Edit the minor children you have with ${other_parties[0].name.full(middle="full")}
subquestion: |
  ${ shared_kids.table }

  ${ shared_kids.add_action() }
---
table: shared_kids.table
rows: shared_kids
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
  - Details (including birthdate, residence, protected by order): |
      action_button_html(url_action(row_item.attr_name("review_shared_child_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: shared kids details
continue button field: x.review_shared_child_details
generic object: ALIndividual
question: |
  Edit ${ x.name.full(middle="full") }'s information
review: 
  - Edit: x.name.first
    button: |
      **Name:**
      ${ x.name.full(middle="full")  }
  - Edit: x.birthdate
    button: |
      **Birthdate:**
      ${ x.birthdate } 
  - Edit: x.address.state
    button: |
      **State of residence:**
      ${ x.address.state }
  - Edit: x.protect
    button: |
      **Include as a protected person?**
      ${ word(yesno(x.protect)) }
---
id: petitioner kids revisit
continue button field: petitioner_kids.revisit
question: |
  Edit your minor children you **do not** have with ${other_parties[0].name.full(middle="full")} you want protected by this order
subquestion: |
  ${ petitioner_kids.table }

  ${ petitioner_kids.add_action() }
---
table: petitioner_kids.table
rows: petitioner_kids
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
edit:
  - name.first
delete buttons: True
confirm: True

---
id: other hh members revisit
continue button field: other_hh_members.revisit
question: |
  Edit the household members you want protected by this order
subquestion: |
  ${ other_hh_members.table }

  ${ other_hh_members.add_action() }
---
table: other_hh_members.table
rows: other_hh_members
columns:
  - Name: |
      row_item.name.full(middle="full") if defined("row_item.name.first") else ""
edit:
  - name.first
delete buttons: True
confirm: True

---
id: incidents revisit
continue button field: incidents.revisit
question: |
  Edit the details of what happened
subquestion: |
  ${ incidents.table }

  % if incidents.number_gathered() < 8:
  ${ other_ops.add_action() }
  % endif
---
table: incidents.table
rows: incidents
columns:
  - Date: |
      row_item.date if defined("row_item.date") else ""
  - Time: |
      row_item.time if defined("row_item.time") else ""
  - Details (what happened): |
      action_button_html(url_action(row_item.attr_name("review_incidents_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: incident details
continue button field: x.review_incidents_details
generic object: DAObject
question: |
  Edit details
review: 
  - Edit: x.date
    button: |
      **Date:**
      ${ x.date  }
  - Edit: x.time
    button: |
      **Time:**
      ${ x.time } 
  - Edit: x.name.text
    button: |
      **What happened:**
      ${ x.name.text }
---





---
id: other ops revisit
continue button field: other_ops.revisit
question: |
  Edit the other Orders of Protection against ${other_parties[0].name.full(middle="full")}
subquestion: |
  ${ other_ops.table }

  ${ other_ops.add_action() }
---
table: other_ops.table
rows: other_ops
columns:
  - People involved: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Details (including state, county, year): |
      action_button_html(url_action(row_item.attr_name("review_other_op_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True
---
id: edit other ops
continue button field: x.review_other_op_details
generic object: DAObject
question: |
  Edit other Order of Protection details
review: 
  - Edit: x.name.text
    button: |
      **People involved:**
      ${ x.name.text  }
  - Edit: x.state
    button: |
      **State:**
      ${ state_name(x.state) } 
  - Edit: x.county
    button: |
      **County:**
      ${ x.county }
  - Edit: x.year
    button: |
      **Year:**
      ${ x.year }

---
id: other cases revisit
continue button field: other_cases.revisit
question: |
  Edit the other court cases with ${other_parties[0].name.full(middle="full")}
subquestion: |
  ${ other_cases.table }

  ${ other_cases.add_action() }
---
table: other_cases.table
rows: other_cases
columns:
  - People involved: |
      row_item.name.text if defined("row_item.name.text") else ""
  - Details (including case type, state, county, year): |
      action_button_html(url_action(row_item.attr_name("review_other_cases_details")), label="Edit", icon="pencil-alt")
delete buttons: True
confirm: True

---
id: other cases edit
continue button field: x.review_other_cases_details
generic object: DAObject
question: |
  Edit other court case details
review: 
  - Edit: x.name.text
    button: |
      **Type of court case:**
      ${ x.name.text  }
  - Edit: x.state
    button: |
      **State:**
      ${ state_name(x.state) } 
  - Edit: x.county
    button: |
      **County:**
      ${ x.county }
  - Edit: x.year
    button: |
      **Year:**
      ${ x.year }


---
id: basic info review screen
event: section_basic
question: |
  Basic information
subquestion: |
  Edit your answers below.
review:
  - Edit: jurisdiction_type
    button: |
      **Filing in ${ trial_court.address.county } County because:**
      ${ jurisdiction_type }

---
id: petitioner review screen
event: section_petitioner
question: |
  Other people you want to protect
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   

---
id: incidents review screen
event: section_incidents
question: |
  What happened
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   

---
id: protections review screen
event: section_protections
question: |
  Protections
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   

---
id: minor children review screen
event: section_child
question: |
  About your children (optional)
subquestion: |
  Edit your answers below.
review: 
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
 
---
id: property details review screen
event: section_property
question: |
  Property details
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   

---
id: other remedies review screen
event: section_remedies
question: |
  Other remedies
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   

---
id: respondent review screen
event: section_respondent
question: |
  About person who caused abuse
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
      
---
id: case info review screen
event: section_filing_info
question: |
  Case info and Next steps
subquestion: |
  Edit your answers below.
review:
  - Edit: case_number
    button: |
      **Case number:**
      ${ case_number }   
