metadata:
  title: Order of Protection
  short title: Order of Protection
  comment: This program helps you ask the court to order someone to stop harming or threatening you or other household members.
  authors:
    - Matt Newsted
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:escape_button.yml  
  - docassemble.ILAO:ilao-interview-framework.yml
  - docassemble.ILAO:shared-basic-questions.yml
  - op_review.yml
---
default screen parts:
  under: |
    **Worried about doing this on your own?** Call the [**Illinois Domestic Violence Hotline**](https://the-network.org/get-help/) at 877-863-6338 (877-TO END DV) to talk with an advocate.
    % if not user_logged_in():
    
    [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} **Sign in**](${url_of('login', next=interview_url())}) or [**create**](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
    % endif
    
    Feedback, suggestions, or comments? [**Let us know**](${ interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url , easy_form_title=ilao_easy_form_title, easy_form_page=current_context().question_id, easy_form_variable=current_context().variable, local=False,reset=1) } ){:target="_blank"}.

    % if nav.get_section() != None:
    % if nav.get_section() != "section_intro" and nav.get_section() != "section_download":
    % if current_context().question_id == None:
    ${ action_button_html(url_action('review_answers'), label=':edit: Edit answers', color='success', size="md") }
    % elif "review screen" not in current_context().question_id:
    ${ action_button_html(url_action('review_answers'), label=':edit: Edit answers', color='success', size="md") }
    % endif
    % endif
    % endif
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
  - other_parties[0].work_address: ALAddress
  - shared_kids: ALPeopleList.using(complete_attribute='complete', there_are_any=True)
  - petitioner_kids: ALPeopleList.using(there_are_any=True)
  - other_hh_members: ALPeopleList.using(there_are_any=True)
  - dependent_adult: ALIndividual
  - high_risk_adult: ALIndividual
  - obo_minor: ALIndividual
  - other_ops: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - other_cases: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - incidents: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - no_stay_residence: ALAddress
  - jobs: ALAddressList.using(there_are_any=True)
  - schools: ALAddressList.using(there_are_any=True)
  - other_locations: ALAddressList.using(there_are_any=True)
  - other_caretaker: ALIndividual
  - return_children_other_person: ALIndividual
  - return_children_location: ALAddress
  - pt_supervisor: ALIndividual
  - pt_location: ALAddress
  - pt_pickup_location: ALAddress
  - pt_transportation_person: ALIndividual
  - pt_return_location: ALAddress
  - pt_return_person: ALIndividual
  - petitioner_personal_property: DAList.using(object_type=Thing, there_are_any=True)
  - other_return_property_person: ALIndividual
  - one_time_transfer_person: ALIndividual
  - other_transfer_property_person: ALIndividual
  - res_other_transfer_property_person: ALIndividual
  - property_transfer_location: ALAddress
  - pets: DAList.using(object_type=Thing, there_are_any=True)
  - restricted_property_address: ALAddress
  - other_phone_account_holder: ALIndividual
  - cell_numbers: DAList.using(object_type=Thing, complete_attribute='complete', there_are_any=True)
  - warrant_location_list: ALAddressList.using(there_are_any=True)
  - service_address: ALAddress
  - second_service_address: ALAddress
  - court_list: ALCourtLoader.using(file_name='docassemble.ILAO:data/sources/il_courts.xlsx')

---
code: |
  ilao_easy_form_title = "Order of Protection"
  ilao_easy_form_url = "https://www.illinoislegalaid.org/legal-information/order-protection"
  form_name = "Order of Protection"
  al_form_type = 'new_case'
  user_ask_role = 'plaintiff'
  github_user = 'IllinoisLegalAidOnline'
  github_repo_name = 'docassemble-OrderOfProtection'
  allowed_courts = ['Circuit']
---
# Road map
sections:
  - section_intro: Start
  - section_basic: Basic information
  - section_petitioner: People you want to protect
  - section_incidents: What happened
  - section_protections: Protections
  - section_child: About your children (optional)
  - section_property: Property details
  - section_remedies: Other remedies
  - section_respondent: About the person who caused abuse
  - section_filing_info: Filing and service details
  - section_download: Download
---
# interview order block
mandatory: True
code: |
  nav.set_section('section_intro')
  sees_nav_bar
  snapshot_start  
  instructions
  whats_next
  accept_terms
  who_can_be_protected
  important_op_info
  if in_illinois == False:
    not_in_illinois
  
  nav.set_section('section_basic')
  set_progress(10)
  trial_court
  
  if jurisdiction_type.all_false():
    other_jurisdiction_location
  if trial_court_index == -1:
    cook_after_hours

  relationship_bg
  if not has_required_relationship:
    other_relief
  
  users.gather(number=1)
  other_parties.gather(number=1)
  if minor_kids_with_respondent:
    shared_kids.gather()
    include_shared_kids

  nav.set_section('section_petitioner')
  set_progress(20)
  
  protect_petitioner
  if protect_petitioner_kids:
    petitioner_kids.gather()
  if protect_dependent_adult:
    dependent_adult.name.first
  if protect_high_risk_adult:
    high_risk_adult.name.first
  if protect_other_hh_members:
    other_hh_members.gather()
  if protect_obo_minor:
    obo_minor.name.first
  
  nav.set_section('section_incidents')
  set_progress(30)
  incidents_intro
  incidents.gather()

  nav.set_section('section_protections')
  set_progress(40)
  no_harassment
  stay_away
  hide_address
  users[0].address.address
  if residence_remedies == 'exclusive possession':
    exclusive_possession_reason
  if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')):
    no_stay_under_influence
  if stay_away_jobs:
    if hide_work_address == False:
      jobs[0].employer
    if stay_away_jobs_2:
      if hide_work_address_2 == False:
        jobs[1].employer
  if stay_away_schools:
    schools[0].name
    if minor_kids_with_respondent or protect_petitioner_kids:
      if schools[0].hide:
        schools[0].type
    if stay_away_schools_2:
      schools[1].name
      if minor_kids_with_respondent or protect_petitioner_kids:
        if schools[1].hide:
          schools[1].type

  if stay_away_other:
    if other_location_1_is_school:
      schools[2].name
      if minor_kids_with_respondent or protect_petitioner_kids:
        if schools[2].hide:
          schools[2].type
    else:  
      if hide_other_address_1:
        other_locations_hidden_description_1
      else:  
        other_locations[0].name
  
  if stay_away_other:
    if stay_away_other_2:
      if other_location_2_is_school:
        schools[3].name
        if minor_kids_with_respondent or protect_petitioner_kids:
          if schools[3].hide:
            schools[3].type
      else:
        if hide_other_address_2:
          other_locations_hidden_description_2
        else:
          other_locations[1].name
  
  if same_school:
    if same_school_restrictions != "none":
      same_school_name
    
  nav.set_section('section_child')
  set_progress(50)
  if minor_kids_with_respondent:
    if primary_caretaker == "other":
      other_caretaker.address.address
    if court_make_children_decisions:
      children_live_in_il
      temp_custody_of_children  
      physical_care_of_children
      no_conceal_children
      no_removal_school
      
      no_records_no_contact
      if current_possession_of_children == False:
        if return_children_to == "court":
          appear_with_children_prevent
        elif return_children_to == "other":
          if knows_return_children_details:
            return_children_location.address
        if return_children_to != "court":
           res_appear_alone
      else:
        res_appear_alone
      if parenting_time != "reserve":
        if parenting_time == "restrict" or parenting_time == "deny":
          restrict_or_deny_pt_reasons
        if parenting_time == "restrict" or parenting_time == "grant":
          if pt_format == "interview":
            set_days_of_week
            if pt_weekdays:
              pt_weekday_days
            if pt_weekends:
              pt_weekend_cadence
            if pt_holidays:
              pt_holiday_list
            pt_start_date
          if pt_supervised:
            if pt_supervisor_type == "person":
              pt_supervisor.name.first
              pt_location_identified
            else:
              pt_visitation_center_name
          else:
            pt_location_identified
  
          pt_transportation
          pt_separate_pickup_location
          pt_separate_return_location
          pt_immediate_return

  nav.set_section('section_property')
  set_progress(60)
  if award_personal_property:
    petitioner_personal_property.gather()
    if return_property:
      return_property_reason
      return_property_person
      if property_transfer_location_cb:
        property_transfer_location.address
        property_transfer_present_cb
        property_transfer_know_date
  if return_respo_property:
    respo_property
    if residence_remedies == 'exclusive possession':
      respondent_one_time_entry

  if possession_of_animals:
    pets.gather()
  if restrict_other_property:
    restrict_cars
    restrict_property_reason
  restrict_elderly_petitioner_resources 
 
  nav.set_section('section_remedies')
  set_progress(70)
  if minor_kids_with_respondent:
    temp_child_support
  if relationship_ma:
    if relationship_se == True or relationship_xs == True:
      temp_maintenance    
  if separate_phone_service:
    phone_account_holder
    phone_provider
    cell_numbers.gather()
  expenses_none    
    
  if request_counseling:
    dv_counseling

  if firearms_threat:
    if firearms_relief['surrender']:
      intimate_partner
    if firearms_relief['warrant']:
      warrant_reasons
      warrant_location_list.gather()
      has_helpful_warrant_info
      made_dv_report
    if firearms_relief['surrender'] or firearms_relief['warrant']:
      firearms_eop_notice  
  misc_remedies_text

  nav.set_section('section_respondent')
  set_progress(80)
  knows_respondent_dob
  if knows_respondent_dob == "exact":  
    if other_parties[0].age_in_years() < 18:
      if respondent_parent_help == "Yes":
        respondent_parent_name
  else:
    if respondent_parent_help == "Yes":
      respondent_parent_name
  
  other_parties[0].gender
  other_parties[0].race
  other_parties[0].height_feet
  if trial_court_index == -1:
    other_parties[0].alias_names
    caution_reasons

  if knows_respondent_home:
    other_parties[0].address.address
  else:
    if knows_respondent_home_last:
      other_parties[0].address.address
  other_parties[0].phone_number
  if trial_court_index == -1:
    respondent_on_social_media
  
  if knows_respondent_work:
    other_parties[0].work_address.address
    
  if trial_court_index == -1:
    cook_vehicle_color
    
  if has_other_ops == "Yes":
    other_ops.gather()
  if has_other_cases == "Yes":
    other_cases.gather()  

  nav.set_section('section_filing_info')
  set_progress(90)
  service_method
  if service_method == "sheriff" and service_state != "IL":
    service_county

  if service_address_choice == "other":
    service_address.address
  if has_second_service_address:  
    if second_service_address_choice == "other":
      second_service_address.address
    other_parties[0].phone_number_alt

  if trial_court_index == -1:
    service_information
  
  eop 
  case_number
  if trial_court_index == -1:
    if previous_cook_case_type != "none":
      previous_cook_case_date

  users[0].phone_number
  if users[0].email_notice == True:
    users[0].email
  e_signature

  nav.set_section('section_download')  
  set_progress(100)
  #clean_up
  forms_assembling
  snapshot_forms
  get_docs_screen
---
code: |
  stuff_to_snapshot = {
  	'start_time': str(current_datetime().format_datetime()),
  	'started_interview': True, 
  	}

  try:
    stuff_to_snapshot['ip_address'] = device(ip=True)
  except:
    pass
    
  stuff_to_snapshot['zip'] = showifdef('users[0].address.zip')

  stuff_to_snapshot['downloaded_forms'] = showifdef('forms_assembling')

  try:
    stuff_to_snapshot['session_id'] = current_context().session
  except:
    pass
  
  store_variables_snapshot(
  	data=stuff_to_snapshot, persistent=True
  	)
  snapshot_interview_state = True
---
code: |
  snapshot_interview_state
  snapshot_start = True  
---
code: |
  reconsider('snapshot_interview_state')
  snapshot_forms = True
---  
terms:
  - "advance written notice": |
      **Advance written notice** means they received a copy of the Petition for Order of Protection and Summons before the court hearing. These include the date and time of the court hearing.
---
# thought 1.4.64 Docassemble update made "mandatory: True" not required but oh well
mandatory: True
code: |
  dow_full = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
  dow_abb = ['Sun.', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.']
  set_days_of_week = True
---
id: welcome
question: |
  Order of Protection
subquestion: |
  Welcome to Illinois Legal Aid Online's **Order of Protection** Easy Form.

  This program makes forms that help you ask the court to order someone to stop harming or threatening you, your children, or other household members. The Order of Protection can also require the abuser to stay away from other protected people and locations.

  To learn more, read ILAO's article about [**Orders of Protection**](https://www.illinoislegalaid.org/node/29806).
  
  #### Your safety is important
  
  * If you are in immediate danger, call 911.
  * If you need to exit this program, click the red **Escape** button at the top of the screen.
  * Learn about [**safety while using the Internet**](https://www.thehotline.org/help/tech-social-media-safety/).
field: sees_nav_bar
---
id: instructions
continue button field: instructions
question: |
  Instructions
subquestion: |
  To use this program you will need to know: 

  * A safe mailing address where the court can contact you,
  * Information about people you want to protect,
  * Details about the abuser, including where they can be found,
  * Details about the abuse and when it happened,
  * What property and places you want to protect, and
  * Information about other court cases involving you and the abuser, if known.

  If you have children with the abuser, you also need to know:
  
  * School or daycare information, and
  * How you want the court to restrict parenting time, if any.

  Set aside 15 to 30 minutes to finish this program. You can login and save your work to continue later. 
 
  ${ collapse_template(help_example) }  

  Click on **{green words}** to learn what they mean. Some pages have a question mark in a circle ${ fa_icon("question-circle", color_css="#0dcaf0" ) } that helps explain things.
---
template: help_example
subject: |
  **You can click sections like this to show more information.**
content: |  
  This is an example of help. Click again to hide.
---
id: whats next
continue button field: whats_next
question: |
  After you finish this program
subquestion: |
  After you download your ${ form_name } forms, you must file them with the court clerk's office. This program **does not file** your ${ form_name } forms for you.
  
  You can also download "How to Ask for an Order of Protection" instructions at the end of this program. The instructions can guide you through filing your forms and going to court. 
---
template: get_legal_help
subject: |
  **What if I need legal advice?**
content: |  
  If you have questions or concerns about your legal problem and want legal advice you should talk to a lawyer.
  
  Use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
id: who can be protected
continue button field: who_can_be_protected
question: |
  Who can get an Order of Protection
subquestion: |
  You can ask for an Order of Protection if you have been abused by a current or ex-romantic partner or a family or household member, such as a:
  
  * Current or ex-spouse,
  * Person with whom you live or used to live,
  * Parent of your child,
  * Relative by blood,
  * Related through a current or a prior marriage,
  * Relative of your child (includes relatives of your foster child, adopted child or prospective adopted child, or relatives of a child for whom you are the legally-appointed guardian or legally-appointed custodian), or
  * Caregiver for persons with disabilities.

  You can also ask for an Order of Protection if you are filing for any person who has been abused by a family or household member, but is unable to file on their own. This could be a minor child or a person with disabilities.

  There are many kinds of abuse. To learn more, read ILAO's [**Domestic violence common questions**](https://www.illinoislegalaid.org/node/185806).
---
id: important op info
continue button field: important_op_info
question: |
  Things you should know
subquestion: |
  The person who caused the abuse is called the **Respondent**. In court, the judge will use this word to refer to the abuser. This program and the forms will do the same.

  **You will need to include an address where the Respondent can be found.** This is so the sheriff can deliver the court papers. Delivery of the court papers is called **service.** This might be where the Respondent lives, works, or a place where they stay. **Note: the Respondent will get a copy of all the court forms, except for the ones that are confidential like school or daycare location.**

  You will need to list an address on your court forms. **If you do not want the Respondent to know where you are staying, or if you do not have a home address, you can list a different safe mailing address where you will receive court documents.**

  **The Order of Protection is not valid until signed by a judge.** You must go to court, either in person or remotely, where a judge will decide whether or not to grant you an Order of Protection.
---
id: cook after hours option
continue button field: cook_after_hours
question: |
  Cook County after-hours court
subquestion: |
  **Cook County domestic violence courts have additional hours during nights and weekends**, excluding [**court holidays**](https://www.cookcountycourt.org/ABOUT-THE-COURT/Legal-Court-Holidays).
  
  Cook County after-hours court clerks and judges are available **only**:

  * Monday through Friday: 9:00 PM to 3:00 AM
  * Saturday and Sunday: 1:00 PM to 6:00 PM
  
  If you want to schedule a remote hearing during these limited hours, use the [**Emergency Order of Protection - Cook County Easy Form**](https://www.illinoislegalaid.org/node/176901) instead. Otherwise, click **Next** to continue making your forms.

---
id: in illinois
question: |
  Do you want to file for an Order of Protection in Illinois?
subquestion: |
  You can file in Illinois if:

  * You live in Illinois,
  * The person you are filing against lives in Illinois,
  * The abuse took place in Illinois, or
  * You are in Illinois to avoid abuse elsewhere.
fields:
  - no label: in_illinois
    datatype: yesnoradio
---
id: not in illinois
event: not_in_illinois
question: |
  Sorry
subquestion: |
  This program is only for people who want an Order of Protection in Illinois.
  
  You can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: county
continue button field: case_county
question: |
  In which county will you file your ${ form_name }?
subquestion: |
  You can file your case in the county:
  
  * Where you live,
  * Where the person who caused the abuse lives,
  * Where the abuse occurred, or
  * Where you are staying to avoid abuse.
fields:
  - no label: trial_court_index
    datatype: integer
    code: |
      court_county_lookup()
  - note: |
      ${ collapse_template(county_lookup_help) }  
---
template: county_lookup_help
subject: |
  **What if I need help finding the county?**
content: |  
    You can use this [**City-to-County Finder**](https://www.statsamerica.org/CityCountyFinder/) to find the county.
---
depends on:
  - trial_court_index
code: |
  trial_court = court_list.as_court('trial_court', trial_court_index)
---
code: |
  def court_county_lookup(lowercase=False):
    all_court_counties = court_list._load_courts()['address_county'].items()
    filtered_courts = [(-1, "cook")] if lowercase else [(-1, "Cook")]
    for court in all_court_counties:
      if court[1] != "Cook":
        court_name = court[1].lower() if lowercase else court[1]
        filtered_courts.append((court[0],court_name))
    return sorted( filtered_courts, key=lambda y: y[1])
---
depends on:
  - trial_court_index
code: |
  if trial_court_index == -1:
    trial_court = court_list.as_court('trial_court', 15)
    trial_court.address.county = "Cook"
  else:
    trial_court = court_list.as_court('trial_court', trial_court_index)
---
id: jurisdiction
#continue button field: jurisdiction
question: |
  Why do you want to file in ${ trial_court.address.county } County?
subquestion: |
  Check all that apply.
fields:
  - no label: jurisdiction_type
    datatype: checkboxes
    choices:
      - I live in ${ trial_court.address.county } County.: I live here
      - The person I am filing against lives in ${ trial_court.address.county } County.: Respondent lives here
      - The abuse took place in ${ trial_court.address.county } County.: Abuse was here
      - I am in ${ trial_court.address.county } County to avoid abuse elsewhere.: Abuse was elsewhere
---
id: not proper location
event: other_jurisdiction_location
question: |
  Sorry
subquestion: |
  You can file your case in the Illinois county:
  
  * Where you live,
  * Where the person who caused the abuse lives,
  * Where the abuse occurred, or
  * Where you are staying to avoid abuse.

  If Illinois is not the right place to ask for an Order of Protection, you can use the [**Legal Services Corporation website**](https://www.lsc.gov/about-lsc/what-legal-aid/get-legal-help) to find a legal aid organization near you.
buttons:
  - Exit: exit
  - Restart: restart
---
id: relationship
question: |
  How are you related to the person who caused the abuse?
subquestion: |
  If you are asking for an Order of Protection for someone other than yourself, select how **they** are related to the person who caused the abuse.
  
  You can check more than one. Use the current relationship where possible.
fields:
  - I am their boyfriend, girlfriend, or romantic partner (including ex-).: relationship_bg
    datatype: yesnowide
  - We have children together and were never married.: relationship_cc
    datatype: yesnowide
  - We have or might have children together.: relationship_ac
    datatype: yesnowide
  - We are related through a current or past marriage, such as a spouse, in-law, or step-sibling. **Click to see options.**: relationship_ma
    help: |
      Select this if you are a spouse, ex-spouse, in-law, step-child, step-brother, step-sister, step-sibling, or other family member of the person who caused the abuse.
    datatype: yesnowide
  - I am their spouse.: relationship_se
    datatype: yesno
    show if: relationship_ma
  - I am their ex-spouse.: relationship_xs
    datatype: yesno
    show if: relationship_ma
  - I am their in-law.: relationship_il
    datatype: yesno
    show if: relationship_ma
  - I am their step child.: relationship_sc
    datatype: yesno
    show if: relationship_ma
  - I am their step brother, step sister, or step sibling.: relationship_ss
    datatype: yesno
    show if: relationship_ma
  - They are another family member.: relationship_ofm
    datatype: yesno
    show if: relationship_ma
  - We share or shared a living space.: relationship_cs
    datatype: yesnowide
    help: |
      Example: We share a common area like a kitchen. This would not apply if you just had apartments in the same building.
  - We are related through blood, such as a child, parent, or sibling. **Click to see options.**: relationship_bl
    datatype: yesnowide
    help: |
      Select this if you are a child, parent, brother, sister, sibling, grandchild, grandparent, or other family member of the person who caused the abuse.
  - I am their child.: relationship_ch
    datatype: yesno
    show if: relationship_bl
  - I am their parent.: relationship_pa
    datatype: yesno
    show if: relationship_bl
  - I am their brother, sister, or sibling.: relationship_sb
    datatype: yesno
    show if: relationship_bl
  - I am their grandchild.: relationship_gc
    datatype: yesno
    show if: relationship_bl
  - I am their grandparent.: relationship_gp
    datatype: yesno
    show if: relationship_bl
  - They are another family member.: relationship_ofb
    datatype: yesno
    help: |
      Examples: Uncle, aunt, or cousin.
    show if: relationship_bl
  - We have a blood relationship through a child.: relationship_bk
    datatype: yesnowide
  - The abuser is a family or household member of my adopted, prospective adopted, or foster child.: relationship_a
    datatype: yesnowide
  - The abuser is a family or household member of a child that I am the legally-appointed guardian or custodian of.: relationship_l
    datatype: yesnowide
  - The abuser is my personal caregiver, and I am a high-risk adult with disabilities or otherwise need care.: relationship_pc
    datatype: yesnowide
    help: |
      A **high risk adult with disabilities** is a person aged 18 or over whose physical or mental disability keeps them from protecting themself from abuse, neglect, or exploitation.

validation code: |
  if relationship_ma:
    if relationship_se == True and relationship_cc == True:
      validation_error('You selected both "never married" and "related through marriage" (spouse). Please adjust your answers.', field="relationship_cc")
    if relationship_xs == True and relationship_cc == True:
      validation_error('You selected both "never married" and "related through marriage" (ex-spouse). Please adjust your answers.', field="relationship_cc")
    if not relationship_se and not relationship_xs and not relationship_il and not relationship_sc and not relationship_ss and not relationship_ofm:
      validation_error('Select a relationship through marriage.', field="relationship_ma")
  if relationship_bl:
    if not relationship_ch and not relationship_pa and not relationship_sb and not relationship_gc and not relationship_gp and not relationship_ofb:
      validation_error('Select a relationship through blood.', field="relationship_bl")

---
# removed after relationship answers reworded
template: relationship_example
subject: |
  **Can I see some examples?**
content: |  
  If you want an Order of Protection against your mother, select **Child** because you are the child of that person.
  
  If you want an Order of Protection against the father of your foster child, select **Family or household member of my foster child**.
---
depends on:
  - relationship_bg
  - relationship_cc
  - relationship_ac
  - relationship_ma
  - relationship_se
  - relationship_xs
  - relationship_il
  - relationship_sc
  - relationship_ss
  - relationship_ofm
  - relationship_cs
  - relationship_bl
  - relationship_ch
  - relationship_pa
  - relationship_sb
  - relationship_gc
  - relationship_gp
  - relationship_ofb
  - relationship_bk
  - relationship_a
  - relationship_l
  - relationship_pc
code: |
  relationship_list = [
      relationship_bg,
      relationship_cc,
      relationship_ac,
      relationship_ma,
      relationship_cs,
      relationship_bl,
      relationship_bk,
      relationship_a,
      relationship_l,
      relationship_pc
  ]
  if any(relationship_list):
    has_required_relationship = True
  else:
    has_required_relationship = False
---
id: not proper relationship
event: other_relief
question: |
  Sorry
subquestion: |
  You can file for an Order of Protection only if the person you want protected has a qualifying relationship with the abuser.
  
  A Stalking No Contact Order might work better in your situation. Read ILAO's article about [**Getting a Stalking No Contact Order**](https://www.illinoislegalaid.org/node/30216) to learn more.
  
buttons:
  - Exit: exit
  - Restart: restart
---
id: petitioner name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
subquestion: |
  Enter your name, even if you are filing the Order of Protection on behalf of your family or household members. In court and on the forms, you will be listed as the **Petitioner**.
fields:
  - code: |
      users[0].name_fields()
---
id: respondent name
sets:
    - other_parties[0].name.first
    - other_parties[0].name.last
    - other_parties[0].name.middle
    - other_parties[0].name.suffix
question:  |
  Who is the person you want an Order of Protection against?
subquestion: |
  This person will be called the **Respondent** in court and on the forms.
fields:
  - code: |
      other_parties[0].name_fields()
---
id: know respondent birthdate
question: |
  Do you know ${other_parties[0].name_full()}'s birthdate?
fields:   
  - no label: knows_respondent_dob
    datatype: radio
    choices:
      - Yes, I will enter the date.: exact
      - I can enter how old I think they are.: some
      - I don't know it.: idk
        help: |
          % if trial_court_index == -1:
          You can update the Cook County Sheriff's office when you have this information. Email them anytime at ccso.protectiveorders@ccsheriff.org or call them at 312-603-2134 or 312-603-3340 (Monday through Friday, 8AM to 5PM).
          % else:
          You may want to update the sheriff's office when you have this information.
          % endif
  - ${other_parties[0].name_full()}'s date of birth: other_parties[0].birthdate
    datatype: ThreePartsDate
    alMax: ${ today().format("yyyy-MM-dd") }
    show if: 
      variable: knows_respondent_dob
      is: exact
  - How old do you think ${other_parties[0].name_full()} is?: other_parties[0].approx_age
    maxlength: 20
    show if:
      variable: knows_respondent_dob
      is: some
---
id: minor kids with respondent
question: |
  Do you have any minor children with ${other_parties[0].name_full()}?
subquestion:
  Minor children are under 18.
field: minor_kids_with_respondent
choices:
  - Yes: True
  - No: False
---
# removing while debugging
#reconsider: True
#depends on: minor_kids_with_respondent
#code: |
#  if minor_kids_with_respondent == False:
#    protect_shared_kids = False
#  minor_kids_logic_check = True
#
---
depends on: minor_kids_with_respondent
id: protected parties
question: |
  Who do you want protected by this Order of Protection?
subquestion: |
  Check all that apply.
fields:
  - Me: protect_petitioner
    datatype: yesnowide
    default: True
  - Minor children I have with ${other_parties[0].name_full()}: protect_shared_kids
    datatype: yesnowide
    help: |
      Check this if you want the order to protect your minor children you have with ${other_parties[0].name_full()}.
    # removing this show if to accommodate adding minor children thru review, maybe revisit
    #show if:
    #  code: |
    #    minor_kids_with_respondent == True
  - My minor children I **did not** have with ${other_parties[0].name_full()}: protect_petitioner_kids
    datatype: yesnowide
  - A dependent adult: protect_dependent_adult
    datatype: yesnowide
    help: |
      A **dependent adult** is an elder adult who can't protect themself from abuse by a family or household member.
  - A high risk adult with disabilities: protect_high_risk_adult
    datatype: yesnowide
    help: |
      A **high risk adult with disabilities** is a person aged 18 or over whose physical or mental disability keeps them from protecting themself from abuse, neglect, or exploitation.
  - Other household members: protect_other_hh_members
    datatype: yesnowide
    help: |
      **Other household members** include spouses, former spouses, parents, children, stepchildren and other persons related by blood or by present or prior marriage, persons who share or formerly shared a common dwelling, persons who have or allegedly have a child in common, persons who share or allegedly share a blood relationship through a child, persons who have or have had a dating or engagement relationship, persons with disabilities and their personal assistants, and caregivers.
  - A minor child I am filing on behalf of. This is not my child by birth or adoption.: protect_obo_minor
    datatype: yesnowide
validation code: |
  if not (protect_petitioner or protect_shared_kids or protect_petitioner_kids or protect_dependent_adult or protect_high_risk_adult or protect_other_hh_members or protect_obo_minor):
    validation_error("Select at least one choice to continue.", field="protect_obo_minor")
---
sets:
  - shared_kids[0].name.first
  - shared_kids[0].name.middle
  - shared_kids[0].name.last
  - shared_kids[0].name.suffix
id: name of first child with respondent
question: |
  Who is your minor child with ${other_parties[0].name_full()}?
subquestion: |
  The statewide Order of Protection forms have space for up to 6 minor children with the Respondent.
fields:
  - code: |
      shared_kids[0].name_fields()
---
id: names of other children with respondent
sets:
  - shared_kids[i].name.first
  - shared_kids[i].name.middle
  - shared_kids[i].name.last
  - shared_kids[i].name.suffix
question: |
  Who is your ${ ordinal(i) } minor child with ${other_parties[0].name_full()}?
fields:
  - code: |
      shared_kids[i].name_fields()
---
id: any other children with respondent
question: |
  Do you have another minor child with ${other_parties[0].name_full()}?
subquestion: |
  The statewide Order of Protection forms have space for up to 6 minor children with the Respondent.
  % if len(shared_kids.elements) >= 1:  
  So far you have told us about ${shared_kids.full_names()}.
  % endif
fields:
  - "Anyone else?": shared_kids.there_is_another
    datatype: yesnoradio
---
sets:
  - petitioner_kids[0].name.first
  - petitioner_kids[0].name.middle
  - petitioner_kids[0].name.last
  - petitioner_kids[0].name.suffix
id: name of first child not with respondent
question: |
  Who is your minor child **not with** ${other_parties[0].name_full()} you want protected by this order?
subquestion: |
  If you want to include more than one, you can enter their names on following screens.
fields:
  - code: |
      petitioner_kids[0].name_fields()
---
id: names of other children not with respondent
sets:
  - petitioner_kids[i].name.first
  - petitioner_kids[i].name.middle
  - petitioner_kids[i].name.last
  - petitioner_kids[i].name.suffix
question: |
  Who is your ${ ordinal(i) } minor child **not with** ${other_parties[0].name_full()}  you want protected by this order?
fields:
  - code: |
      petitioner_kids[i].name_fields()
---
id: any other children not with respondent
question: |
  Do you have another minor child **not with** ${other_parties[0].name_full()} you want protected by this order?
subquestion: |
  % if len(petitioner_kids.elements) >= 1:  
  So far you have told us about ${petitioner_kids.full_names()}.
  % endif
fields:
  - "Anyone else?": petitioner_kids.there_is_another
    datatype: yesnoradio
---
sets:
  - other_hh_members[0].name.first
  - other_hh_members[0].name.middle
  - other_hh_members[0].name.last
  - other_hh_members[0].name.suffix
id: name of first other household member
question: |
  Who is the household member you want protected by this order?
subquestion: |
  If you want to include more than one, you can enter their names on following screens.
fields:
  - code: |
      other_hh_members[0].name_fields()
---
id: names of other household members
sets:
  - other_hh_members[i].name.first
  - other_hh_members[i].name.middle
  - other_hh_members[i].name.last
  - other_hh_members[i].name.suffix
question: |
  Who is the ${ ordinal(i) } household member you want protected by this order?
fields:
  - code: |
      other_hh_members[i].name_fields()
---
id: any other household members
question: |
  Do you have another household member you want protected by this order?
subquestion: |
  % if len(other_hh_members.elements) >= 1:  
  So far you have told us about ${other_hh_members.full_names()}.
  % endif
fields:
  - "Anyone else?": other_hh_members.there_is_another
    datatype: yesnoradio
---
id: minor child info
generic object: ALIndividual
question: |
  Tell us more about ${ x.name_full()}
subquestion: |
  ${ collapse_template(minor_child_residence_help) }
fields:
  - Date of birth: x.birthdate
    datatype: date
    min: ${ (today() - date_interval(years=18)).format("yyyy-MM-dd") }
    max: ${ today().format("yyyy-MM-dd") }
  - State of residence (past 6 months): x.address.state
    help: |
      This is where the child currently lives. If the child is under 6 months old, this is where the child lived since birth.
    code: states_list()
  - note: |
      ${ collapse_template(legal_parentage_help) }
  - Your legal parentage has already been established.: x.pet_parentage
    datatype: yesnomaybe
  - ${other_parties[0].name_full()}'s legal parentage has already been established.: x.res_parentage
    datatype: yesnomaybe
  - Include as a protected person?: x.protect
    datatype: yesnoradio
    help: |
      Select **Yes** if you want the order to protect the child from ${other_parties[0].name_full()}. 
---
template: minor_child_residence_help
subject: |
  **What if the child has not lived in the same state over the past 6 months?**
content: |  
  If ${ x.name_full()} has not lived in Illinois or the state you select for the past 6 months, you may want to talk with a lawyer. There are laws that affect which state courts can settle things like child custody. If the child is under 6 months old, select where the child lived since birth.
  
  Call the [**Illinois Domestic Violence Hotline**](https://the-network.org/get-help/) at 877-863-6338 (877-TO END DV) to talk with an advocate. You can also use [**Get Legal Help**](https://www.illinoislegalaid.org/get-legal-help) to find free or low-cost legal services in your area.
---
template: legal_parentage_help
subject: |
  **How do I know if legal parentage has been established?**
content: |  
  **Legal parentage** of a child may be established in the following ways:
  
  1. A child who was born before, during, or within 300 days after the marriage or civil union, is considered a legal child of the couple. Both parents' names must have been added to the child's birth certificate.
  2. Both parents have signed a Voluntary Acknowledgement of Paternity (VAP).
  3. There is a court order or administrative order establishing parentage.
  4. By giving birth to the child.
  
---
code: |
  shared_kids[i].name.first
  shared_kids[i].birthdate
  shared_kids[i].complete = True
---
code: |
  if shared_kids.number_gathered() >= 6:
    shared_kids.there_is_another = False
---
sets:
  - dependent_adult.name.first
  - dependent_adult.name.middle
  - dependent_adult.name.last
  - dependent_adult.name.suffix
id: name of dependent adult
question: |
  Who is the dependent adult you want protected by this order?
fields:
  - code: |
      dependent_adult.name_fields()
---
sets:
  - high_risk_adult.name.first
  - high_risk_adult.name.middle
  - high_risk_adult.name.last
  - high_risk_adult.name.suffix
id: name of high risk adult
question: |
  Who is the high risk adult you want protected by this order?
fields:
  - code: |
      high_risk_adult.name_fields()
---
sets:
  - obo_minor.name.first
  - obo_minor.name.middle
  - obo_minor.name.last
  - obo_minor.name.suffix
id: name of minor filing on behalf of
question: |
  Who is the minor child you want protected by this order?
subquestion: |
  This is a child you are filing on behalf of, but is not your child by birth or adoption.
fields:
  - code: |
      obo_minor.name_fields()
---
id: order type
question: |
  Which type of Order of Protection do you want against ${other_parties[0].name_full()}?
subquestion: |
  You can ask for both.
  
  **Important:** It is easier to ask for both an Emergency and a Plenary Order of Protection now. If you change your mind later, it involves less paperwork.
fields:
  - Emergency: eop
    datatype: yesnowide
    default: True
    help: |
      **Emergency Order of Protection**

      * Judge can give this order on the same day you file, before ${other_parties[0].name_full()} is notified
      * Lasts for 14 to 21 days
      * After ${other_parties[0].name_full()} is served with court papers, you can ask for a long-term (Plenary) Order of Protection
  - Plenary: pop
    datatype: yesnowide
    help: |
      **Plenary (long-term) Order of Protection**
          
      * Judge can give this order on a later date, after ${other_parties[0].name_full()} has been notified
      * Lasts for up to 2 years
      * ${other_parties[0].name_full()} will have a chance to participate in the court case
validation code: |
  if not (eop or pop):
    validation_error("Please select at least one type of order to continue.", field="pop")

---
id: other ops
question: |
  Other Orders of Protection
subquestion: |
  Is there now, or has there ever been, an Order of Protection in any state against ${other_parties[0].name_full()} involving you or other people you want to protect in this Order?
fields:
  - Other Orders of Protection?: has_other_ops
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know
---
id: other ops detail
question: |
  Tell us about the ${ ordinal(i) } Order of Protection
fields:
  - Names of people involved (separate by commas): other_ops[i].name.text
    maxlength: 35
    help: |
      The form does not have much room. You may need to abbreviate or use initials.
  - State: other_ops[i].state
    code: |
      states_list()
  - County: other_ops[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_ops[i].state') === "IL"
  - County: other_ops[i].county
    maxlength: 25
    js show if: |
      val('other_ops[i].state') != "IL"
  - Case number: other_ops[i].case_number
    maxlength: 20
  - Year: other_ops[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
  - Is the case still ongoing?: other_ops[i].is_pending
    datatype: yesnoradio
      
---
id: more ops
question: |
  Are there any more Orders of Protection you would like to list?
subquestion: |
  You can enter up to 9 Orders of Protection in total.
  % if len(other_ops.elements) == 1:  
  So far you told us about 1 other Order of Protection. 
  % else:
  So far you told us about ${ str(len(other_ops.elements)) } other Orders of Protection. 
  % endif
field: other_ops.there_is_another
choices:
  - Yes: True
  - No: False

---
code: |
  other_ops[i].name.text
  other_ops[i].state
  other_ops[i].county
  other_ops[i].case_number
  other_ops[i].year
  other_ops[i].is_pending
  other_ops[i].complete = True
---
code: |
  if other_ops.number_gathered() >= 9:
    other_ops.there_is_another = False
---

id: other cases
question: |
  Other court cases with ${other_parties[0].name_full()}
subquestion: |
  Are there now, or have there ever been, any other court cases (civil or criminal) involving ${other_parties[0].name_full()} and you or other people you want to protect in this Order?
  
  Examples include:
  
  * Divorce
  * Custody
  * Child support
  * Parentage or paternity
  * Parenting time
  * Guardianship
  * Adoption
  * Criminal
  * Abuse and neglect
  
  **Note:** Do not include other Orders of Protection.
fields:
  - Other court cases?: has_other_cases
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know
---
id: other cases detail
question: |
  Tell us about the ${ ordinal(i) } court case
subquestion: |
  Examples include:
  
  * Divorce
  * Custody
  * Child support
  * Parentage or paternity
  * Parenting time
  * Guardianship
  * Adoption
  * Criminal
  * Abuse and neglect
  
  **Note:** Do not include other Orders of Protection.
fields:
  - Names of people involved (separate by commas): other_cases[i].name.text
    maxlength: 35
    help: |
      The form does not have much room. You may need to abbreviate or use initials.
  - State: other_cases[i].state
    code: |
      states_list()
  - County: other_cases[i].county
    code: |
      court_list._load_courts()["address_county"].unique()      
    js show if: |
      val('other_cases[i].state') === "IL"
  - County: other_cases[i].county
    maxlength: 25
    js show if: |
      val('other_cases[i].state') != "IL"
  - Case number: other_cases[i].case_number
    maxlength: 20
  - Year: other_cases[i].year
    input type: combobox
    datatype: integer
    maxlength: 4
    min: ${ today().year-120 }
    max: ${ today().year }
    code: |
      reversed(range(today().year-120, today().year+1))
  - Is the case still ongoing?: other_cases[i].is_pending
    datatype: yesnoradio    
---
id: more cases
question: |
  Are there any more court cases you would like to list?
subquestion: |
  You can enter up to 9 cases in total.
  % if len(other_cases.elements) == 1:  
  So far you told us about 1 other case. 
  % else:
  So far you told us about ${ str(len(other_cases.elements)) } other cases. 
  % endif
field: other_cases.there_is_another
choices:
  - Yes: True
  - No: False
---
code: |
  other_cases[i].name.text
  other_cases[i].state
  other_cases[i].county
  other_cases[i].case_number
  other_cases[i].year
  other_cases[i].is_pending
  other_cases[i].complete = True
---
code: |
  if other_cases.number_gathered() >= 9:
    other_cases.there_is_another = False
---


---
id: incidents intro
continue button field: incidents_intro
question: |
  You can do this
subquestion: |
  It can be hard, but it is important to list the full history of abuse in your petition.

  Start with what happened **most recently**.

  Be sure to include the **most severe** abuse, even if it happened long ago.

  Explain **how the abuse affected you**, even if the abuse was emotional, verbal, financial, or controlling.

  You can include any past abuse and any criminal convictions that resulted.
---
id: incidents detail
question: |
  Tell us about another incident of abuse
subquestion: |
  Try to be specific about:
  
  * What ${other_parties[0].name_full()} did,
  * What ${other_parties[0].name_full()} said,
  * Where the abuse happened,
  * How the abuse happened, such as in person, by phone or text, etc.,
  * Who was there when the abuse happened, and
  * The effects the abuse had on you, other survivors, and anyone else who was there. It is important to mention any children that were present or were affected by the abuse.
  
  Include any threats or use of a weapon.
  
  For repeated abuse, include the date and time of the most recent incident. You can add things like "weekly" or "anytime I work late" if it applies. 

fields:
  - Date (month and year): incidents[i].date
    maxlength: 20
    help: |
      If you don't remember the exact date, enter the month and year. Use abbreviations if needed. Also, any format is fine. For example: Sept. 3, 2024 or 9/3/24.
  - Time: incidents[i].time
    maxlength: 20
    help: |
      If you don't remember the exact time, enter "morning" or "afternoon" or "night." Use abbreviations if needed.
  - What happened: incidents[i].name.text
    input type: area
    rows: 18
    maxlength: 800
    help: |
      The petition has space for about 800 characters including spaces for each incident.
---
id: first incident detail
question: |
  Tell us about the most recent incident of abuse
subquestion: |
  Try to be specific about:
  
  * What ${other_parties[0].name_full()} did,
  * What ${other_parties[0].name_full()} said,
  * Where the abuse happened,
  * How the abuse happened, such as in person, by phone or text, etc.,
  * Who was there when the abuse happened, and
  * The effects the abuse had on you, other survivors, and anyone else who was there. It is important to mention any children that were present or were affected by the abuse.
  
  Include any threats or use of a weapon.
  
  For repeated abuse, include the date and time of the most recent incident. You can add things like "weekly" or "anytime I work late" if it applies. 

fields:
  - Date (month and year): incidents[0].date
    maxlength: 20
    help: |
      If you don't remember the exact date, enter the month and year. Use abbreviations if needed. Also, any format is fine. For example: Sept. 3, 2024 or 9/3/24.
  - Time: incidents[0].time
    maxlength: 20
    help: |
      If you don't remember the exact time, enter "morning" or "afternoon" or "night." Use abbreviations if needed.
  - What happened: incidents[0].name.text
    input type: area
    rows: 18
    maxlength: 800
    help: |
      The petition has space for about 800 characters including spaces for each incident.
---
template: incidents_help
subject: |
  **What if I don't remember the date and time?**
content: |  
  If you don't remember the exact date, enter the month or season and year.  

  If you don't remember the exact time, enter "morning" or "afternoon" or "night."
---
id: more incidents
question: |
  Are there any more incidents of abuse you would like to list?
subquestion: |
  You can enter up to 12 incidents in total.
  % if len(incidents.elements) == 1:  
  So far you told us about 1 incident. 
  % else:
  So far you told us about ${ str(len(incidents.elements)) } incidents. 
  % endif
field: incidents.there_is_another
choices:
  - Yes: True
  - No: False
---
code: |
  incidents[i].date
  incidents[i].time
  incidents[i].name.text
  incidents[i].complete = True
---
code: |
  if incidents.number_gathered() >= 12:
    incidents.there_is_another = False
---
id: no abuse
question: |
  What do you want the court to order ${other_parties[0].name_full()} to not do?
subquestion: |
  This includes ordering ${other_parties[0].name_full()} to not do these things and not to threaten to do these things.

  Check as many as you want, even if ${other_parties[0].name_full()} has not done this before.
fields:
  - Harassment: no_harassment
    datatype: yesnowide
    help: |
      **Harassment** means doing something that is unreasonable, that would cause most people to be upset, and causes this particular person to be upset.
      
      Examples of harassment include:
      
      * Name calling or yelling
      * Threatening to hurt you, other people, animals, or property
      * Constantly contacting you through phone calls, text messages, social media messages, or emails
      * Threating to commit suicide
      * Sharing personal images without your permission
      * Stalking or following you
  - Physical abuse: no_physical
    datatype: yesnowide
    help: |
      **Physical abuse** means physically hurting someone, sexually abusing or assaulting them, keeping them from leaving, forcing them to stay awake when they want to sleep, and putting them at risk by acting recklessly.
      
      Examples of physical abuse include:
      
      * Slapping, punching, kicking, strangling (choking)
      * Pushing, pulling, shaking
      * Pulling hair, pinching, poking, biting
      * Rape (even between married parties), sexual assault, or sexual abuse
      * Use of guns, knives, or other weapons
  - Stalking: no_stalking
    datatype: yesnowide
    help: |
      **Stalking** means following or monitoring someone without a good reason at least 2 separate times, or following or monitoring someone while also:
      
      * Making threats to harm, sexually assault, or keep a person from leaving against their will; or threatening to do these things to a family member, or
      * Making a person concerned that they will be harmed, sexually assaulted, or kept from leaving against their will; or concerned that these things will be done to their family member.
      
      Examples of stalking include:
      
       * Following you multiple times 
       * Sitting/waiting outside of your residence or job and threatening to hurt you
  - Willful deprivation: no_willful
    datatype: yesnowide
    help: |
      **Willful deprivation** means not giving someone the medicine, medical care, shelter, food, medical items, or other physical help that they need because of their age, health issues, or disability; meaning that they might be physically, mentally, or emotionally harmed as a result.
      
      Examples of willful deprivation include:
      
      * Not giving an elderly family member who you care for their medicine
      * Not feeding your child
  - Intimidation of a dependent: no_intimidation
    datatype: yesnowide
    help: |
      **Intimidation of a dependent** means physically harming someone or physically stopping them from leaving in front of someone who is their dependent because of their age, poor health or disability; or making the dependent help with their abuse.
      
      An example of intimidation of a dependent is hitting someone in front of their child.
  - Exploitation of a high-risk adult with disabilities: no_exploitation
    datatype: yesnowide
    help: |
      **Exploitation** means stealing from someone who is considered a high-risk adult with disabilities. This is illegal and often harmful. It includes doing things like lying to someone so that they give you money, or pressuring someone who trusts you to spend their money on something you want.

  - Neglect of a high-risk adult with disabilities: no_neglect
    datatype: yesnowide
    help: |
      **Neglect** means not protecting a high-risk adult with disabilities in the way that most people would. It includes:
      
      * Not protecting them from abuse,
      * Holding them against their will or not letting them leave or move around enough,. 
      * Not providing things they need to survive, like food, shelter, clothes, and baths,    
      * Not providing the medical or mental health care they need, or   
      * Not protecting them from health and safety hazards.
      
  - Interference with personal liberty: no_interference
    datatype: yesnowide
    help: |
      **Interference with personal liberty** means stopping someone from doing something they want to do, or forcing someone to do something they do not want to do, by doing or threating to do any of these things: physical abuse, harassment, intimidation or willful deprivation.
      
      Examples of interference with personal liberty include:
      
      * Preventing you from using the phone
      * Preventing you from leaving the house or car
      * Stealing or breaking a cell phone
---
id: stay away
question: |
  Do you want the court to order ${other_parties[0].name_full()} to stay away and not communicate with people protected by this order?
subquestion: |
  If ordered to stay away, ${other_parties[0].name_full()} must not have any physical, non-physical, direct, or indirect contact with the people protected by this order, including:
  
  * Oral communication,
  * Written communication,
  * Sign language,
  * Telephone and cell phone calls,
  * Faxes,
  * Texts,
  * Emails,
  * Posts, tweets, or communication by any other social media, and
  * All other communication.
  
  This also includes contact or communication through others who may not know about the Order of Protection.
fields:
  - ${other_parties[0].name_full()} should stay away at all times and have no contact?: stay_away
    datatype: yesnoradio
---
id: no stay under influence
question: |
  Do you want the court to order ${other_parties[0].name_full()} to stay away from and not be at your residence while under the influence?
subquestion: |
  Select **Yes** if when ${other_parties[0].name_full()} is under the influence of drugs or alcohol, they are a threat to you or your children.
fields:
  - No entry or presence while under the influence?: no_stay_under_influence
    datatype: yesnoradio
  - note: |
      Enter the residence address below. **Note:** This address will appear on your court papers.
    show if: no_stay_under_influence
  - Street address: no_stay_residence.address
    address autocomplete: True
    show if: no_stay_under_influence
  - Address line 2: no_stay_residence.unit
    required: False
    show if: no_stay_under_influence
  - City: no_stay_residence.city
    show if: no_stay_under_influence
  - State: no_stay_residence.state
    code: |
      states_list()
    show if: no_stay_under_influence
  - ZIP code: no_stay_residence.zip
    required: False
    show if: no_stay_under_influence
---
id: hide address
question: |
  Do you want to keep your address hidden?
subquestion: |
  You do not need to list where you are staying on your court papers. You can use a different address instead, as long as it is a place where you can get mail. This could be a friend or family member's home, a work address, a PO box, or some other mailing address.
field: hide_address
choices:
  - Yes: True
  - No: False
---
id: get address
question: |
  % if hide_address:
  What is your mailing address?
  % else:
  What is your home address?
  % endif
subquestion: |
  % if hide_address:
  **This address will appear on your court papers.** You may receive court notices and documents about your case at this address.
  % else:
  **This address will appear on your court papers.** If you do not want this, click **Back** to keep your address hidden.
  % endif
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Address line 2: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: IL      
  - ZIP code: users[0].address.zip
---
id: residence remedies
question: |
  What do you want the court to order about where you are living?
subquestion: |
  This does not affect who owns the property, only who gets to use or occupy it.
  
fields:
  - no label: residence_remedies
    datatype: radio
    choices:
    - I want **exclusive possession** of the residence. This means ${other_parties[0].name_full()} should not be allowed to enter or stay there.: exclusive possession
    - I want ${other_parties[0].name_full()} to **provide a different place** for me and the protected people to live because we share a residence.: provide alternate housing
    - None of the above: none

---
id: exclusive possession reason
question: |
  Why should the court give you exclusive possession of your residence?
field: exclusive_possession_reason
choices:
  - I have a right to occupy the residence and ${other_parties[0].name_full()} has no right.: respondent_no_right_to_stay
  - Both of us have a right to occupy the residence, but it would be harder on me or any of my children or dependents to leave.: both_parties_right_to_stay

---
id: respondent info
question: |
  What are ${other_parties[0].name_full()}'s phone number and email address?
subquestion: |
  If you do not know, leave these blank.
fields:
  - Phone: other_parties[0].phone_number
    datatype: al_international_phone
    required: False
  - Cell phone: other_parties[0].mobile_number
    datatype: al_international_phone
    required: False
    show if: 
      code: |
        trial_court_index == -1
  - Email address: other_parties[0].email    
    datatype: email
    required: False
---
id: respondent social media
question: |
  Is ${other_parties[0].name_full()} active on social media?
subquestion: |
  If you know about ${other_parties[0].name_full()}'s accounts, this could help the sheriff find them.
  
  This information **will not** appear on public court documents.
fields:
  - ${other_parties[0].name_full()} active on social media?: respondent_on_social_media
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: I don't know.
  - List their accounts: respondent_social_media_accounts
    input type: area
    rows: 5
    maxlength: 180
    help: |
      Enter as much information as you can including app, website, and username if you know it.
    show if:
      variable: respondent_on_social_media
      is: 'Yes'
---
id: respondent home address question
question: |
  Do you know ${other_parties[0].name_full()}'s current home address?
subquestion: |
  If you do not know the current address, select **No**. You can enter their last known address on another screen.
fields:
  - no label: knows_respondent_home
    datatype: yesnoradio
---
id: respondent last known address
question: |
  Do you know ${other_parties[0].name_full()}'s last known address?
fields:
  - no label: knows_respondent_home_last
    datatype: yesnoradio
---
id: respondent address
question: |
  % if knows_respondent_home:
  What is ${other_parties[0].name_full()}'s current home address?
  % else:
  What is ${other_parties[0].name_full()}'s last known address?
  % endif
fields:
  - Street address: other_parties[0].address.address
    address autocomplete: True
  - Address line 2: other_parties[0].address.unit
    required: False
  - City: other_parties[0].address.city
  - State: other_parties[0].address.state
    code: |
      states_list()
  - ZIP code: other_parties[0].address.zip
    required: False
---
id: respondent work question
question: |
  Do you know ${other_parties[0].name_full()}'s work information?
subquestions: |
  If ${other_parties[0].name_full()} is currently unemployed, you can select **No**.
fields:
  - Know ${other_parties[0].name_full()}'s work info?: knows_respondent_work
    datatype: yesnoradio
---
id: respondent work info
question: |
  Tell us about ${other_parties[0].name_full()}'s job
subquestion: |
fields:
  - Employer or company: other_parties[0].employer
    maxlength: 35
  - Occupation or type of work: respondent_work_type
    required: false
    help: |
      Describe their position, job title, or role where they work. Examples: Manager, cook, cashier
    maxlength: 30
    show if: 
      code: |
        trial_court_index == -1
  - Work schedule (days and hours): other_parties[0].work_hours
    required: False
    help: |
      If you don't know the exact days and hours, you can say something like "weekdays" or "nights."
    maxlength: 40
  - Street address: other_parties[0].work_address.address
    address autocomplete: True
  - Address line 2: other_parties[0].work_address.unit
    required: False
  - City: other_parties[0].work_address.city
  - State: other_parties[0].work_address.state
    code: |
      states_list()
  - ZIP code: other_parties[0].work_address.zip
---
id: stay away work question
question: |
  Do you want ${other_parties[0].name_full()} to stay away from where you work while you are there?
subquestion: |
  The statewide Order of Protection forms have space for up to 2 places of employment.
  
  If you do not want to list where you work on your court papers, you can hide it on the next screen.
fields:
  - no label: stay_away_jobs
    datatype: yesnoradio
---
id: hide work address
question: |
  Do you want to keep your work address hidden?
subquestion: |
  You do not need to list where you work on your court papers.  If you select **Yes**, your workplace will be listed as, "Wherever protected party may be employed."
field: hide_work_address
choices:
  - Yes: True
  - No: False
---
id: hide other work address
question: |
  Do you want to keep your other work address hidden?
subquestion: |
  You do not need to list where you work on your court papers.
field: hide_work_address_2
choices:
  - Yes: True
  - No: False
---
id: stay away work info
question: |
  % if i==0:
  Tell us about your job
  % else:
  Tell us about your other job
  % endif
subquestion: |  
  **This address will appear on your court papers.** If you do not want this, click **< Back** to keep this work name and address hidden.

fields:
  - Employer or company: jobs[i].employer
    maxlength: 35
  - Street address: jobs[i].address
    address autocomplete: True
  - Address line 2: jobs[i].unit
    required: False
  - City: jobs[i].city
  - State: jobs[i].state
    code: |
      states_list()
  - ZIP code: jobs[i].zip
---
id: another stay away job
question: |
  Do you have another job you want ${other_parties[0].name_full()} to stay away from while you are there?
fields:
  - no label: stay_away_jobs_2
    datatype: yesnoradio
---
id: stay away school question
question: |
  Do you want ${other_parties[0].name_full()} to stay away from any schools, kindergartens, or daycare centers while you or people you want to protect are there?
subquestion: |
  % if minor_kids_with_respondent or protect_petitioner_kids:
  The statewide Order of Protection forms have space for up to 2 schools or daycares. If you need to list more than 2 schools or daycares, you can add them as "other places" you want ${other_parties[0].name_full()} to stay away from.
  
  **Note:** You can keep the name and address of these schools confidential if your children attend them.
  % else:
  The statewide Order of Protection forms have space for up to 2 schools or daycares.
  % endif
fields:
  - no label: stay_away_schools
    datatype: yesnoradio
---
id: stay away school info
question: |
  % if i==0:
  Tell us about the school, kindergarten, or daycare
  % else:
  Tell us about the ${ ordinal(i) } school, kindergarten, or daycare
  % endif
subquestion: |  
  % if minor_kids_with_respondent or protect_petitioner_kids:
  If you do not want this information on your court forms, which can be seen by ${ other_parties[0].name_full() }, check **Yes** to the **Hide this information** question below.
  % endif
fields:
  - School or daycare name: schools[i].name
    maxlength: 35
  - Street address: schools[i].address
    address autocomplete: True
  - Address line 2: schools[i].unit
    required: False
  - City: schools[i].city
  - State: schools[i].state
    code: |
      states_list()
  - ZIP code: schools[i].zip
  - Hide this information from ${ other_parties[0].name_full() }?: schools[i].hide
    datatype: yesnoradio
    show if: 
      code: |
        minor_kids_with_respondent or protect_petitioner_kids
    help: |
      If you hide this information, it will not be listed on your Petition. You will get a confidential form that you will file with the court clerk.
---
id: second stay away school
question: |
  Do you have another school or daycare you want ${other_parties[0].name_full()} to stay away from while you or people you want to protect are there?
subquestion: |  
  So far you entered: ${ schools[0].name }

  % if minor_kids_with_respondent or protect_petitioner_kids:
  **Note:** You can enter up to 2 schools or daycares that you want ${other_parties[0].name_full()} to stay away from. If you need to list more than 2 schools or daycares, you can add them as "other places" you want ${other_parties[0].name_full()} to stay away from.
  % else:
  **Note:** You can enter up to 2 schools or daycares that you want ${other_parties[0].name_full()} to stay away from.
  % endif
fields:
  - no label: stay_away_schools_2
    datatype: yesnoradio
---
# this depends on doesn't seem to be triggering on name change. hoping it would for kids_who_attend
depends on:
  - shared_kids[i].name
  - shared_kids[i].name.middle
  - shared_kids[i].name.last
  - shared_kids[i].name.suffix
reconsider: True
code: |
  minor_kids_list = []
  if minor_kids_with_respondent:
    if shared_kids.number() > 0:
      for person in shared_kids:
        minor_kids_list.append( {person.name_full(): person.name_full() } )
  if protect_petitioner_kids:
    if petitioner_kids.number() > 0:
      for person in petitioner_kids:
        minor_kids_list.append( {person.name_full(): person.name_full() } )
---
id: confidential school details
question: |
  Details about ${ schools[i].name }
fields:
  - Is ${ schools[i].name } a school or a daycare?: schools[i].type
    datatype: radio
    choices:
      - School: school
      - Daycare: daycare
  - Children who attend ${ schools[i].name}: schools[i].kids_who_attend
    datatype: checkboxes
    none of the above: False
    code: minor_kids_list
    show if:
      code: |
        minor_kids_with_respondent == True or protect_petitioner_kids == True
---
reconsider: True
code: |
  max_other_places = 2
  
  if minor_kids_with_respondent or protect_petitioner_kids:
    if stay_away_schools:
      if schools.number() == 3:
        max_other_places = 1
      elif schools.number() == 4:
        max_other_places = 0
  
---
id: stay away other location question
question: |
  Do you want ${other_parties[0].name_full()} to stay away from other places while you are there?
subquestion: |
  The statewide Order of Protection forms have space for up to 2 other places.
  % if stay_away_schools:
  
  **Note:** If you want to enter information about additional schools or daycares, select **Yes**.
  % endif
fields:
  - no label: stay_away_other
    datatype: yesnoradio
  - Is this place a school?: other_location_1_is_school
    datatype: yesnoradio
    show if: stay_away_other
---
id: hide other location 1
question: |
  Do you want to hide the address of this location?
subquestion: |
  You do not need to list the exact location or address on your court papers. If you select **Yes**, you can enter a general description of the place.
field: hide_other_address_1
choices:
  - Yes: True
  - No: False
---
id: hide other location 2
question: |
  Do you want to hide the address of this second location?
subquestion: |
  You do not need to list the exact location or address on your court papers. If you select **Yes**, you can enter a general description of the place.
field: hide_other_address_2
choices:
  - Yes: True
  - No: False
---
id: stay away other location name
question: |
  Tell us about the place you want ${other_parties[0].name_full()} to stay away from
subquestion: |
  This description will appear on your court papers.
fields:
  - Description: other_locations_hidden_description_1
---
id: stay away other location 2 name
question: |
  Tell us about the second place you want ${other_parties[0].name_full()} to stay away from
subquestion: |
  This description will appear on your court papers.
fields:
  - Description: other_locations_hidden_description_2

---
id: stay away other location info
question: |
  % if i==0:
  Tell us about the place you want ${other_parties[0].name_full()} to stay away from
  % else:
  Tell us about the second place you want ${other_parties[0].name_full()} to stay away from
  % endif
subquestion: |
  **This address will appear on your court papers.** If you do not want this, click **Back** to keep this address hidden.
fields:
  - Name: other_locations[i].name
    maxlength: 35
  - Street address: other_locations[i].address
    address autocomplete: True
  - Address line 2: other_locations[i].unit
    required: False
  - City: other_locations[i].city
  - State: other_locations[i].state
    code: |
      states_list()
  - ZIP code: other_locations[i].zip
---
id: another stay away location
question: |
  Do you have another place you want ${other_parties[0].name_full()} to stay away from while you are there?
subquestion: |
  % if other_location_1_is_school:
  So far you entered: ${ schools[2].name }
  % else:
  So far you entered: ${ other_locations[0].name }
  % endif

  The statewide Order of Protection forms have space for up to 2 other places in total.  
fields:
  - no label: stay_away_other_2
    datatype: yesnoradio
  - Is this place a school?: other_location_2_is_school
    datatype: yesnoradio
    show if: stay_away_other_2
---
id: attend same school
question: |
  Does ${other_parties[0].name_full()} attend the same school as you or any of the people you want to protect?
subquestion: |
  This can be an elementary, middle, or high school.
fields:
  - no label: same_school
    datatype: yesnoradio
---
id: school restrictions
question: |
  What should the court order ${other_parties[0].name_full()} to do at the school?
fields:
  - no label: same_school_restrictions
    datatype: radio
    choices:
      - ${other_parties[0].name_full()} should not attend the school while I or other protected people are enrolled there.: not attend
      - ${other_parties[0].name_full()} should change their placement or program at the school, as determined by the public school district or by a private or non-public school.: change program
      - ${other_parties[0].name_full()} should not be present in certain parts of the school.: not present in parts
        help: |
          If you select this, you can list the parts of the school where ${other_parties[0].name_full()} should not go.
      - I don't want the court to order any school restrictions on ${other_parties[0].name_full()}.: none
  - Parts of the school where ${other_parties[0].name_full()} should not go: parts_of_school
    input type: area
    rows: 3
    maxlength: 150  
    show if: 
      variable: same_school_restrictions
      is: "not present in parts"
      
---
id: same school name
question: |
  What is the name of the school ${other_parties[0].name_full()} attends?
subquestion: |
  This can be an elementary, middle, or high school. 
fields:
  - School name: same_school_name
    maxlength: 50

---
id: minor respondent parents help
question: |
  Do you want ${other_parties[0].name_full()}'s parent or guardian to help them follow the Order of Protection?
subquestion: |
  You can ask for this if you know or think ${other_parties[0].name_full()} is under age 18.
fields:
  - no label: respondent_parent_help
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - Does not apply: dna

---
id: minor respondent parent info
question: |
  Requirements for ${other_parties[0].name_full()}'s parent or guardian
fields:
  - Parent or guardian name: respondent_parent_name
    maxlength: 60
    required: False
  - What should ${other_parties[0].name_full()}'s parent or guardian be ordered to do?: respondent_parent_order
    input type: area
    rows: 6
    maxlength: 200

---
id: request counseling for respondent
question: |
  Do you want ${other_parties[0].name_full()} to get counseling?
subquestion: |
  **Note:** The court can order evaluation and treatment only after ${other_parties[0].name_full()} has received written notice or attended the court hearing where this is decided.

  ${ collapse_template(counseling_help) }  
fields:
  - no label: request_counseling
    datatype: yesnoradio
---
template: counseling_help
subject: |
  **What kinds of counseling are available?**
content: |  
  The court can order:
  
  * Domestic violence partner abuse counseling,
  * An Alcohol and substance abuse evaluation and counseling,
  * A Mental health evaluation and counseling, and
  * Other counseling that may be appropriate.
---
id: counseling types
question: |
  What kinds of counseling do you want the court to order ${other_parties[0].name_full()} to participate in and complete?
subquestion: |
  The court can order evaluation and treatment only after ${other_parties[0].name_full()} has received **{advance written notice}** or attended the court hearing where this is decided.
  
  Check all that apply.
fields:
  - Domestic violence partner abuse counseling: dv_counseling
    datatype: yesnowide
  - Alcohol and substance abuse evaluation and counseling: alcohol_counseling
    datatype: yesnowide
  - Mental health evaluation and counseling: mental_health_counseling 
    datatype: yesnowide
  - Other counseling: other_counseling
    datatype: yesnowide
  - Other counseling ${other_parties[0].name_full()} should complete: other_counseling_text
    input type: area
    rows: 2
    maxlength: 60
    show if: other_counseling
---
reconsider: True
code: |
  included_shared_kids_count = 0
  if minor_kids_with_respondent:
    for kid in shared_kids:
     if kid.protect == True:
       included_shared_kids_count += 1
    if included_shared_kids_count > 0:
      include_shared_kids = True
    else:
      include_shared_kids = False
---
id: want court to make decisions about children
question: |
  Do you want the court to make decisions about your minor children you have with ${ other_parties[0].name_full() }?
subquestion: |
  In the Order of Protection, the court can decide:

  * Who is responsible for the children,  
  * Who the children will stay with, and
  * What kind of parenting time you want ${ other_parties[0].name_full() } to have, if any.

  % if protect_shared_kids or include_shared_kids:

  **Note:** Earlier, you said you wanted to protect your minor children you have with ${ other_parties[0].name_full() }. Select **Yes** to answer questions about what you want the court to do for them. If you did not mean to include them in the Order of Protection, click the **:edit: Edit answers** button below to change your answers.
  % endif
fields:
  - no label: court_make_children_decisions
    datatype: yesnoradio

---
id: children jurisdiction reasons
question: |
  Why are you asking the court to make decisions about your minor children?
subquestion: |
  Check all that apply.

  **Note:** If you do not explain why you want to protect your minor children, the court might not be able to include them in the Order of Protection.
fields:
  - The children have lived in Illinois for the past 6 months or if the children are younger than 6 months old, they have lived in Illinois since they were born.: children_live_in_il
    datatype: yesnowide
  - I live in Illinois but someone else took the children out of Illinois within the past 6 months. Before they were taken out of Illinois, the children lived here for at least 6 months.: children_removed_from_il
    datatype: yesnowide
  - The children are in Illinois because we fled here to avoid abuse of me or the children in another state.: children_fled
    datatype: yesnowide
---
id: primary caretaker
question: |
  Who is the primary caretaker of the children with ${other_parties[0].name_full()}?
fields:
  - no label: primary_caretaker
    datatype: radio
    choices:
      - I am.: petitioner
      - ${other_parties[0].name_full()} is.: respondent
      - Another person is the primary caretaker of the children with ${other_parties[0].name_full()}.: other
  - note: |
      Enter the name of the primary caretaker of the children with ${other_parties[0].name_full()}. 
    show if:
      variable: primary_caretaker
      is: "other"
  - First: other_caretaker.name.first
    show if:
      variable: primary_caretaker
      is: "other"
  - Middle: other_caretaker.name.middle
    required: False
    show if:
      variable: primary_caretaker
      is: "other"
  - Last: other_caretaker.name.last
    show if:
      variable: primary_caretaker
      is: "other"
  - Suffix: other_caretaker.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: primary_caretaker
      is: "other"

---
id: other caretaker address
question: | 
  What is ${ other_caretaker.name_full() }'s address?
subquestion: |
  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.
fields:
  - Street address: other_caretaker.address.address
    address autocomplete: True
  - Address line 2: other_caretaker.address.unit
    required: False
  - City: other_caretaker.address.city
  - State: other_caretaker.address.state
    code: |
      states_list()
  - ZIP code: other_caretaker.address.zip
---
id: temporary custody
question: |
  Do you want the court to grant you temporary decision-making responsibility of the children you have with ${other_parties[0].name_full()}?
subquestion: |
  This used to be called "custody" in Illinois.
  
  Notes:
  
  * This is not the same as primary decision-making responsibility.
  * The court can order this only after ${other_parties[0].name_full()} received **{advance written notice}** or attended the court hearing where this is decided.

fields:
  - no label: temp_custody_of_children
    datatype: yesnoradio
---
id: physical care and possession of children
question: |
  Do you want the court to grant you physical care and possession of the children you have with ${other_parties[0].name_full()}?
subquestion: |
  This means the children would live with you on a day-to-day basis.

  **Note:** This is **not** the same as primary decision-making responsibility, or what used to be called "custody" in Illinois. Having physical care and possession of the children just means the children would live with you.
fields:
  - no label: physical_care_of_children
    datatype: yesnoradio
---
id: concealment of children
question: |
  Do you want the court to order that ${other_parties[0].name_full()} cannot hide the children in Illinois or remove them from Illinois?
subquestion: |
  You may want this if ${other_parties[0].name_full()} has made threats or attempts to unlawfully remove the children.
fields:
  - no label: no_conceal_children
    datatype: yesnoradio    
---
id: no removal of children from petitioner or school
question: |
  Do you want the court to order that ${other_parties[0].name_full()} cannot remove the children from your care or from a school or daycare?
subquestion: |
  You can keep the name and location of the school or daycare hidden from ${other_parties[0].name_full()}.

  If you want to change confidential schools, edit information about schools in [**Protections**](${ url_action('section_protections') }) section.
fields:
  - no label: no_removal_school
    datatype: yesnoradio    
---
id: have current possession of children
question: |
  Do you currently have physical care and possession of your children with  ${other_parties[0].name_full()}?
subquestion: |
  If the children are not with you now, the court can order ${other_parties[0].name_full()} to return them to you, to another person, or to bring the children to court.
fields:
  - no label: current_possession_of_children
    datatype: yesnoradio
---
id: children returned to whom
question: |
  Who should ${other_parties[0].name_full()} return the children to?
fields:
  - no label: return_children_to
    datatype: radio
    choices:
      - ${other_parties[0].name_full()} should return the children to me.: petitioner
      - ${other_parties[0].name_full()} should return the children to someone else.: other
      - ${other_parties[0].name_full()} should bring the children to court. This is usually 14 to 21 days after you file your petition.: court
  - note: |
      Enter the name of the person ${other_parties[0].name_full()} should return the children to. 
    show if:
      variable: return_children_to
      is: "other"
  - First: return_children_other_person.name.first
    show if:
      variable: return_children_to
      is: "other"
  - Middle: return_children_other_person.name.middle
    required: False
    show if:
      variable: return_children_to
      is: "other"
  - Last: return_children_other_person.name.last
    show if:
      variable: return_children_to
      is: "other"
  - Suffix: return_children_other_person.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: return_children_to
      is: "other"
---
id: know children return details
question: |
  Do you know where you want ${other_parties[0].name_full()} to return the children to ${ return_children_other_person.name_full() }?
fields:
  - no label: knows_return_children_details
    datatype: yesnoradio
---
id: children return location
question: |
  Where should ${other_parties[0].name_full()} return the children to ${ return_children_other_person.name_full() }?
subquestion: |
  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.  
fields:
  - Street address: return_children_location.address
    address autocomplete: True
  - Address line 2: return_children_location.unit
    required: False
  - City: return_children_location.city
  - State: return_children_location.state
    code: |
      states_list()
  - ZIP code: return_children_location.zip
    required: False
---
id: reason respondent should bring children to court
question: |
  Why should ${other_parties[0].name_full()} be ordered to bring the children to court?
subquestion: |
  Check all that apply.
fields:
  - To prevent abuse, neglect, removal, or concealment of the children: appear_with_children_prevent
    datatype: yesnowide
  - To return the children to you: appear_with_children_return
    datatype: yesnowide
  - To permit a court-ordered interview or examination of the children or of ${other_parties[0].name_full()}: appear_with_children_exam
    datatype: yesnowide
---
id: order respondent to appear in court
question: |
  Do you want ${other_parties[0].name_full()} be ordered to come to court alone?
subquestion: |
  You can ask for this 

  * To prevent abuse, neglect, removal, or concealment of the children,
  * To return the children to you, or
  * To permit a court-ordered interview or examination of the children or of ${other_parties[0].name_full()}.  
fields:
  - Should ${other_parties[0].name_full()} be ordered to come to court alone?: res_appear_alone
    datatype: yesnoradio
  - note: |
      Why should ${other_parties[0].name_full()} be ordered to come to court alone?
      
      Check all that apply.
    show if: res_appear_alone
  - To prevent abuse, neglect, removal, or concealment of the children: appear_alone_prevent
    datatype: yesnowide
    show if: res_appear_alone
  - To return the children to you: appear_alone_return
    datatype: yesnowide
    show if: res_appear_alone
  - To permit a court-ordered interview or examination of the children or of ${other_parties[0].name_full()}: appear_alone_exam
    datatype: yesnowide
    show if: res_appear_alone

---
id: childrens records
question: |
  Do you want the court to prevent ${other_parties[0].name_full()} from accessing your children's records?
subquestion: |
  These include school records, health care records, or any other records. The records may have address and contact information you want to keep hidden from ${other_parties[0].name_full()}.

  If you want to deny ${other_parties[0].name_full()} accessing to your children's records, select the reasons why. Check all that apply.
fields:
  - Yes. I am requesting that ${other_parties[0].name_full()} not be allowed to have contact with the minor children.: no_records_no_contact
    help: |
      Select this if you asked the court to prevent ${other_parties[0].name_full()} from having any contact with the children.
    datatype: yesnowide
  - Yes. My address is not included on the court forms to avoid further abuse.: no_records_hide_address
    help: |
      Select this if you are hiding your home address.
    datatype: yesnowide
  - Yes. It is necessary to prevent abuse or wrongful removal or concealment of the minor children.: no_records_no_removal
    help: |
      Select this if you asked the court to prevent ${other_parties[0].name_full()} from hiding or removing the children.
    datatype: yesnowide
---
id: parenting time
question: |
  How do you want the court to handle parenting time for the children you have with ${other_parties[0].name_full()}?
subquestion: |
  This used to be called "visitation" in Illinois.
fields:
  - The court should:: parenting_time
    datatype: radio
    choices:
      - Reserve ${other_parties[0].name_full()}'s parenting time until a later hearing: reserve
      - Deny ${other_parties[0].name_full()} parenting time (no visits at all): deny
        help: |
          You can enter reasons why you want to deny parenting time on the next screen.
      - Restrict ${other_parties[0].name_full()}'s parenting time (allow visits with limits): restrict
        help: |
          You can enter reasons why you want to restrict parenting time on the next screen.
      - Grant ${other_parties[0].name_full()} parenting (allow visits according to schedule): grant

---
id: restrict or deny parenting time reasons
question: |
  % if parenting_time == "restrict":
  Why do you want to restrict ${other_parties[0].name_full()}'s parenting time?
  % else:
  Why do you want to deny ${other_parties[0].name_full()} any parenting time?
  % endif  
subquestion: |
  Check all that apply.
fields:
  - ${other_parties[0].name_full()} is likely to:: restrict_or_deny_pt_reasons
    datatype: checkboxes
    none of the above: False
    choices:
      - Abuse or endanger the children during parenting time.: no_pt_no_abuse
      - Use parenting time to abuse or harass me, my family, or household members.: no_pt_no_harass
      - Improperly hide or detain the children.: no_pt_no_hide
      - Act in a way that is not in the best interest of the children.: no_pt_no_best_interest
---
id: parenting time format
question: |
  How do you want to tell the court about your parenting time schedule?
subquestion: |
  Your parenting time schedule should include days and times when ${other_parties[0].name_full()} will be able to visit the children.
fields:
  - no label: pt_format
    datatype: radio
    choices:
    - I will enter the parenting time schedule on the next screens.: interview
    - I will make a parenting time schedule and attach it to my court forms.: attach
      help: |
        Be sure your parenting time schedule includes:
        
        * Days of the week when parenting time will happen, 
        * Start and end times for each day,
        * Any changes because of holidays, and
        * The date you want the parenting time schedule to start.
---
id: parenting time weekdays
question: |
  Do you want ${other_parties[0].name_full()} to have parenting time on weekdays?
subquestion: |
  You can pick which weekdays and times on the next screen.
  
  Weekend parenting time is also an option. You can pick weekend days and times on another screen.
fields:
  - no label: pt_weekdays
    datatype: yesnoradio
---
id: parenting time weekday schedule
question: |
  What weekday parenting time schedule do you want ${other_parties[0].name_full()} to have?
fields:
  - Days: pt_weekday_days
    datatype: checkboxes
    none of the above: False
    choices:
      - Monday: "1"
      - Tuesday: "2"
      - Wednesday: "3"
      - Thursday: "4"
      - Friday: "5"
    minlength: 1
    validation messages:
      minlength: "Please select at least one weekday."
  - Start time: pt_weekday_start
    datatype: time
  - End time: pt_weekday_end
    datatype: time
validation code: |
  if pt_weekday_start > pt_weekday_end:
    validation_error("The start time must be before the end time.", field="pt_weekday_end")
---
id: parenting time weekends
question: |
  Do you want ${other_parties[0].name_full()} to have parenting time on weekends?
subquestion: |
  You can pick weekend days and times on the next screen.
fields:
  - no label: pt_weekends
    datatype: yesnoradio
---
id: parenting time weekend schedule
question: |
  What weekend parenting time schedule do you want ${other_parties[0].name_full()} to have?
fields:
  - How often?: pt_weekend_cadence
    datatype: radio
    choices:
      - Every weekend: every
      - Every other weekend: other
  - Weekend parenting time start day: pt_weekend_start_day
    datatype: radio
    choices:
      - Friday: "5"
      - Saturday: "6"
      - Sunday: "7"
    minlength: 1
    validation messages:
      minlength: "Please select at least one day."
  - Weekend parenting time start time: pt_weekend_start_time
    datatype: time
  - Weekend parenting time end day: pt_weekend_end_day
    datatype: radio
    choices:
      - Friday: "5"
      - Saturday: "6"
      - Sunday: "7"
    minlength: 1
    validation messages:
      minlength: "Please select at least one day."
  - Weekend parenting time end time: pt_weekend_end_time
    datatype: time
validation code: |
  if pt_weekend_start_day > pt_weekend_end_day:
    validation_error("The start day must be before the end day.", field="pt_weekend_start_day")
  elif pt_weekend_start_time > pt_weekend_end_time:
    validation_error("The end time must be after the start time.", field="pt_weekend_end_time")
---
id: parenting time holidays
question: |
  Do you want the parenting time to be different on holidays?
subquestion: |
  You can list holidays and times on the next screen.
fields:
  - no label: pt_holidays
    datatype: yesnoradio
---
id: parenting time holiday schedule
question: |
  What holiday parenting time schedule do you want ${other_parties[0].name_full()} to have?
fields:
  - List holidays by name or date and include times: pt_holiday_list
    input type: area
    rows: 7
    maxlength: 270
    help: |
      For example: New Years Day 10:00 AM to 3:00 PM, Fourth of July noon - 5:00PM, and Thanksgiving 9AM-4PM
---
id: parenting time start date
question: |
  When do you want the parenting time schedule to start?
fields:
  - Date: pt_start_date
    datatype: date
    min: ${ today().format("yyyy-MM-dd") }
---
id: parenting time supervised
question: |
  Do you want ${other_parties[0].name_full()}'s parenting time to be supervised?
subquestion: |
  You can name an adult to supervise parenting time. In some places, an official supervised visitation center may be available.
fields:
  - no label: pt_supervised
    datatype: yesnoradio
---
id: parenting time supervisor type
question: |
  Who do you want to supervise parenting time?
fields:
  - no label: pt_supervisor_type
    datatype: radio
    choices:
    - A person I know will supervise parenting time.: person
    - I want parenting time to happen at an official supervised visitation center, if available.: agency
---
id: supervisor name
sets:
  - pt_supervisor.name.first
  - pt_supervisor.name.last
  - pt_supervisor.name.middle
  - pt_supervisor.name.suffix
question:  |
  Who is the adult you want to supervise parenting time?
subquestion: |
  **Note:** They will have to complate an *Affidavit of Parenting Time Supervisor*. You can get this form at the end of the program.
fields:
  - code: |
      pt_supervisor.name_fields()
---
id: pt agency name
question:  |
  What is the name of the official supervised visitation center?
subquestion: |
  If you do not know this, leave it blank.
fields:
  - Agency name: pt_visitation_center_name
    maxlength: 40
    required: False
---
id: parenting time location identified
question: |
  Do you know where you want ${other_parties[0].name_full()}'s parenting time to happen?
fields:
  - no label: pt_location_identified
    datatype: yesnoradio
  - note: |
      Where will parenting time happen?
      
      **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.

      **Note:** The forms do not require a ZIP code for this address. 
    show if: pt_location_identified
  - Name of location (if any): pt_location.name
    maxlength: 35
    required: False
    show if: pt_location_identified
  - Street address: pt_location.address
    address autocomplete: True
    show if: pt_location_identified
  - Address line 2: pt_location.unit
    required: False
    show if: pt_location_identified
  - City: pt_location.city
    show if: pt_location_identified
  - State: pt_location.state
    code: |
      states_list()
    show if: pt_location_identified
    
---
# combined with y/n question
#id: parenting time location
#question: |
#  Where will parenting time happen?
#subquestion: |
#  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.
#
#  **Note:** The forms do not require a ZIP code for this address. 
#fields:
#  - Name of location (if any): pt_location.name
#    maxlength: 35
#    required: False
#  - Street address: pt_location.address
#    address autocomplete: True
#  - Address line 2: pt_location.unit
#    required: False
#  - City: pt_location.city
#  - State: pt_location.state
#    code: |
#      states_list()
---
id: parenting time transportation person
sets:
  - pt_transportation_person.name.first
  - pt_transportation_person.name.last
  - pt_transportation_person.name.middle
  - pt_transportation_person.name.suffix
question: |
  Who will provide transportation to take children to and from parenting time?
fields:
  - no label: pt_transportation
    datatype: radio
    choices:
      - I will provide transportation.: petitioner
      - ${other_parties[0].name_full()} will provide transportation.: respondent
      - Someone else will provide transportation.: other
      - I will figure this out later.: later
  - note: |
      Enter the name of the person who will provide transporation. 
    show if:
      variable: pt_transportation
      is: "other"
  - First: pt_transportation_person.name.first
    show if:
      variable: pt_transportation
      is: "other"
  - Middle: pt_transportation_person.name.middle
    required: False
    show if:
      variable: pt_transportation
      is: "other"
  - Last: pt_transportation_person.name.last
    show if:
      variable: pt_transportation
      is: "other"
  - Suffix: pt_transportation_person.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: pt_transportation
      is: "other"
---
id: separate pickup location
question: |
  Is there a pickup location for parenting time?
subquestion: |
  This is where your children will be picked up from before going to parenting time.
fields:
  - no label: pt_separate_pickup_location
    datatype: yesnoradio
  - note: |
      Where will pickup for parenting time happen?
      
      **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.

      **Note:** The forms do not require a ZIP code for this address.
    show if: pt_separate_pickup_location
  - Name of location (if any): pt_pickup_location.name
    maxlength: 35
    required: False
    show if: pt_separate_pickup_location
  - Street address: pt_pickup_location.address
    address autocomplete: True
    show if: pt_separate_pickup_location
  - Address line 2: pt_pickup_location.unit
    required: False
    show if: pt_separate_pickup_location
  - City: pt_pickup_location.city
    show if: pt_separate_pickup_location
  - State: pt_pickup_location.state
    code: |
      states_list()
    show if: pt_separate_pickup_location
    
---
# combined with pt_separate_pickup_location can delete
#id: pickup location
#question: |
#  Where will pickup for parenting time happen?
#subquestion: |
#  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.
#
#  **Note:** The forms do not require a ZIP code for this address.
#fields:
#  - Name of location (if any): pt_pickup_location.name
#    maxlength: 35
#    required: False
#  - Street address: pt_pickup_location.address
#    address autocomplete: True
#  - Address line 2: pt_pickup_location.unit
#    required: False
#  - City: pt_pickup_location.city
#  - State: pt_pickup_location.state
#    code: |
#      states_list()
---
id: separate return location
question: |
  Is there a return location for parenting time?
subquestion: |
  This is where your children will be returned to you after parenting time.
fields:
  - no label: pt_separate_return_location
    datatype: yesnoradio
  - note: |
      Where will the return from parenting time happen?
      
      **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.

      **Note:** The forms do not require a ZIP code for this address.
    show if: pt_separate_return_location
  - Name of location (if any): pt_return_location.name
    maxlength: 35
    required: False
    show if: pt_separate_return_location
  - Street address: pt_return_location.address
    address autocomplete: True
    show if: pt_separate_return_location
  - Address line 2: pt_return_location.unit
    required: False
    show if: pt_separate_return_location
  - City: pt_return_location.city
    show if: pt_separate_return_location
  - State: pt_return_location.state
    code: |
      states_list()
    show if: pt_separate_return_location
    
---
# remove, combined
#id: return location
#question: |
#  Where will the return from parenting time happen?
#subquestion: |
#  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.
#
#  **Note:** The forms do not require a ZIP code for this address.
#fields:
#  - Name of location (if any): pt_return_location.name
#    maxlength: 35
#    required: False
#  - Street address: pt_return_location.address
#    address autocomplete: True
#  - Address line 2: pt_return_location.unit
#    required: False
#  - City: pt_return_location.city
#  - State: pt_return_location.state
#    code: |
#      states_list()
---
id: immediate return after parenting time
question: |
  Do you want ${other_parties[0].name_full()} to return the children immediately after parenting time?
subquestion: |
  You can ask that the children are returned directly to you or to someone you choose. 
fields:
  - no label: pt_immediate_return
    datatype: yesnoradio
  - Who should ${other_parties[0].name_full()} return the children to at the end of parenting time?: pt_return_person_choice
    datatype: radio
    choices:
      - Me: Me
      - Someone else: other
      - I will figure this out later.: later
    show if: pt_immediate_return
  - note: |
      Enter the person's name. 
    show if:
      variable: pt_return_person_choice
      is: "other"
  - First: pt_return_person.name.first
    show if:
      variable: pt_return_person_choice
      is: "other"
  - Middle: pt_return_person.name.middle
    required: False
    show if:
      variable: pt_return_person_choice
      is: "other"
  - Last: pt_return_person.name.last
    show if:
      variable: pt_return_person_choice
      is: "other"
  - Suffix: pt_return_person.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: pt_return_person_choice
      is: "other"
      
---
id: any personal property to award to petitioner
question: |
  Do you want the court to order that you get or keep control of your belongings?
subquestion: |
  The court can order that you will get or keep control of personal property. This is called having **possession** of the property.
  
  These can be things that you currently have with you or things you want ${other_parties[0].name_full()} to return to you. For example: your car, clothing, or phone.
fields:
  - no label: award_personal_property
    datatype: yesnoradio
---
id: petitioner personal property to award
question: |
  % if i == 0:
  Personal property you want possession of
  % else:
  Next item you want possession of
  % endif
subquestion: |
  If you are listing a car, include the year, make, and model. For example: 2019 Chevy Malibu.
fields:
  - Item name: petitioner_personal_property[i].name.text
  - Do you want the court to order ${other_parties[0].name_full()} to return it to you?: petitioner_personal_property[i].respo_has
    datatype: yesnoradio
---
id: any other petitioner personal property to award
question: |
  Are there other items you want the court to give you?
subquestion: |
  % if len(petitioner_personal_property.elements) >= 1:  
  So far you have told us about your ${comma_and_list([item.name.text for item in petitioner_personal_property])}.
  % endif
fields:
  - "Any other items?": petitioner_personal_property.there_is_another
    datatype: yesnoradio
---
#sets:
#  - return_property
#reconsider: True

depends on: 
  - petitioner_personal_property[i].respo_has
code: |
  return_items_qty = 0
  if award_personal_property == False:
    return_property = False
  else:
    for item in petitioner_personal_property:
      if item.respo_has == True:
  	    return_items_qty += 1
    if return_items_qty > 0:
      return_property = True
    else:
      return_property = False

#  return_property_recompute = True
---
id: return petitioner property to whom
question: |
  Who should ${other_parties[0].name_full()} return your property to?
subquestion: |
  **Note:** You can ask that another person or law enforcement be present when ${other_parties[0].name_full()} returns your property. You can choose this on another screen.
fields:
  - no label: return_property_person
    datatype: radio
    choices:
      - Me: petitioner
      - Another person: other
  - First: other_return_property_person.name.first
    show if:
      variable: return_property_person
      is: "other"
  - Middle: other_return_property_person.name.middle
    required: False
    show if:
      variable: return_property_person
      is: "other"
  - Last: other_return_property_person.name.last
    show if:
      variable: return_property_person
      is: "other"
  - Suffix: other_return_property_person.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: return_property_person
      is: "other"
      
---
id: why respondent should return property
question: |
  Why should ${other_parties[0].name_full()} return the property?
subquestion: | 
  You said ${other_parties[0].name_full()} should return these items: ${ comma_and_list([item.name.text for item in petitioner_personal_property if item.respo_has == True]) }.
fields:
  - no label: return_property_reason
    datatype: radio
    choices:
      - I own the property.: petitioner owns
      - We both own the property, but not having it would be harder on me. It would put me at risk for abuse or sharing is not practical.: both own
      - I am married to ${other_parties[0].name_full()}, and we have filed for divorce.: divorce
---
id: any property to return to respondent
question: |
  Is there any personal property ${other_parties[0].name_full()} will need returned to them right away?
subquestion: |
  This can be things like clothes, medicine, or other items.
fields:
  - no label: return_respo_property
    datatype: yesnoradio
---
id: respondent property
question: |
  What personal property should be returned to ${other_parties[0].name_full()}?
fields:
  - no label: respo_property
    datatype: checkboxes
    none of the above: False
    choices:
      - Clothes: clothes
      - Medicine: medicine
      - Other items (you can list items below): other
  - Other items (separate by commas): respo_property_other
    input type: area
    rows: 6
    maxlength: 200
    show if:
      variable: respo_property['other']
      is: True
---
id: respondent one time right to enter
question: |
  Should ${other_parties[0].name_full()} be allowed to enter the home **only one time** to get their personal property?
subquestion: |
  You can require that a law enforcement officer or another person is present when ${other_parties[0].name_full()} gets their property.
fields:
  - no label: respondent_one_time_entry
    datatype: yesnoradio
  - Who should be present when ${other_parties[0].name_full()} gets their property?: res_property_transfer_person
    datatype: radio
    choices:
      - Law enforcement: police
      - Another person: other
    show if: respondent_one_time_entry
  - Law enforcement agency (optional): res_property_transfer_police
    help: |
      Example: Chicago Police Department
    js show if: |
      val("res_property_transfer_person") === "police" && val("respondent_one_time_entry") === true
    required: False
  - First: res_other_transfer_property_person.name.first
    js show if: |
      val("res_property_transfer_person") === "other" && val("respondent_one_time_entry") === true
  - Middle: res_other_transfer_property_person.name.middle
    required: False
    js show if: |
      val("res_property_transfer_person") === "other" && val("respondent_one_time_entry") === true
  - Last: res_other_transfer_property_person.name.last
    js show if: |
      val("res_property_transfer_person") === "other" && val("respondent_one_time_entry") === true
  - Suffix: res_other_transfer_property_person.name.suffix
    required: False
    code: |
      name_suffix()
    js show if: |
      val("res_property_transfer_person") === "other" && val("respondent_one_time_entry") === true
---
id: know property transfer address
question: |
  Do you know where you want the personal property transfer to happen?
subquestion: |
  This is where you will get your property back from ${other_parties[0].name_full()}. 
  
  You may want this to happen at a police department or sheriff's office. You can enter the address on the next screen.
fields:
  - no label: property_transfer_location_cb
    datatype: yesnoradio
---
id: property transfer location
question: |
  Where should the property transfer happen?
subquestion: |
  This can be at a police department or sheriff's office.
  
  **This address will appear on your court papers.** Do not list a location you want to keep hidden from ${other_parties[0].name_full()}.  
fields:
  - Street address: property_transfer_location.address
    address autocomplete: True
  - Address line 2: property_transfer_location.unit
    required: False
  - City: property_transfer_location.city
  - State: property_transfer_location.state
    code: |
      states_list()
  - ZIP code: property_transfer_location.zip
    required: False
---
id: property transfer anyone present
question: |
  Do you want anyone else present at the property transfer?
subquestion: |
  It may be safer if a law enforcement officer or another person is present when the property is transferred.
  
  **Note:** If you select **Law enforcement**, you will need to arrange when this happens.
fields:
  - no label: property_transfer_present_cb
    datatype: yesnoradio
  - Who should be present at the property transfer?: property_transfer_person
    datatype: radio
    choices:
      - Law enforcement: police
      - Another person: other
    show if: property_transfer_present_cb
  - Law enforcement agency (optional): property_transfer_police
    help: |
      Example: Chicago Police Department
    required: False
    js show if: |
      val("property_transfer_person") === "police" && val("property_transfer_present_cb") === true
  - First: other_transfer_property_person.name.first
    js show if: |
      val("property_transfer_person") === "other" && val("property_transfer_present_cb") === true
  - Middle: other_transfer_property_person.name.middle
    required: False
    js show if: |
      val("property_transfer_person") === "other" && val("property_transfer_present_cb") === true
  - Last: other_transfer_property_person.name.last
    js show if: |
      val("property_transfer_person") === "other" && val("property_transfer_present_cb") === true
  - Suffix: other_transfer_property_person.name.suffix
    required: False
    code: |
      name_suffix()
    js show if: |
      val("property_transfer_person") === "other" && val("property_transfer_present_cb") === true
---
id: know property transfer date
question: |
  Do you know when you want the property transfer to happen?
subquestion: |
  If you do not know this now, you can decide later.
fields:
  - no label: property_transfer_know_date
    datatype: yesnoradio
  - note: |
      If you do not know the exact date and time, take your best guess.
    show if: property_transfer_know_date
  - Date: property_transfer_date
    datatype: date
    min: ${ today().format("yyyy-MM-dd") }
    show if: property_transfer_know_date
  - Time: property_transfer_time
    datatype: time
    show if: property_transfer_know_date
---
id: any pets to protect
question: |
  Do you want the court to give you possession of family pets or other animals?
subquestion: |
  The court can order ${other_parties[0].name_full()} to stay away from the pets and forbid them from taking, hiding, or harming the pets.
fields:
  - no label: possession_of_animals
    datatype: yesnoradio
---
id: pet details
question: |
  % if i == 0:
  Pet you want possession of
  % else:
  Next pet you want possession of
  % endif
fields:
  - Pet name: pets[i].name.text
    maxlength: 25
  - Description (type and breed): pets[i].description
    maxlength: 25
---
id: any other pets
question: |
  Do you have another pet you want the court to give you possession of?
subquestion: |
  % if len(pets.elements) >= 1:  
  So far you have told us about ${comma_and_list([item.name.text + " (" + indefinite_article(item.description) + ")" for item in pets])}.
  % endif
fields:
  - "Any other pets?": pets.there_is_another
    datatype: yesnoradio
---
id: want cell phone account separation
question: |
  Do you want the court to order that your cell phone accounts be separated?
subquestion: |
  If you or your children are on ${other_parties[0].name_full()}'s cell phone account, you can ask the court to separate the accounts. You will be responsible for paying the cell phone service of the separate account. 
fields:
  - no label: separate_phone_service
    datatype: yesnoradio
---
id: cell phone account holder name
question: |
  Who is the cell phone account holder?
subquestion: |
  This person's phone number is usually the main or billing phone number associated with the account.
fields:
  - no label: phone_account_holder
    datatype: radio
    choices:
      - ${other_parties[0].name_full()}: respondent
      - Someone else: other
  - First: other_phone_account_holder.name.first
    show if:
      variable: phone_account_holder
      is: "other"
  - Middle: other_phone_account_holder.name.middle
    required: False
    show if:
      variable: phone_account_holder
      is: "other"
  - Last: other_phone_account_holder.name.last
    show if:
      variable: phone_account_holder
      is: "other"
  - Suffix: other_phone_account_holder.name.suffix
    required: False
    code: |
      name_suffix()
    show if:
      variable: phone_account_holder
      is: "other"
---
id: cell phone account details
question: |
  Cell phone account details
fields:
  - Cell phone service provider: phone_provider
    maxlength: 25
    help: |
      Examples: Verizon or T-Mobile
  - ${other_parties[0].name_full()}'s phone number: billing_phone_number
    datatype: al_international_phone
---
id: cell phone number to separate
question: |
  % if i == 0:
  Cell phone number you want to separate 
  % else:
  Next cell phone number you want to separate 
  % endif
subquestion: |
  You can enter up to 4 phone numbers in total. This is the ${ ordinal(i) } number.
  
  Your phone number would probably be one of the numbers to separate.
  
  **Note:** This phone number will appear on your court forms.
fields:
  - Phone number: cell_numbers[i].name.text
    datatype: al_international_phone
---
id: any other phone numbers
question: |
  Do you have another phone number you want to separate?
subquestion: |
  % if len(cell_numbers.elements) >= 1:  
  You can enter up to 4 phone numbers. So far you have told us about ${comma_and_list([phone_number_formatted(item.name.text) for item in cell_numbers])}.
  % endif
fields:
  - "Any other phone numbers?": cell_numbers.there_is_another
    datatype: yesnoradio
---
code: |
  cell_numbers[i].name.text
  cell_numbers[i].complete = True
---
code: |
  if cell_numbers.number_gathered() >= 4:
    cell_numbers.there_is_another = False
---
id: restrict other property
question: |
  Additional property protections
subquestion: |
  We already asked about property that the court should order that you can keep or be returned to you.
  
  The court can also order ${other_parties[0].name_full()} not to take, hide, damage, or dispose of property. This can include personal property like your car or real estate like your apartment or house. It can include the spaces inside and outside the property as well as things that are inside the property.

  **Note:** If you want these protections, you will need to describe the items, including property address, on your court papers.
  
fields:
  - Is there property you want to protect from ${other_parties[0].name_full()}?: restrict_other_property
    datatype: yesnoradio
---
id: restricted property
question: |
  What property should be protected from ${other_parties[0].name_full()}?
subquestion: |
  The court can order ${other_parties[0].name_full()} not to take, hide, damage, or dispose of property. This can include personal property or real estate.

  Check all that apply.
fields:
  - Cars or other motor vehicles: restrict_cars
    datatype: yesnowide
  - List the year, make, and model of the vehicles: restricted_car_details
    input type: area
    rows: 2
    maxlength: 60
    show if: restrict_cars
    help: |
      For example: 2019 Chevy Malibu.
  - Your home or other place you are staying [NEWLINE]**This address will be listed on court papers.**: restrict_home
    datatype: yesnowide
  - Street address: restricted_property_address.address
    address autocomplete: True
    show if: restrict_home
  - Address line 2: restricted_property_address.unit
    required: False
    show if: restrict_home
  - City: restricted_property_address.city
    show if: restrict_home
  - State: restricted_property_address.state
    code: |
      states_list()
    show if: restrict_home
  - ZIP code: restricted_property_address.zip
    required: False
    show if: restrict_home
  - Protect the inside and outside of the property: restrict_property_space
    datatype: yesnoradio
    show if: restrict_home
  - Protect items located inside the property: restrict_property_items
    datatype: yesnoradio
    show if: restrict_home
  - Other important property (explain below): restrict_other_property
    datatype: yesnowide
  - Other property to protect (separate by commas): restricted_property
    input type: area
    rows: 6
    maxlength: 200
    show if: restrict_other_property
---
id: why property should be restricted
question: |
  Why should the property be protected from ${other_parties[0].name_full()}?
subquestion: | 
  You said this property should be protected:

  % if restrict_cars:
  * ${ restricted_car_details }
  % endif
  % if restrict_home:
  * ${ restricted_property_address.on_one_line(bare=True) } 
  % if restrict_property_space:
  [NEWLINE][TAB]Including the inside and outside the property
  % endif
  % if restrict_property_items:
  [NEWLINE][TAB]Including items inside the property
  % endif
  % endif
  % if restrict_other_property:
  * ${ restricted_property }
  % endif
fields:
  - no label: restrict_property_reason
    datatype: radio
    choices:
      - I own the property.: petitioner
      - We both own the property, but not having it would be harder on me. It would put me at risk for abuse or sharing is not practical.: both
      - I am married to ${other_parties[0].name_full()}, and we have filed for divorce.: divorce
---
id: restrict resources of elderly petitioner
question: |
  Should ${other_parties[0].name_full()} be ordered not to improperly use an elderly person's money or property for themselves or any other person?
subquestion: |
  If the Order of Protection will include any elderly people, this can protect their financial resources and property.
fields:
  - no label: restrict_elderly_petitioner_resources
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - Does not apply: dna
---
id: request temporary support
question: |
  Do you want ${other_parties[0].name_full()} to pay temporary child support?
subquestion: |
  **Note:** The court can order temporary child support only after ${other_parties[0].name_full()} has received written notice or attended the court hearing where this is decided.
  
  **Important:** Even if the judge can't award temporary support at the first hearing, it is easier to ask for it now. Otherwise, you will have to amend your Petition later.
fields:
  - no label: temp_child_support
    datatype: yesnoradio
---
id: request maintenance
question: |
  Do you want ${other_parties[0].name_full()} to pay temporary maintenance?
subquestion: |
  Maintenance used to be called "spousal support" or "alimony."
  
  **Note:** The court can order temporary maintenance only after ${other_parties[0].name_full()} has received written notice or attended the court hearing where this is decided.

  **Important:** Even if the judge can't award temporary maintenance at the first hearing, it is easier to ask for it now. Otherwise, you will have to amend your Petition later.
fields:
  - no label: temp_maintenance
    datatype: yesnoradio
---
id: expenses
question: |
  Do you want ${other_parties[0].name_full()} to pay for losses caused by abuse, neglect, or exploitation?
subquestion: |
  **Note:** The court can order ${other_parties[0].name_full()} to pay only after they have received written notice or attended the court hearing where this is decided.

  If you do not know the exact amount you can estimate. Bring receipts, proof of payment, and repair estimates to court if you have them.
fields:
  - No. I do not want to request any repayment.: expenses_none
    datatype: yesnowide
    disable others: True
  - note: |
      ---
      Yes. I want the court to order ${other_parties[0].name_full()} to pay for:
  - Medical expenses: expenses_medical
    datatype: yesnowide
  - "Amount": expenses_medical_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_medical
  - "Lost income": expenses_lost_income
    datatype: yesnowide
  - "Amount": expenses_lost_income_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_lost_income
  - "Repair or replace property damaged or taken": expenses_property
    datatype: yesnowide
  - "Amount": expenses_property_amount
    datatype: currency
    max: 99999.99
    min: 0.01
    show if: expenses_property    
  - "Moving and other travel expenses": expenses_moving
    datatype: yesnowide
  - "Amount": expenses_moving_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_moving
  - "Temporary housing or counseling at a domestic violence shelter": expenses_shelter
    datatype: yesnowide
  - "Amount": expenses_shelter_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_shelter
  - "Expenses for housing and meals, other than a domestic violence shelter": expenses_housing
    datatype: yesnowide
  - "Amount": expenses_housing_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_housing
  - "Expenses for search and recovery of children": expenses_children
    datatype: yesnowide
  - "Amount": expenses_children_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_children
  - "Attorney's fees": expenses_lawyer
    datatype: yesnowide
  - "Amount": expenses_lawyer_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_lawyer
  - "Other expenses (describe below)": expenses_other
    datatype: yesnowide
  - "Other expenses (if more than one, list all)": expenses_other_kind
    input type: area
    rows: 2
    maxlength: 60
    show if: expenses_other
  - "Amount (if more than one, enter total)": expenses_other_amount
    datatype: currency
    min: 0.01
    max: 99999.99
    show if: expenses_other
validation code: |
  if not (expenses_none or expenses_medical or expenses_lost_income or expenses_property or expenses_moving or expenses_shelter or expenses_housing or expenses_children or expenses_other):
    validation_error("Please check at least one option.", field="expenses_other")
---
id: firearms threat
question: |
  % if minor_kids_with_respondent or protect_petitioner_kids:
  Is ${other_parties[0].name_full()} a threat to the physical safety of you or your children?
  % else:
  Is ${other_parties[0].name_full()} a threat to your physical safety?
  % endif
subquestion: |
  Just knowing that ${other_parties[0].name_full()} has a **weapon** can be a threat if you are afraid they could use it against you.

  ${ collapse_template(dv_risk_factors) }

  % if minor_kids_with_respondent or protect_petitioner_kids:
  **Note:** If ${other_parties[0].name_full()} threatened you or your children with a weapon, be sure to explain the threats, the weapon and its location in the [**What happened**](${ url_action('section_incidents') }) section. Describe the weapon as best you can. Threats are incidents of abuse that are important to your case.
  % else:
  **Note:** If ${other_parties[0].name_full()} threatened you with a weapon, be sure to explain the threats, the weapon and its location in the [**What happened**](${ url_action('section_incidents') }) section. Describe the weapon as best you can. Threats are incidents of abuse that are important to your case.
  % endif
fields:
  - no label: firearms_threat
    datatype: yesnoradio
---
template: dv_risk_factors
subject: |
  **What other things should I consider?**
content: |  
  ${other_parties[0].name_full()} might be more likely to threaten your safety if:

  * You recently separated from them or are currently separating from them.
  * They tried to strangle or choke you.
  * They have access to a firearm or other weapon.
  * They are constantly or violently jealous.
  * They have forced you to have sex with them.
  * They have threatened to commit suicide.
  * They try to control most or all of your daily activities.
  * They monitor your phone, computer, or social media use.
---
id: remove firearms
question: |
  Protection from firearms
subquestion: |
  As part of an Order of Protection, the court can:
  
  * Order ${other_parties[0].name_full()} to **surrender firearms** to law enforcement, and
  * Issue a **search warrant** be issued so law enforcement can search ${other_parties[0].name_full()}'s property to seize firearms.
  
  Firearms can include:
  
  * Guns,
  * Parts that can be assembled to make a gun,
  * A Firearm Identification Owner (FOID) card, and
  * A Concealed Carry License.

  ${ collapse_template(firearms_help) }

  % if minor_kids_with_respondent or protect_petitioner_kids:
  Reminder: If ${other_parties[0].name_full()} threatened you or your children with a weapon, be sure to explain the threat and the weapon in the [**What happened**](${ url_action('section_incidents') }) section.
  % else:
  Reminder: If ${other_parties[0].name_full()} threatened you with a weapon, be sure to explain the threat and the weapon in the [**What happened**](${ url_action('section_incidents') }) section.
  % endif

fields:
  - Do you want the court to order any firearms relief? (Check all that apply.): firearms_relief
    datatype: checkboxes
    choices:
      - Yes, I want ${other_parties[0].name_full()} to **surrender firearms** to law enforcement.: surrender
      - Yes, I want a **search warrant** to be issued so law enforcement can search ${other_parties[0].name_full()}'s property and seize fierarms.: warrant
    none of the above: No, I do not want to ask for either of these.
---
template: firearms_help
subject: |
  **Learn more about firearms**
content: |  
  There is a lot to think about when considering what you want the court to do about firearms.

  * If you ask for a search warrant, this will involve additional contact with law enforcement.
  * The search warrant process is different in every county. Local courts and law enforcement may have their own process and forms to get firearms relief.

  You can read these [**important information pages**](${ url_of('op_firearms_info.pdf') }) to get some guidance, but it can be helpful to talk with a domestic violence advocate when deciding what to do. Call the [**Illinois Domestic Violence Hotline**](https://the-network.org/get-help/) at 877-863-6338 (877-TO END DV) to talk with an advocate.

  The information pages are also included in the instructions you can download at the end of this program.
---
id: intimate partner
question: |
  Is ${other_parties[0].name_full()} a current or former intimate partner?
subquestion: |
  This means you were in a romantic relationship with them. This information may be part of the court's decision to order that ${other_parties[0].name_full()} surrender their guns.
fields:
  - no label: intimate_partner
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - Does not apply: dna
---
id: remove firearms additional reasons
question: |
  Reasons why you want the court to issue a search warrant 
subquestion: |
  Explain why a search warrant should be issued so that law enforcement can search ${other_parties[0].name_full()}'s property and may seize firearms or firearm parts from them.
  
  Check all that apply.
fields:
  - no label: warrant_reasons
    datatype: checkboxes
    choices:
      - ${other_parties[0].name_full()} is an immediate threat to the physical safety of the people I want to protect.: threat
      - ${other_parties[0].name_full()} has a firearm or firearm parts that could be used to make a firearm.: has_guns
      - The firearm or firearm parts are in the residence, vehicle, or other property of ${other_parties[0].name_full()}.: location
---
id: report of dv
question: |
  Have you made a report of domestic violence to law enforcement within the last 90 days?
subquestion: |
  This is not required to get a search warrant for firearms.
  
  Law enforcement will use this to determine how much time they have to execute the warrant.
fields:
  - no label: made_dv_report
    datatype: yesnoradio
---
id: warrant location details
question: |
  Details about the ${ ordinal(i) } location you want to be included in the search warrant
fields:
  - Street address: warrant_location_list[i].address
    address autocomplete: True
  - Address line 2: warrant_location_list[i].unit
    required: False
  - City: warrant_location_list[i].city
  - State: warrant_location_list[i].state
    code: |
      states_list()
    default: IL      
  - ZIP code: warrant_location_list[i].zip
  - Description of location, including building type, fences, entrances, etc., if known: warrant_location_list[i].description
    input type: area
    rows: 2
    maxlength: 75
    required: False
  - Days and times ${other_parties[0].name_full()} will likely be at this location: warrant_location_list[i].days_times
    input type: area
    rows: 2
    maxlength: 60
  - Is anyone else likely to be at this location?: warrant_location_list[i].others_present
    datatype: yesnoradio
  - Information about other people or pets at this location: warrant_location_list[i].others_present_details
    input type: area
    rows: 2
    maxlength: 75
    help: |
      Include the names and ages of people, and the days and times they are likely to be there.
    show if: warrant_location_list[i].others_present  
---
id: more warrant locations
question: |
  Is there another location you want law enforcement to include in the search warrant?
subquestion: |
  You can enter up to 2 locations in total.

  So far you told us about: 
  
  * Address: ${ warrant_location_list[0].on_one_line(bare=True) }
  * Description: ${ warrant_location_list[0].description }
field: warrant_location_list.there_is_another
choices:
  - Yes: True
  - No: False
---
code: |
  warrant_location_list[i].address
  warrant_location_list[i].complete = True
---
code: |
  if warrant_location_list.number_gathered() >= 2:
    warrant_location_list.there_is_another = False
---
id: other helpful warrant info
question: |
  Do you have other information about ${other_parties[0].name_full()} that might be helpful to law enforcement when they execute the warrant?
subquestion: |
  Law enforcement might want to know details about ${other_parties[0].name_full()}'s appearance like their skin color or if they wear glasses.
  
  They also might want to know if ${other_parties[0].name_full()}:
  
  * Has a history of mental illness,
  * Has ever been suicidal, 
  * Is likely to be under the influence of alcohol or drugs, or
  * Is on court-ordered probation.  
fields:
  - no label: has_helpful_warrant_info
    datatype: yesnoradio
  - Other helpful information: respondent_warrant_help
    input type: area
    rows: 3
    maxlength: 120
    show if: has_helpful_warrant_info
     
---
id: firearms eop prior notice question
question: |
  Are you worried that ${other_parties[0].name_full()} might hurt you or the people you want to protect when they learn about the Order of Protection?
subquestion: |
  **Note:** If you are asking for an Emergency Order of Protection, select **Yes** if you think that ${other_parties[0].name_full()} might cause physical injury to you or the people you want to protect when they learn about it.
fields:
  - no label: firearms_eop_notice
    datatype: yesnoradio
---
reconsider: True
code: |
  if stay_away and trial_court_index != 71:
    no_contact_text = "Have no contact by any means with protected parties. "
    add_no_contact_language = True
  else: 
    no_contact_text = ""
    add_no_contact_language = False
---
id: misc remedies
question: |
  What else do you want the court to order ${other_parties[0].name_full()} to do or to stop doing?
subquestion: |
  % if add_no_contact_language and trial_court_index != 71:
  Because you are asking the court to order ${other_parties[0].name_full()} to stay away and stop communication, "No contact by any means with protected parties" will be added. You can change this below.
  % endif
fields:
  - ${other_parties[0].name_full()} should be ordered to:: misc_remedies_text
    input type: area
    rows: 5
    maxlength: 415
    required: False
    default: |
      ${ no_contact_text }
  - Because:: misc_remedies_because_text
    input type: area
    rows: 5
    maxlength: 375
    required: False
---
id: e-signature
question: |
  Do you want to add your e-signature to your Petition for Order of Protection?
subquestion: |
  This program can put "**/s/ ${users[0].name.full(middle='full')}**" where you would sign your name. The court will accept this as your signature.

  If you do not add your **{e-signature}**, you must sign your paper forms before you file them.

  <div class="alert alert-info ilao-info" role="alert">
    <h6 class="alert-heading">What it means to sign your forms</h6>
    <p>By signing your <i>Petition for Order of Protection</i>, you are certifying that:</p>
    <p><ul>
      <li>Everything on the forms is true and correct, or you have been informed or you believe it is true and correct, and</li>
      <li>You understand that making a false statement on the form is perjury and has penalties provided by law.</li>
    </ul></p>
  <p>See the <a href="https://www.ilga.gov/legislation/ilcs/documents/073500050k1-109.htm"><b>Code of Civil Procedure, 735 ILCS 5/1-109</b></a> for more information.</p>
  </div>
fields:
  - "Add e-signature?": e_signature
    datatype: radio
    choices:
      - Yes: True
      - No, I will sign my forms later.: False
terms:
  - "e-signature": |
      An e-signature is an electronic signature. It is a digital version of a signature that has the same effect as a hand-written signature. 
---
id: phone number
question: |
  What safe phone number do you want to list on your court forms?
subquestion: |
  The court might need to contact you about this case.

  **This phone number will appear on your court forms.** If you do not want to list a phone number on your forms, leave this blank.
fields:
  - Safe phone number: users[0].phone_number
    datatype: al_international_phone
    required: False
---    
id: notice by email
question: |
  Do you have a safe email address?
subquestion: |
  If you have a safe email address, you must list it on the forms so the court and other parties can contact you about this case.
fields:
  - Have a safe email?: users[0].email_notice
    datatype: yesnoradio
---
id: email address
question: |
  What email address do you want to list on your court forms?
subquestion: |
  **This email will appear on your court forms.** If you do not want to enter your personal email address, you can create a new email account to get email about your case.
  
  To make a new email account try one of these email services:
  
  * [**Gmail**](https://accounts.google.com/SignUp)
  * [**Outlook**](https://outlook.live.com/owa/?nlp=1&signup=1)
  * [**Yahoo**](https://login.yahoo.com/account/create?.lang=en-US&.intl=us)
  
  Be sure to check your email daily, otherwise you may miss important information about your case.
fields:
  - Safe email address: users[0].email    
    datatype: email
---
id: service address choice
question: |
  Where can ${other_parties[0].name_full()} be found?
subquestion: |
  This is where they will be served with Order of Protection court papers.
  
  % if trial_court_index == -1:
  You can update the Cook County Sheriff's office when you have this information. Email them anytime at ccso.protectiveorders@ccsheriff.org or call them at 312-603-2134 or 312-603-3340 (Monday through Friday, 8AM to 5PM).
  % endif
  
fields:
  - no label: service_address_choice
    datatype: radio
    code: service_list
---
reconsider: True
code: |
  service_list = []
  if knows_respondent_home == True:
    service_list.append( { "home": other_parties[0].name_full() + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  else:
    if knows_respondent_home_last == True:
      service_list.append( { "home": other_parties[0].name_full() + "'s last known address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if knows_respondent_work == True:
    service_list.append({ "work": other_parties[0].name_full()+ "'s work address (" + other_parties[0].work_address.on_one_line(bare=True) + ")" })
  service_list.append({ "other": "An address I will enter" })
---
id: other service address
question: |
  Enter the address where ${other_parties[0].name_full()} can be found
fields:
  - Street address: service_address.address
    address autocomplete: True
  - Address line 2: service_address.unit
    required: False
  - City: service_address.city
  - State: service_address.state
    code: |
      states_list()
  - ZIP code: service_address.zip
    required: False
---    
id: have another service address
question: |
  Do you want to add another address where ${other_parties[0].name_full()} can be found?
fields:
  - no label: has_second_service_address
    datatype: yesnoradio
---
id: second service address choice
question: |
  Where else can ${other_parties[0].name_full()} be found?
fields:
  - no label: second_service_address_choice
    datatype: radio
    code: alt_service_list
---
reconsider: True
code: |
  alt_service_list = []
  if knows_respondent_home == True and service_address_choice != "home":
    alt_service_list.append( { "home": other_parties[0].name_full() + "'s home address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  else:
    if knows_respondent_home == False:
      if knows_respondent_home_last == True and service_address_choice != "home":
        alt_service_list.append( { "home": other_parties[0].name_full() + "'s last known address (" + other_parties[0].address.on_one_line(bare=True) + ")" })
  if knows_respondent_work == True and service_address_choice != "work":
    alt_service_list.append({ "work": other_parties[0].name_full()+ "'s work address (" + other_parties[0].work_address.on_one_line(bare=True) + ")" })
  alt_service_list.append({ "other": "An address I will enter" })
---
id: out of state county
question: |
  In which county can the sheriff find ${other_parties[0].name_full()}?
subquestion: |
  You said the sheriff can serve court papers on ${other_parties[0].name_full()} at:
  
  % if service_address_choice == "other":
  * ${ service_address.on_one_line(bare=True) }
  % elif service_address_choice == "home":
  * ${ other_parties[0].address.on_one_line(bare=True) }        
  % else:
  * ${ other_parties[0].work_address.on_one_line(bare=True) }        
  % endif
  
  Enter the county below so the sheriff can find ${other_parties[0].name_full()}.
  
  ${ collapse_template(county_lookup_help) }
fields:
  - County where ${other_parties[0].name_full()} can be served: service_county
    maxlength: 40
---
template: county_lookup_help
subject: |
  **How do I look up the county?**
content: |  
  You can use this **[City-to-County Finder](https://www.statsamerica.org/CityCountyFinder/)** to find the county.
---
id: second other service address
question: |
  Enter another address where ${other_parties[0].name_full()} can be found
fields:
  - Street address: second_service_address.address
    address autocomplete: True
  - Address line 2: second_service_address.unit
    required: False
  - City: second_service_address.city
  - State: second_service_address.state
    code: |
      states_list()
  - ZIP code: second_service_address.zip
    required: False
---
id: respondent alt contact info
question: |
  Do you know other ways ${other_parties[0].name_full()} can be contacted?
subquestion: |
  You alread told us:
  
  % if other_parties[0].phone_number != "":
  * ${other_parties[0].name_full()}'s phone: ${ phone_number_formatted(other_parties[0].phone_number) }
  % else:
  * ${other_parties[0].name_full()}'s phone: None entered
  % endif
  % if other_parties[0].email != "":
  * ${other_parties[0].name_full()}'s email: ${ other_parties[0].email }
  % else:
  * ${other_parties[0].name_full()}'s email: None entered
  % endif
   
  If you do not know other contact information for ${other_parties[0].name_full()}, leave these blank.
fields:
  - Phone: other_parties[0].phone_number_alt
    datatype: al_international_phone
    required: False
  - Email address: other_parties[0].email_alt    
    datatype: email
    required: False
---
reconsider: True
code: |
  if service_address_choice == "home":
    service_state = other_parties[0].address.state
  if service_address_choice == "work":
    service_state = other_parties[0].work_address.state
  if service_address_choice == "other":
    service_state = service_address.state
---
id: service method
question: |
  Who do you want to deliver court papers to ${other_parties[0].name_full()}?
subquestion: |
  This is called service. In Illinois, **Sheriffs usually serve Orders of Protection.**
  
  **Note:** There may be a charge for a special process server or a licensed private detective.
fields:
  - no label: service_method
    datatype: radio
    choices:
      - Sheriff (most common): sheriff
      - Special process server: sps
      - Licensed private detective: detective
      - I don't know. I will decide and complete the Summons later.: idk
---
id: additional service information cook
question: |
  What other information will help the sheriff deliver court papers to ${other_parties[0].name_full()}?
subquestion: |
  You can add things like:
  
  * Best days and times to serve court papers,
  * Details about the places where ${other_parties[0].name_full()} can be found, and
  * Information about other people at those locations that can help find ${other_parties[0].name_full()}.

  This will not appear on the forms that will be filed with the court. It goes on the Confidential Protective Order Information Sheet for the Sheriff.
fields:
  - Service information: service_information
    input type: area
    rows: 10
    maxlength: 400
    required: False
    help: |
      Include as much information as possible, such as best hours to serve, type of building, etc.
---
if: trial_court_index != -1
id: respondent gender
question: |
  What is ${other_parties[0].name_full()}'s gender?
subquestion: |
  This information is used to help law enforcement identify ${other_parties[0].name_full()} and enforce the Order of Protection. If you do not know this information, you can leave it blank.
fields:
  - Gender: other_parties[0].gender
    datatype: radio
    required: False
    choices:
      - Male: male
      - Female: female
      - Other: other
  - ${other_parties[0].name_full()}'s gender: respondent_gender_other
    maxlength: 20
    show if:
      variable: other_parties[0].gender
      is: 'other'
---
if: trial_court_index == -1
id: respondent gender cook only
question: |
  What is ${other_parties[0].name_full()}'s gender?
subquestion: |
  This information is used to help law enforcement identify ${other_parties[0].name_full()} and enforce the Order of Protection. If you do not know this information, you can leave it blank.
fields:
  - Gender (will be public, used by any law enforcement): other_parties[0].gender
    datatype: radio
    required: False
    choices:
      - Male: Male
      - Female: Female
      - Other: other
  - ${other_parties[0].name_full()}'s gender (will be public, used by any law enforcement): respondent_gender_other
    maxlength: 20
    required: False
    show if:
      variable: other_parties[0].gender
      is: "other"
  - note: |
     ---
  - Gender identity (confidential, used by Cook County sheriff only): other_parties[0].gender_cook
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - Male: male
      - Female: female
      - Transgender woman / Transfeminine: transfem
      - Transgender man / Transmasculine: transmasc
      - Nonbinary / Gender non-conforming: nonbinary
      - Other: other
  - ${other_parties[0].name_full()}'s gender identity (confidential, used by Cook County sheriff only): respondent_gender_other_cook
    maxlength: 20
    required: False
    show if:
      variable: other_parties[0].gender_cook['other']
      is: True
  - Sex assigned at birth (confidential, used by Cook County sheriff only): respondent_sex_at_birth
    datatype: radio
    required: False
    choices:
      - Male: male
      - Female: female
    help: |
      Sex assigned at birth refers to the sex or gender marker on ${other_parties[0].name_full()}'s original birth certificate. If they were born intersex, you may want to mention that in gender/other.
---
id: respondent race
question: |
  What is ${other_parties[0].name_full()}'s race?
subquestion: |
  This information is used to help enforce the Order of Protection.
fields:
  - Race: other_parties[0].race
    datatype: radio
    choices:
      - Asian: Asian
      - Black: Black
      - Hispanic: Hispanic
      - Latino: Latino
      - Middle Eastern: Middle Eastern 
      - Native American: Native American
      - Native Hawaiian: Native Hawaiian
      - North African: North African
      - Pacific Islander: Pacific Islander
      - White: White
      - 2 or more races: Multiracial
      - Other: other
      - Unknown: unknown
  - ${other_parties[0].name_full()}'s race: respondent_race_other
    maxlength: 25
    show if:
      variable: other_parties[0].race
      is: 'other'
---
id: respondent physical characteristics
question: |
  Tell us about ${other_parties[0].name_full()}'s appearance
subquestion: |
  This information is used to help enforce the Order of Protection.
  
  Enter what information you know.
fields:
  - Height (feet): other_parties[0].height_feet
    datatype: integer
    required: False
    min: 2
    max: 8
    help: |
      Example: 5
  - Height (inches): other_parties[0].height_inches
    datatype: integer
    required: False
    min: 0
    max: 11
    help: |
      Example: 8
  - Weight (pounds): other_parties[0].weight
    datatype: integer
    required: False
    min: 1
    max: 1500
    help: |
      Example: 170
  - Skin color: other_parties[0].skin
    required: False
    datatype: radio
    choices: 
      - Very light: Very light
      - Light: Light
      - Light brown: Light brown
      - Olive: Olive
      - Brown: Brown
      - Dark brown: Dark brown
      - Other: other
    show if: 
      code: |
        trial_court_index == -1
  - ${other_parties[0].name_full()}'s skin color: respondent_skin_other
    maxlength: 30
    show if: 
      code: |
        trial_court_index == -1
    js show if:
      val("other_parties[0].skin") === "other"
  - Hair color: other_parties[0].hair
    maxlength: 30
    required: False
    help: |
      Examples: brown, black, blond, gray, bald or shaved
  - Eye color: other_parties[0].eyes
    maxlength: 30
    required: False
    help: |
      Examples: brown, blue, hazel, green
  - List any distinguishing features like scars, marks or tattoos: other_parties[0].tattoos
    input type: area
    rows: 3
    maxlength: 120
    required: False
    help: |
      Try to be descritive. Examples: tattoos on hands, facial scars, birthmarks, mustache, beard
  - Does ${other_parties[0].name_full()} wear glasses?: other_parties[0].glasses
    datatype: radio
    required: False
    choices: 
      - Yes: Yes
      - Sometimes: Sometimes
      - No: No
    show if: 
      code: |
        trial_court_index == -1
---
id: respondent more identifying info Cook
question: |
  Anything else about ${other_parties[0].name_full()}?
subquestion: |
  This information is used to help enforce the Order of Protection.
  
  If you do not know, leave blank.
fields:
  - Other names used by ${other_parties[0].name_full()}:: other_parties[0].alias_names
    input type: area
    rows: 3
    maxlength: 120
    required: False
    help: |
      This could be a name from an earlier marriage or a nickname. If there is more than one, separate by commas.
  - Is ${other_parties[0].name_full()} on court-ordered probation?: respondent_on_probation
    datatype: radio
    choices:
      - Yes: Yes
      - No: No
      - I don't know.: idk
  - Probation in which county?: respondent_probation_county
    required: False
    maxlength: 40
    help: |
      Enter the state if outside Illinois.
    show if: 
      variable: respondent_on_probation
      is: "Yes"
---
id: respondent caution
question: |
  Are there reasons the sheriff should use caution when approaching ${other_parties[0].name_full()}?
subquestion: |
  Check all that apply.
fields:
  - ${other_parties[0].name_full()}: caution_reasons
    datatype: checkboxes
    none of the above: False
    required: False
    choices:
      - Has a history of mental illness.: illness
      - Is now or has been suicidal.: suicidal
      - Is likely to be under the influence of alcohol.: alcohol
      - Is likely to be under the influence of drugs.: drugs
      - Is likely to carry a weapon.: armed
      - Has weapons in the home.: home
  - Type and location of weapons: weapons_description
    required: False
    input type: area
    rows: 5
    maxlength: 180
    js show if: |
      val("caution_reasons['armed']") == true || val("caution_reasons['home']") == true
---
id: car information for cook
question: |
  Enter details about ${other_parties[0].name_full()}'s car
subquestion: |
  This information is used to help enforce the Order of Protection.
  
  If you do not know, leave blank.
fields:
  - Car make: respondent_car_make
    help: |
      Examples: Chevrolet, Honda, and Ford
    required: False
    maxlength: 25
  - Car model: respondent_car_model
    help: |
      Examples: Malibu, Civic, and Mustang
    required: False
    maxlength: 25
  - Car year: cook_vehicle_year
    datatype: integer
    help: |
      Example: 2017
    min: 1900
    max: ${ (today().year + 1) }
    required: False
  - Color: cook_vehicle_color
    help: |
      Examples: black, white, gray, blue
    required: False
    maxlength: 25
  - Car license plate: cook_vehicle_plate
    required: False
    maxlength: 10
  - License plate state: cook_vehicle_state
    code: |
      states_list()
    required: False

---
id: any previous cook cases
question: |
  Have you filed any divorce or parentage cases with ${other_parties[0].name_full()} in Cook County before?
subquestion: |
  This will help the court clerk in Cook County assign your case to the correct location. If you were involved in more than one, choose the most recent.
fields:
  - no label: previous_cook_case_type
    datatype: radio
    choices:
      - I was in an earlier divorce case with ${other_parties[0].name_full()}.: divorce
      - I was in an earlier parentage case with ${other_parties[0].name_full()} involving children we had together.: parentage
      - No earlier divorce or parentage cases were filed in Cook County.: none
---
id: previous cook case details
question: |
  Tell us about the ${ previous_cook_case_type } case with ${other_parties[0].name_full()} in Cook County
subquestion: |
  If there is more than one, enter information about the most recent.
fields:
  - Date case was filed: previous_cook_case_date
    datatype: date
    max: ${ today().format("yyyy-MM-dd") }
  - ${ previous_cook_case_type.capitalize() } case number: previous_cook_case_number
    maxlength: 24
  - Name of judge: previous_cook_case_judge
    maxlength: 50

---
id: case number
question: |
  Case number
subquestion: |
  If this is a new case, you can leave this blank. The clerk will give you a case number when you file.
fields:
  - Case number, if you already have one: case_number
    required: False
---
id: forms assembling
continue button field: forms_assembling
question: |
  Almost done
subquestion: |
  After you click **Next**, it will take a few moments to finish making your forms.
  
  ###### You do not need to refresh your screen. Hang in there!
  
  &nbsp;
---
id: get docs screen
question: |
  Download
subquestion: |
  Your forms are ready. View and download your forms below. Click **:edit: Make changes** to fix any mistakes.

  **You will not receive an order from the court until you see a judge.**

  This program **does not file** your ${ form_name } forms with the court. You will need to do this yourself.

  ${ action_button_html(url_action('review_answers'), label=':edit: Make changes', color='success', size="md") }
  
  ${ al_user_bundle.download_list_html() }

  &nbsp;

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  **Note:** This program **does not file** your ${ form_name } forms with the court.
  
  Thank you for using ILAO Easy Forms!
event: get_docs_screen
under: |
  **Worried about doing this on your own?** Call the [**Illinois Domestic Violence Hotline**](https://the-network.org/get-help/) at 877-863-6338 (877-TO END DV) to talk with an advocate.
  % if not user_logged_in():
  
  [${fa_icon("sign-in-alt", color="#0079d0", size="sm")} Sign-in](${url_of('login', next=interview_url())}) or [create](${url_of('register', next=interview_url())}) an ILAO Easy Form account to save your progress (optional).
  % endif 

  &nbsp;
  ${ action_button_html(interview_url(i="docassemble.ILAO:feedback.yml", easy_form_interview=ilao_easy_form_url, easy_form_title=ilao_easy_form_title, easy_form_page=current_context().question_id, easy_form_variable=current_context().variable, local=False,reset=1), label=':comment: Was this program helpful?', color="#181c36", size="md", new_window=True) }
---
generic object: ALDocumentBundle
template: x.send_email_template
subject: |
  Your forms
content: |
  Your forms are attached.
  
  Thanks for using ILAO Easy Forms!
  
  [Illinois Legal Aid Online](https://www.illinoislegalaid.org)
---

---
objects:
  - op_instructions: ALDocument.using(title="Instructions", filename="instructions.pdf", has_addendum=False)
  - op_petition: ALDocument.using(title="Petition", filename="petition.pdf", has_addendum=False)
  - op_schools: ALDocument.using(title="Confidential School or Daycare", filename="confidential_schools.pdf", has_addendum=False)
  - additional_incidents: ALDocument.using(title="Additional Incidents of Abuse", filename="additional_incidents.pdf", has_addendum=False)
  - additional_cases: ALDocument.using(title="Additional Case Information", filename="additional_cases.pdf", has_addendum=False)
  - emergency_op: ALDocument.using(title="Emergency Order of Protection (draft)", filename="emergency_op.pdf", has_addendum=False)
  - plenary_op: ALDocument.using(title="Plenary Order of Protection (draft)", filename="plenary_op.pdf", has_addendum=False)
  - op_summons: ALDocument.using(title="Summons", filename="summons.pdf", has_addendum=False)
  - affidavit_pt_supervisor: ALDocument.using(title="Affidavit of Parenting Time Supervisor", filename="affidavit_pt_supervisor.pdf", has_addendum=False)
  - efiling_exemption: ALDocument.using(title="E-filing exemption (optional)", filename="e-filing_exemption.pdf", has_addendum=False)
  - cook_dv_cover_sheet: ALDocument.using(title="Domestic Violence Cover Sheet", filename="cook_dv_cover_sheet.pdf", has_addendum=False)
  - cook_sheriff_info_sheet: ALDocument.using(title="Confidential Sheriff Information Sheet", filename="cook_sheriff_info_sheet.pdf", has_addendum=False)
  - sheriff_cover_sheet: ALDocument.using(title="Sheriff Information Cover Sheet", filename="sheriff_info_cover_sheet.pdf", has_addendum=False)
  - op_warrant_info_sheet: ALDocument.using(title="Search Warrant Info Sheet", filename="op_warrant_info_sheet.pdf", has_addendum=False)
  - op_warrant: ALDocument.using(title="Search Warrant for Seizure of Firemarms", filename="op_warrant.pdf", has_addendum=False)

---
code: |
  op_instructions.enabled = True
  op_petition.enabled = True
  op_petition_single_pdf_bundle.enabled = True
  additional_cases.enabled = False
  additional_incidents.enabled = False
  emergency_op.enabled = False
  plenary_op.enabled = False
  op_summons.enabled = True
  op_schools.enabled = False
  affidavit_pt_supervisor.enabled = False
  efiling_exemption.enabled = True
  cook_dv_cover_sheet.enabled = False
  cook_sheriff_info_sheet.enabled = False
  sheriff_cover_sheet.enabled = False
  sheriff_info_bundle.enabled = False
  op_warrant_info_sheet.enabled = False
  op_warrant.enabled = False
  
  if incidents.number() > 4:
    additional_incidents.enabled = True

  if has_other_ops == "Yes":
    if other_ops.number() > 3:
      additional_cases.enabled = True
  if has_other_cases == "Yes":
    if other_cases.number() > 3:
      additional_cases.enabled = True

  if stay_away_schools:
    if (minor_kids_with_respondent and no_removal_school) or protect_petitioner_kids:
      if schools[0].hide:
        op_schools.enabled = True
    if stay_away_schools_2:
      if (minor_kids_with_respondent and no_removal_school) or protect_petitioner_kids:
        if schools[1].hide:
          op_schools.enabled = True

  if stay_away_other:
    if other_location_1_is_school:
      if (minor_kids_with_respondent and no_removal_school) or protect_petitioner_kids:
        if schools[2].hide:
          op_schools.enabled = True
    if stay_away_other_2 and other_location_2_is_school:
      if (minor_kids_with_respondent and no_removal_school) or protect_petitioner_kids:
        if schools[3].hide:
          op_schools.enabled = True
  
  if minor_kids_with_respondent:
    if court_make_children_decisions:
      if parenting_time == "restrict" or parenting_time == "allow":
        if pt_supervised:
          if pt_supervisor_type == "person":
            affidavit_pt_supervisor.enabled = True

  if eop:
    emergency_op.enabled = True
  if pop:
    plenary_op.enabled = True

  if trial_court_index == -1:
    cook_dv_cover_sheet.enabled = True
    cook_sheriff_info_sheet.enabled = True
    sheriff_cover_sheet.enabled = True
    sheriff_info_bundle.enabled = True

  if firearms_threat:
    if firearms_relief['warrant']:
      op_warrant_info_sheet.enabled = True
      op_warrant.enabled = True


---
objects:
  - op_petition_single_pdf_bundle: ALDocumentBundle.using(elements=[op_petition, additional_cases, additional_incidents], filename="petition.pdf", title="Petition for Order of Protection")
  - sheriff_info_bundle: ALDocumentBundle.using(elements=[sheriff_cover_sheet, cook_sheriff_info_sheet], filename="cook_sheriff_info_sheet.pdf", title="Confidential Sheriff Information Sheet")
  - al_user_bundle: ALDocumentBundle.using(elements=[op_instructions, cook_dv_cover_sheet, op_petition_single_pdf_bundle, op_schools, op_warrant_info_sheet, op_warrant, emergency_op, plenary_op, op_summons, sheriff_info_bundle, affidavit_pt_supervisor, efiling_exemption], filename="order_of_protection.pdf", title="All forms")
  - al_court_bundle: ALDocumentBundle.using(elements=[cook_dv_cover_sheet, op_petition_single_pdf_bundle, op_schools, op_warrant_info_sheet, op_warrant, emergency_op, plenary_op, op_summons, cook_sheriff_info_sheet, efiling_exemption], filename="order_of_protection.pdf", title="All forms")

---
attachment:
  variable name: op_instructions[i]
  name: instructions
  filename: op_instructions
  skip undefined: True
  editable: False
  pdf template file: op_instructions.pdf
  fields:
    - "fake": ${ "" }
---
attachment:
  variable name: op_petition[i]
  name: petition
  filename: petition
  skip undefined: True
  editable: False
  pdf template file: op_petition.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "civil_proceeding": True
    - "petitioner": ${ users[0].name_full() }
    - "petitioner__2": |
        % if protect_petitioner and protect_obo_minor: 
        ${ users[0].name_full() + " and on behalf of minor: " + obo_minor.name_full()}
        % elif protect_petitioner:
        ${ users[0].name_full() }
        % elif protect_obo_minor:
        ${ "On behalf of minor: " + obo_minor.name_full()}
        % else:
        ${""}
        % endif
    - "petitioner__3": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "case_number__4": ${ case_number }
    - "case_number__5": ${ case_number }
    - "case_number__6": ${ case_number }
    - "case_number__7": ${ case_number }
    - "case_number__8": ${ case_number }
    - "case_number__9": ${ case_number }
    - "case_number__10": ${ case_number }
    - "case_number__11": ${ case_number }
    - "case_number__12": ${ case_number }
    - "case_number__13": ${ case_number }
    - "case_number__14": ${ case_number }
    - "case_number__15": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    - "shared_kids_list": ${ comma_and_list([person.name_full() for person in shared_kids if person.protect == True]) if (minor_kids_with_respondent == True and shared_kids.number() > 0 and protect_shared_kids == True) else "" }
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name_full() if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name_full() if protect_high_risk_adult else '' }

    - "eop": ${ eop }
    - "pop": ${ pop }

      # page 2    
    - "hide_address": ${ hide_address }
    - "notice_address_one_line": ${ users[0].address.on_one_line(bare=True) if hide_address else ""}
    - "petitioner_notice_email": ${ users[0].email if (users[0].email_notice and hide_address) else ""}
    - "show_address": ${ not hide_address }
    - "home_address_one_line": ${ users[0].address.on_one_line(bare=True) if not hide_address else "" }
    - "petitioner_home_email": ${ users[0].email if (users[0].email_notice and not hide_address) else ""}
    
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ "about " + other_parties[0].approx_age }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_home_address": |
        % if other_parties[0].address.address != "":
        % if knows_respondent_home:
        ${ other_parties[0].address.on_one_line(bare=True) }
        % else:
        ${ "Last known: " + other_parties[0].address.on_one_line(bare=True) }
        % endif
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_info": |
        % if knows_respondent_work:
        ${ other_parties[0].employer }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_employer": |
        % if knows_respondent_work:
        ${ other_parties[0].employer }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_hours": |
        % if knows_respondent_work and other_parties[0].work_hours != "":
        ${ other_parties[0].work_hours }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_address": |
        % if knows_respondent_work:
        ${ other_parties[0].work_address.on_one_line(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": ${ respondent_gender_other if other_parties[0].gender == 'other' else other_parties[0].gender }
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'other' else other_parties[0].race }
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_tattoos": ${ other_parties[0].tattoos if other_parties[0].tattoos != "" else '' }

      # page 3    
    - "relationship_bg": ${ relationship_bg }
    - "relationship_cc": ${ relationship_cc }
    - "relationship_ac": ${ relationship_ac }
    - "relationship_ma": ${ relationship_ma }
    - "relationship_se": ${ relationship_se }
    - "relationship_xs": ${ relationship_xs }
    - "relationship_il": ${ relationship_il }
    - "relationship_sc": ${ relationship_sc }
    - "relationship_ss": ${ relationship_ss }
    - "relationship_ofm": ${ relationship_ofm }
    
    - "relationship_cs": ${ relationship_cs }
    
    - "relationship_bl": ${ relationship_bl }
    - "relationship_ch": ${ relationship_ch }
    - "relationship_pa": ${ relationship_pa }
    - "relationship_sb": ${ relationship_sb }
    - "relationship_gc": ${ relationship_gc }
    - "relationship_gp": ${ relationship_gp }
    - "relationship_ofb": ${ relationship_ofb }
    
    - "relationship_bk": ${ relationship_bk }
    - "relationship_fc": ${ True if relationship_a or relationship_l else "" }
    - "relationship_a": ${ relationship_a }
    - "relationship_l": ${ relationship_l }
    - "relationship_pc": ${ relationship_pc }

    - "has_other_ops_yes": ${ has_other_ops == "Yes" }
    - "has_other_ops_no": ${ has_other_ops == "No" }
    - "has_other_ops_idk": ${ has_other_ops == "I don't know" }
    - "other_ops_people_1": ${ other_ops[0].name.text }
    - "other_ops_case_number_1": ${ other_ops[0].case_number }
    - "other_ops_state_county_1": ${ other_ops[0].county + ", " + other_ops[0].state }
    - "other_ops_year_1": ${ other_ops[0].year }
    - "other_ops_pending_yes_1": ${ True if other_ops[0].is_pending else ''  }
    - "other_ops_pending_no_1": ${ True if not other_ops[0].is_pending else '' }
    - "other_ops_people_2": ${ other_ops[1].name.text }
    - "other_ops_case_number_2": ${ other_ops[1].case_number }
    - "other_ops_state_county_2": ${ other_ops[1].county + ", " + other_ops[1].state }
    - "other_ops_year_2": ${ other_ops[1].year }
    - "other_ops_pending_yes_2": ${ True if other_ops[1].is_pending else ''  }
    - "other_ops_pending_no_2": ${ True if not other_ops[1].is_pending else '' }
    - "other_ops_people_3": ${ other_ops[2].name.text }
    - "other_ops_case_number_3": ${ other_ops[2].case_number }
    - "other_ops_state_county_3": ${ other_ops[2].county + ", " + other_ops[2].state }
    - "other_ops_year_3": ${ other_ops[2].year }
    - "other_ops_pending_yes_3": ${ True if other_ops[2].is_pending else ''  }
    - "other_ops_pending_no_3": ${ True if not other_ops[2].is_pending else '' }
    - "other_ops_additional": ${ other_ops.number() > 3 } 
    - "has_other_cases_yes": ${ has_other_cases == "Yes" }
    - "has_other_cases_no": ${ has_other_cases == "No" }
    - "has_other_cases_idk": ${ has_other_cases == "I don't know" }
    - "other_cases_people_1": ${ other_cases[0].name.text }
    - "other_cases_state_county_1": ${ other_cases[0].county + ", " + other_cases[0].state }
    - "other_cases_case_number_1": ${ other_cases[0].case_number }
    - "other_cases_year_1": ${ other_cases[0].year }
    - "other_cases_pending_yes_1": ${ True if other_cases[0].is_pending else ''  }
    - "other_cases_pending_no_1": ${ True if not other_cases[0].is_pending else '' }
      
    - "other_cases_people_2": ${ other_cases[1].name.text }
    - "other_cases_state_county_2": ${ other_cases[1].county + ", " + other_cases[1].state }
    - "other_cases_case_number_2": ${ other_cases[1].case_number }
    - "other_cases_year_2": ${ other_cases[1].year }
    - "other_cases_pending_yes_2": ${ True if other_cases[1].is_pending else ''  }
    - "other_cases_pending_no_2": ${ True if not other_cases[1].is_pending else '' }

    - "other_cases_people_3": ${ other_cases[2].name.text }
    - "other_cases_state_county_3": ${ other_cases[2].county + ", " + other_cases[2].state }
    - "other_cases_case_number_3": ${ other_cases[2].case_number }
    - "other_cases_year_3": ${ other_cases[2].year }
    - "other_cases_pending_yes_3": ${ True if other_cases[2].is_pending else ''  }
    - "other_cases_pending_no_3": ${ True if not other_cases[2].is_pending else '' }
    - "other_cases_additional": ${ other_cases.number() > 3 } 
    
    - "jurisdiction_petitioner_lives_here": ${ jurisdiction_type['I live here'] }
    - "jurisdiction_respondent_lives_here": ${ jurisdiction_type['Respondent lives here'] }
    - "jurisdiction_abuse_here": ${ jurisdiction_type['Abuse was here'] }
    - "jurisdiction_abuse_elsewhere": ${ jurisdiction_type['Abuse was elsewhere'] }

      # page 4
    - "incident_date_1": ${ incidents[0].date }
    - "incident_time_1": ${ incidents[0].time }
    - "incident_reason_1": ${ incidents[0].name.text }
    - "incident_date_2": ${ incidents[1].date }
    - "incident_time_2": ${ incidents[1].time }
    - "incident_reason_2": ${ incidents[1].name.text }
    - "incident_date_3": ${ incidents[2].date }
    - "incident_time_3": ${ incidents[2].time }
    - "incident_reason_3": ${ incidents[2].name.text }
    - "incident_date_4": ${ incidents[3].date }
    - "incident_time_4": ${ incidents[3].time }
    - "incident_reason_4": ${ incidents[3].name.text }
    - "additional_incidents": ${ incidents.number() > 4 }

    - "no_abuse": ${ any((no_harassment, no_physical, no_stalking, no_willful, no_intimidation, no_exploitation, no_neglect, no_interference)) }
    - "no_harassment": ${ no_harassment }
    - "no_physical": ${ no_physical }
    - "no_stalking": ${ no_stalking }
    - "no_willful": ${ no_willful }
    - "no_intimidation": ${ no_intimidation }
    - "no_exploitation": ${ no_exploitation }
    - "no_neglect": ${ no_neglect }
    - "no_interference": ${ no_interference}
    - "stay_away_checkbox": ${ stay_away }
    - "stay_away": ${ stay_away }

      # page 5
    - "possession_residence": ${ not (residence_remedies == 'none') }
    - "exclusive_home_address_checkbox": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "exclusive_home_address_one_line": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ users[0].address.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "exclusive_address_hidden": |
        % if hide_address and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "respondent_no_right_to_stay": ${ True if exclusive_possession_reason == "respondent_no_right_to_stay" and residence_remedies == "exclusive possession" else '' }
    - "both_parties_right_to_stay": ${ True if exclusive_possession_reason == "both_parties_right_to_stay" and residence_remedies == "exclusive possession" else '' }
    - "provide_alt_housing": ${ residence_remedies == 'provide alternate housing' }
      
    - "stay_away_locations": ${ any((stay_away_jobs, stay_away_schools, stay_away_other))}
    - "stay_away_jobs": ${ stay_away_jobs }
    - "stay_away_job_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs:
        ${ jobs[0].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Confidential" }
        % elif stay_away_jobs:
        ${ jobs[0].on_one_line(bare=True) if stay_away_jobs else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_1": ${ True if hide_work_address and stay_away_jobs else '' }

    - "stay_away_job_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs_2:
        ${ jobs[1].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Confidential" }
        % elif stay_away_jobs_2:
        ${ jobs[1].on_one_line(bare=True) if stay_away_jobs_2 else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_2": ${ True if hide_work_address_2 and stay_away_jobs_2 else '' }

      # page 6    
    - "stay_away_schools": ${ stay_away_schools }
    - "stay_away_school_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_address_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_hidden_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ True }
        % endif
        % endif
        % endif
    - "stay_away_school_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_address_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_hidden_2": |
        % if stay_away_schools:
        % if stay_away_schools_2:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ True }
        % endif
        % endif
        % endif
        % endif
        
    - "stay_away_other": ${ stay_away_other }
    - "stay_away_other_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ other_locations_hidden_description_1 }
        % elif stay_away_other:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ "Confidential" }
        % elif stay_away_other:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ True }
        % else:
        ${ False }
        % endif
        % else:
        ${ False }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ True }
        % elif stay_away_other:
        ${ False }
        % else:
        ${ "" }
        % endif

    - "stay_away_other_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ other_locations_hidden_description_2 }
        % elif stay_away_other_2:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential" }
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ "Confidential" }
        % elif stay_away_other_2:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ True }
        % else:
        ${ False }
        % endif
        % else:
        ${ False }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ True }
        % elif stay_away_other_2:
        ${ False }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif

    - "same_school_restrictions": ${ True if (same_school and same_school_restrictions != "none") else ""} 
    - "same_school_name": ${ same_school_name if (same_school and same_school_restrictions != "none") else ""}

    - "same_school_not_attend": ${ True if (same_school and same_school_restrictions == "not attend") else ""}
    - "same_school_change_placement": ${ True if (same_school and same_school_restrictions == "change program") else ""}
    - "same_school_avoid_parts": ${ True if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "same_school_parts": ${ parts_of_school if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "respondent_parent_help": ${True if respondent_parent_help == "Yes" else ""}
    - "respondent_parent_name": ${ respondent_parent_name if respondent_parent_help == "Yes" else "" }
    - "respondent_parent_order": ${ respondent_parent_order if respondent_parent_help == "Yes" else "" }
    - "counseling": ${ request_counseling }    
    - "request_counseling": ${ request_counseling }    
    - "dv_counseling": ${ True if request_counseling and dv_counseling else '' }    
    - "alcohol_counseling": ${ True if request_counseling and alcohol_counseling else '' }    
    - "mental_health_counseling": ${ True if request_counseling and mental_health_counseling else '' } 
    - "other_counseling": ${ True if request_counseling and other_counseling else '' }    
    - "other_counseling_text": ${ other_counseling_text if request_counseling and other_counseling else '' }    

      # page 7    
    - "care_and_possession_of_children": ${ minor_kids_with_respondent } 
    - "minor_kids_with_respondent": ${ minor_kids_with_respondent }
    - "shared_kids_1_name": ${ shared_kids[0].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_1_age": ${ shared_kids[0].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_1_state": ${ shared_kids[0].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_1_pet_par": ${ True if minor_kids_with_respondent and shared_kids[0].pet_parentage == True else "" }
    - "shared_kids_1_res_par": ${ True if minor_kids_with_respondent and shared_kids[0].res_parentage == True else "" }
    - "shared_kids_1_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[0].pet_parentage == None and shared_kids[0].res_parentage == None) else "" }
    - "shared_kids_1_include_yes": ${ shared_kids[0].protect if minor_kids_with_respondent else '' }
    - "shared_kids_1_include_no": ${ True if minor_kids_with_respondent and shared_kids[0].protect == False else '' }
    - "shared_kids_2_name": ${ shared_kids[1].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_2_age": ${ shared_kids[1].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_2_state": ${ shared_kids[1].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_2_pet_par": ${ True if minor_kids_with_respondent and shared_kids[1].pet_parentage == True else "" }
    - "shared_kids_2_res_par": ${ True if minor_kids_with_respondent and shared_kids[1].res_parentage == False else "" }
    - "shared_kids_2_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[1].pet_parentage == None and shared_kids[1].res_parentage == None) else "" }
    - "shared_kids_2_include_yes": ${ shared_kids[1].protect if minor_kids_with_respondent else '' }
    - "shared_kids_2_include_no": ${ True if minor_kids_with_respondent and shared_kids[1].protect == False else '' }
    - "shared_kids_3_name": ${ shared_kids[2].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_3_age": ${ shared_kids[2].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_3_state": ${ shared_kids[2].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_3_pet_par": ${ True if minor_kids_with_respondent and shared_kids[2].pet_parentage == True else "" }
    - "shared_kids_3_res_par": ${ True if minor_kids_with_respondent and shared_kids[2].res_parentage == False else "" }
    - "shared_kids_3_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[2].pet_parentage == None and shared_kids[2].res_parentage == None) else "" }
    - "shared_kids_3_include_yes": ${ shared_kids[2].protect if minor_kids_with_respondent else '' }
    - "shared_kids_3_include_no": ${ True if minor_kids_with_respondent and shared_kids[2].protect == False else '' }
    - "shared_kids_4_name": ${ shared_kids[3].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_4_age": ${ shared_kids[3].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_4_state": ${ shared_kids[3].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_4_pet_par": ${ True if minor_kids_with_respondent and shared_kids[3].pet_parentage == True else "" }
    - "shared_kids_4_res_par": ${ True if minor_kids_with_respondent and shared_kids[3].res_parentage == False else "" }
    - "shared_kids_4_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[3].pet_parentage == None and shared_kids[3].res_parentage == None) else "" }
    - "shared_kids_4_include_yes": ${ shared_kids[3].protect if minor_kids_with_respondent else '' }
    - "shared_kids_4_include_no": ${ True if minor_kids_with_respondent and shared_kids[3].protect == False else '' }
    - "shared_kids_5_name": ${ shared_kids[4].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_5_age": ${ shared_kids[4].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_5_state": ${ shared_kids[4].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_5_pet_par": ${ True if minor_kids_with_respondent and shared_kids[4].pet_parentage == True else "" }
    - "shared_kids_5_res_par": ${ True if minor_kids_with_respondent and shared_kids[4].res_parentage == False else "" }
    - "shared_kids_5_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[4].pet_parentage == None and shared_kids[4].res_parentage == None) else "" }
    - "shared_kids_5_include_yes": ${ shared_kids[4].protect if minor_kids_with_respondent else '' }
    - "shared_kids_5_include_no": ${ True if minor_kids_with_respondent and shared_kids[4].protect == False else '' }
    - "shared_kids_6_name": ${ shared_kids[5].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_6_age": ${ shared_kids[5].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_6_state": ${ shared_kids[5].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_6_pet_par": ${ True if minor_kids_with_respondent and shared_kids[5].pet_parentage == True else "" }
    - "shared_kids_6_res_par": ${ True if minor_kids_with_respondent and shared_kids[5].res_parentage == False else "" }
    - "shared_kids_6_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[5].pet_parentage == None and shared_kids[5].res_parentage == None) else "" }
    - "shared_kids_6_include_yes": ${ shared_kids[5].protect if minor_kids_with_respondent else '' }
    - "shared_kids_6_include_no": ${ True if minor_kids_with_respondent and shared_kids[5].protect == False else '' }
    - "children_live_in_il": ${ True if children_live_in_il and minor_kids_with_respondent and court_make_children_decisions else '' }
    - "children_removed_from_il": ${ True if children_removed_from_il and minor_kids_with_respondent and court_make_children_decisions else '' }
    - "children_fled": ${ True if children_fled and minor_kids_with_respondent and court_make_children_decisions else '' }
    - "no_children_decisions": ${ True if minor_kids_with_respondent and court_make_children_decisions == False else '' }

      # page 8    
    - "caretaker_cb": ${ minor_kids_with_respondent }
    - "caretaker_petitioner": ${ True if (primary_caretaker == "petitioner" and minor_kids_with_respondent) else '' }

    - "caretaker_respondent": ${ True if (primary_caretaker == "respondent" and minor_kids_with_respondent) else '' }
    - "caretaker_other": ${ True if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_name": ${ other_caretaker.name_full() if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_address": ${ other_caretaker.address.on_one_line(bare=True) if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "care_and_possession_cb": ${ True if physical_care_of_children or return_children_to == "petitioner" or return_children_to == "other" or no_removal_school or ((schools[0].hide or schools[1].hide) and stay_away_schools and minor_kids_with_respondent) else '' }

    - "physical_care_of_children": ${ True if physical_care_of_children and minor_kids_with_respondent else '' }
    - "return_children_possession": ${ True if (return_children_to == "petitioner" or return_children_to == "other") and minor_kids_with_respondent else '' }
    - "return_children_other_person": |
        % if minor_kids_with_respondent:
        % if return_children_to == "other":
        ${ return_children_other_person.name_full() }
        % elif return_children_to == "petitioner":
        ${ "Petitioner" }
        % else:
        ${""}
        % endif
        % endif
    - "no_removal_school": ${ True if no_removal_school and minor_kids_with_respondent else '' }
    - "confidential_schools__2": ${ True if (schools[0].hide or schools[1].hide) and stay_away_schools and minor_kids_with_respondent else False }
    - "temp_custody_cb": ${ True if temp_custody_of_children and minor_kids_with_respondent else '' }
    - "requests_temp_custody": ${ True if temp_custody_of_children and minor_kids_with_respondent else '' }
    - "parenting_time_cb": ${ True if parenting_time and minor_kids_with_respondent else '' }
    - "parenting_time_grant": ${ True if parenting_time == "grant" and minor_kids_with_respondent else '' }
    - "parenting_time_reserve": ${ True if parenting_time == "reserve" and minor_kids_with_respondent else '' }
    - "parenting_time_deny": ${ True if parenting_time == "deny" and minor_kids_with_respondent else '' }
    - "parenting_time_restrict": ${ True if parenting_time == "restrict" and minor_kids_with_respondent else '' }
    - "no_pt_no_abuse": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_abuse"] and minor_kids_with_respondent else '' }
    - "no_pt_no_harass": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_harass"] and minor_kids_with_respondent else '' }
    - "no_pt_no_hide": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_hide"] and minor_kids_with_respondent else '' }
    - "no_pt_no_best_interest": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_best_interest"] and minor_kids_with_respondent else '' }
    - "pt_format": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and minor_kids_with_respondent else '' }
    - "pt_attach": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "attach" and minor_kids_with_respondent else ''  }
    - "pt_interview": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekdays": ${ True if pt_weekdays and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_list": ${ comma_and_list(dow_abb[int(y)] for y in pt_weekday_days.true_values()) if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent == True else '' }
    - "pt_weekday_start": ${ format_time(pt_weekday_start, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_end": ${ format_time(pt_weekday_end, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every": ${ True if pt_weekend_cadence == "every" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every_other": ${ True if pt_weekend_cadence == "other" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    # pt_weekend checkbox does not appear in petition
    #- "pt_weekend_cb": ${ True if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_day": ${ dow_full[int(pt_weekend_start_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_time": ${ format_time(pt_weekend_start_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_day": ${ dow_full[int(pt_weekend_end_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_time": ${ format_time(pt_weekend_end_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }

      # page 9    
    - "pt_start_date_cb": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_start_date": ${ pt_start_date if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }

    - "pt_holidays": ${ pt_holidays if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_holiday_list": ${ pt_holiday_list if pt_holidays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else ''}
    - "pt_transportation_cb": ${ True if pt_transportation != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_transportation_person_name": |
        % if pt_transportation == "petitioner" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Petitioner" }
        % elif pt_transportation == "respondent" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Respondent" }
        % elif pt_transportation == "other" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_transportation_person.name_full() }
        % else:
        ${ "" }
        % endif
    - "pt_pickup_location_cb": ${ True if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_pickup_location_name": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_pickup_location": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif          
    - "pt_return_location_cb": ${ True if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_return_location_name": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_return_location": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif          
    - "pt_location_cb": ${ True if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_location_name": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_location": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif          
    - "pt_supervised": ${ True if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervisor_name": ${ pt_supervisor.name_full() if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervised_center_cb": ${ True if pt_supervised == True and pt_supervisor_type == "agency" and (parenting_time == "restrict" or parenting_time == "grant") else "" }

    - "pt_immediate_return_cb": ${ True if pt_immediate_return == True and pt_return_person_choice != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_pet": ${ True if pt_immediate_return == True and pt_return_person_choice == "Me" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other": ${ True if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other_name": ${ pt_return_person.name_full() if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }

    - "order_to_appear_cb": ${ True if minor_kids_with_respondent and ((current_possession_of_children == False and return_children_to == "court" ) or (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) ) else '' }         
    - "appear_alone_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) else '' }
    - "appear_with_children_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == False and return_children_to == "court" ) else '' }      
    - "appear_with_children_prevent": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_prevent:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_prevent:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_prevent:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_return": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_return:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_return:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_return:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_exam": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_exam:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_exam:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_exam:
        ${ True }
        % endif
        % endif
        % endif

        
    - "no_conceal_children_cb": ${ True if no_conceal_children and minor_kids_with_respondent else '' }

    - "return_property_cb": |
        % if award_personal_property:
        True
        % elif residence_remedies == 'exclusive possession':
        % if respondent_one_time_entry:
        True
        % endif
        % endif
    - "award_petitioner_property_cb": ${ True if award_personal_property else "" }
    - "petitioner_property_awarded_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property]) if award_personal_property else "" }

      # page 10
    
    - "respondent_ordered_return_property_cb": ${ True if award_personal_property == True and return_property == True else "" }
    - "return_all_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] == [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }
    - "return_some_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] != [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }
      
    - "petitioner_property_ordered_return_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property if item.respo_has == True]) if (award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_petitioner_owns": ${ True if (return_property_reason == "petitioner owns" and award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_both_own": ${ True if (return_property_reason == "both own" and award_personal_property == True and return_property == True) else "" }

     # page 8
    - "return_property_reason_divorce": ${ True if (return_property_reason == "divorce" and award_personal_property == True and return_property == True) else "" }

    - "property_transfer_location_cb": ${ True if property_transfer_location_cb == True else '' }
    - "property_transfer_location": ${ property_transfer_location.on_one_line(bare=True) if property_transfer_location_cb == True else '' }
    - "property_transfer_present_cb": ${ True if property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_cb": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_name_known": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True and property_transfer_police != "" else '' }
    - "property_transfer_present_police_name": ${ property_transfer_police if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_cb": ${ True if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_name": ${ other_transfer_property_person.name_full() if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_date": ${ property_transfer_date if property_transfer_know_date == True else '' }
    - "property_transfer_time": ${ format_time(property_transfer_time, format='h:mm') if property_transfer_know_date == True else ''  }
    - "property_transfer_time_am": ${ True if format_time(property_transfer_time, format='a') == "AM" and property_transfer_know_date == True else "" }
    - "property_transfer_time_pm": ${ True if format_time(property_transfer_time, format='a') == "PM" and property_transfer_know_date == True else "" }     
    
    - "return_respo_property_cb": ${ True if return_respo_property else '' }
    - "return_respo_property": ${ True if return_respo_property else '' }
    - "return_respo_clothes": ${ True if (return_respo_property == True and respo_property['clothes'] == True) else '' }
    - "return_respo_medicine": ${ True if (return_respo_property == True and respo_property['medicine'] == True) else '' }
    - "return_respo_property_other": ${ True if (return_respo_property == True and respo_property['other'] == True) else '' }
    - "return_respo_property_list": ${ respo_property_other if (return_respo_property == True and respo_property['other'] == True) else '' }
    
    - "respondent_one_time_entry": ${ True if respondent_one_time_entry == True else '' }
    - "one_time_present_police_cb": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_police_name_known": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True and res_property_transfer_police != "" else '' }
    - "one_time_present_police_name": ${ res_property_transfer_police if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_other_cb": ${ True if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }
    - "one_time_present_person": ${ res_other_transfer_property_person.name_full() if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }

      # page 11    
    - "property_restrictions_cb": ${ True if restrict_other_property == True or restrict_elderly_petitioner_resources == "Yes" else "" }
    - "restrict_property_cb": ${ True if restrict_other_property == True else "" }
    - "restrict_cars": ${ True if restrict_other_property == True and restrict_cars else '' }
    - "restricted_car_details": ${ restricted_car_details if restrict_other_property == True and restrict_cars else '' }
    - "restrict_home": ${ True if restrict_other_property == True and restrict_home else '' }
    - "restricted_property_address": ${ restricted_property_address.on_one_line(bare=True) if restrict_other_property == True and restrict_home else '' }
    - "restrict_property_space": ${ True if restrict_other_property == True and restrict_home and restrict_property_space else '' }
    - "restrict_property_items": ${ True if restrict_other_property == True and restrict_home and restrict_property_items else '' }
    - "restricted_property_list": ${ restricted_property.rstrip('.') if restrict_other_property == True else "" }
    - "restrict_property_reason_petitioner_owns": ${ True if (restrict_property_reason == "petitioner" and restrict_other_property == True) else "" }
    - "restrict_property_reason_both_own": ${ True if restrict_property_reason == "both" and restrict_other_property == True else "" }
    - "restrict_property_reason_divorce": ${ True if restrict_property_reason == "divorce" and restrict_other_property == True else "" }
    - "restrict_property_elderly_petitioner": ${ True if restrict_elderly_petitioner_resources == "Yes" else '' }
    - "possession_of_animals": ${ True if possession_of_animals else "" }
    - "animals_list": ${ comma_and_list([item.name.text + " (" + indefinite_article(item.description) + ")" for item in pets]) if possession_of_animals else "" }
    - "temp_support_cb": |
        % if temp_child_support and minor_kids_with_respondent:
        ${ True }
        % elif relationship_ma:
        % if temp_maintenance and (relationship_se or relationship_xs):
        ${ True }
        % endif        
        % endif        
    - "temp_child_support": ${ True if (temp_child_support == True and minor_kids_with_respondent == True) else '' }
    - "temp_maintenance": |
        % if relationship_ma:
        % if temp_maintenance and (relationship_se or relationship_xs):
        ${ True }
        % endif        
        % endif

      # page 12
    - "payment_for_losses_cb":  |
        % if not expenses_none and (expenses_medical or expenses_lost_income or expenses_property or expenses_moving or expenses_housing or expenses_children or expenses_lawyer or expenses_other):
        ${ True }
        % endif
    - "expenses_any_cb":  |
        % if not expenses_none and (expenses_medical or expenses_lost_income or expenses_property or expenses_moving or expenses_housing or expenses_children or expenses_lawyer or expenses_other):
        ${ True }
        % endif
    - "expenses_medical": |
        % if not expenses_none:
        ${ expenses_medical }
        % endif
    - "expenses_medical_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_medical_amount, show_decimals=True) }
        % endif
    - "expenses_lost_income":  |
        % if not expenses_none:
        ${ expenses_lost_income }
        % endif
    - "expenses_lost_income_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_lost_income_amount, show_decimals=True) }
        % endif
    - "expenses_property":  |
        % if not expenses_none:
        ${ expenses_property }
        % endif
    - "expenses_property_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_property_amount, show_decimals=True) }
        % endif
    - "expenses_moving":  |
        % if not expenses_none:
        ${ expenses_moving }
        % endif
    - "expenses_moving_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_moving_amount, show_decimals=True) }
        % endif
    - "expenses_housing":  |
        % if not expenses_none:
        ${ expenses_housing }
        % endif
    - "expenses_housing_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_housing_amount, show_decimals=True) }
        % endif
    - "expenses_children":  |
        % if not expenses_none:
        ${ expenses_children }
        % endif
    - "expenses_children_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_children_amount, show_decimals=True) }
        % endif
    - "expenses_lawyer":  |
        % if not expenses_none:
        ${ expenses_lawyer }
        % endif
    - "expenses_lawyer_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_lawyer_amount, show_decimals=True) }
        % endif
    - "expenses_other":  |
        % if not expenses_none:
        ${ expenses_other }
        % endif
    - "expenses_other_kind":  |
        % if not expenses_none:
        ${ expenses_other_kind }
        % endif
    - "expenses_other_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_other_amount, show_decimals=True) }
        % endif      
        
    - "no_stay_under_influence": ${ no_stay_under_influence if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
    - "no_stay_influence_location": ${ no_stay_residence.on_one_line(bare=True) if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
      
    - "firearms_cb": ${ True if firearms_threat else '' }
    - "firearms_surrender": ${ True if firearms_threat and firearms_relief['surrender'] else '' }
    - "firearms_intimate_partner_cb": ${ True if firearms_threat and (intimate_partner == "Yes" or protect_shared_kids or protect_petitioner_kids) else '' }
    - "firearms_not_intimate_partner_note": ${ "*See note*" if firearms_threat == True and (intimate_partner != "Yes" and protect_shared_kids == False and protect_petitioner_kids == False) else "" }      
    - "firearms_not_intimate_partner": ${ "*Respondent poses a threat but is not an intimate partner of Petitioner or Petitioner's child.*" if firearms_threat == True and (intimate_partner != "Yes" and protect_shared_kids == False and protect_petitioner_kids == False) else "" }    
    - "firearms_warrant": ${ True if firearms_threat == True and firearms_relief['warrant'] == True else '' }
    - "firearms_threat": ${ True if firearms_threat == True and warrant_reasons['threat'] == True else '' }
    - "firearms_has_guns": ${ True if firearms_threat == True and warrant_reasons['has_guns'] == True else '' }
    - "firearms_location": ${ True if firearms_threat == True and warrant_reasons['location'] == True else '' }
    - "firearms_report": ${ True if firearms_threat == True and firearms_relief['warrant'] == True and made_dv_report == True else '' }
    - "firearms_eop_notice": ${ True if firearms_threat == True and eop == True and firearms_eop_notice == True else '' }
      
      # page 13    
    - "childrens_records_cb": ${ True if minor_kids_with_respondent and ( no_records_no_contact or no_records_hide_address or no_records_no_removal ) else "" }
    - "no_records_no_contact": ${ True if minor_kids_with_respondent and no_records_no_contact else "" }
    - "no_records_hide_address": ${ True if minor_kids_with_respondent and no_records_hide_address else "" }
    - "no_records_no_removal": ${ True if minor_kids_with_respondent and no_records_no_removal else "" }
    - "expenses_shelter":  |
        % if not expenses_none:
        ${ expenses_shelter }
        % endif
    - "expenses_shelter_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_shelter_amount, show_decimals=True) }
        % endif

    - "misc_remedies_cb": ${ True if misc_remedies_text != '' else '' }
    - "misc_remedies_text": ${ misc_remedies_text }
    - "misc_remedies_because_text": ${ misc_remedies_because_text if misc_remedies_text != '' else '' }
    - "separate_phone_service_cb": ${ True if separate_phone_service else '' }
    - "phone_provider": ${ phone_provider if separate_phone_service else '' }
    - "phone_account_holder": |
        % if phone_account_holder == 'respondent' and separate_phone_service == True:
        ${other_parties[0].name_full()}
        % elif phone_account_holder == 'other' and separate_phone_service == True:
        ${ other_phone_account_holder.name_full() }
        % endif
    - "billing_phone_number": ${ phone_number_formatted(billing_phone_number) if separate_phone_service else '' }
    - "cell_number_1": ${ phone_number_formatted(cell_numbers[0].name.text) if separate_phone_service else '' }
    - "cell_number_2": ${ phone_number_formatted(cell_numbers[1].name.text) if separate_phone_service else '' }
    - "cell_number_3": ${ phone_number_formatted(cell_numbers[2].name.text) if separate_phone_service else '' }
    - "cell_number_4": ${ phone_number_formatted(cell_numbers[3].name.text) if separate_phone_service else '' }

      # page 14    
    - "petitioner_signature": ${ users[0].name_full() if e_signature else '' }
    - "preparer_name": ${ users[0].name_full() }
    - "preparer_address_one_line": ${ users[0].address.on_one_line(bare=True) }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "preparer_email": ${ users[0].email if users[0].email_notice else ""}

---
attachment:
  variable name: op_schools[i]
  name: confidential_schools
  filename: confidential_schools
  skip undefined: True
  editable: False
  pdf template file: op_schools.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }

    - "school_1_kids": ${ comma_and_list(schools[0].kids_who_attend.true_values()) if stay_away_schools and schools[0].hide == True else '' }
    - "school_1_name": ${ schools[0].name if stay_away_schools and schools[0].hide == True else ''}
    - "school_1_type_school": ${ True if stay_away_schools and (schools[0].hide == True and schools[0].type=='school') else '' }
    - "school_1_type_daycare": ${ True if stay_away_schools and (schools[0].hide == True and schools[0].type=='daycare') else '' }
    - "school_1_address": ${ schools[0].on_one_line(bare=True) if stay_away_schools and schools[0].hide == True else '' }
    - "school_2_kids": ${ comma_and_list(schools[1].kids_who_attend.true_values())  if stay_away_schools and stay_away_schools_2 and schools[1].hide == True else ''}
    - "school_2_name": ${ schools[1].name if stay_away_schools and stay_away_schools_2 and schools[1].hide == True else '' }
    - "school_2_type_school": ${ True if stay_away_schools and stay_away_schools_2 and (schools[1].hide == True and schools[1].type=='school') else '' }
    - "school_2_type_daycare": ${ True if stay_away_schools and stay_away_schools_2 and (schools[1].hide == True and schools[1].type=='daycare') else '' }
    - "school_2_address": ${ schools[1].on_one_line(bare=True) if stay_away_schools and stay_away_schools_2 and schools[1].hide == True else '' }

    - "school_3_kids": ${ comma_and_list(schools[2].kids_who_attend.true_values()) if stay_away_other and other_location_1_is_school and schools[2].hide == True else '' }
    - "school_3_name": ${ schools[2].name if stay_away_other and other_location_1_is_school and schools[2].hide == True else ''}
    - "school_3_type_school": ${ True if stay_away_other and other_location_1_is_school and (schools[2].hide == True and schools[2].type=='school') else '' }
    - "school_3_type_daycare": ${ True if stay_away_other and other_location_1_is_school and (schools[2].hide == True and schools[2].type=='daycare') else '' }
    - "school_3_address": ${ schools[2].on_one_line(bare=True) if stay_away_other and other_location_1_is_school and schools[2].hide == True else '' }

    - "school_4_name": ${ schools[3].name if stay_away_other and stay_away_other_2 and other_location_2_is_school and schools[3].hide == True else '' }
    - "school_4_kids": ${ comma_and_list(schools[3].kids_who_attend.true_values()) if stay_away_other and stay_away_other_2 and other_location_2_is_school and schools[3].hide == True else '' }
    - "school_4_type_school": ${ True if stay_away_other and stay_away_other_2 and other_location_2_is_school and (schools[3].hide == True and schools[3].type=='school') else '' }
    - "school_4_type_daycare": ${ True if stay_away_other and stay_away_other_2 and other_location_2_is_school and (schools[3].hide == True and schools[3].type=='daycare') else '' }
    - "school_4_address": ${ schools[3].on_one_line(bare=True) if stay_away_other and stay_away_other_2 and other_location_2_is_school and schools[3].hide == True else '' }
      
---
attachment:
  variable name: additional_incidents[i]
  name: additional_incidents
  filename: additional_incidents
  skip undefined: True
  editable: False
  pdf template file: additional_incidents.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "incident_date_1": ${ incidents[4].date }
    - "incident_time_1": ${ incidents[4].time }
    - "incident_reason_1": ${ incidents[4].name.text }
    - "incident_date_2": ${ incidents[5].date }
    - "incident_time_2": ${ incidents[5].time }
    - "incident_reason_2": ${ incidents[5].name.text }
    - "incident_date_3": ${ incidents[6].date }
    - "incident_time_3": ${ incidents[6].time }
    - "incident_reason_3": ${ incidents[6].name.text }
    - "incident_date_4": ${ incidents[7].date }
    - "incident_time_4": ${ incidents[7].time }
    - "incident_reason_4": ${ incidents[7].name.text }
    - "incident_date_5": ${ incidents[8].date }
    - "incident_time_5": ${ incidents[8].time }
    - "incident_reason_5": ${ incidents[8].name.text }
    - "incident_date_6": ${ incidents[9].date }
    - "incident_time_6": ${ incidents[9].time }
    - "incident_reason_6": ${ incidents[9].name.text }
    - "incident_date_7": ${ incidents[10].date }
    - "incident_time_7": ${ incidents[10].time }
    - "incident_reason_7": ${ incidents[10].name.text }
    - "incident_date_8": ${ incidents[11].date }
    - "incident_time_8": ${ incidents[11].time }
    - "incident_reason_8": ${ incidents[11].name.text }
---
attachment:
  variable name: additional_cases[i]
  name: additional_cases
  filename: additional_cases
  skip undefined: True
  editable: False
  pdf template file: additional_cases.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
      
    - "has_other_ops_yes": ${ True if has_other_ops == "Yes" and other_ops.number() > 3 else ''  }
    - "has_other_ops_no": ${ has_other_ops == "No" }
    - "has_other_ops_idk": ${ has_other_ops == "I don't know" }
      
    - "other_ops_people_1": ${ other_ops[3].name.text }
    - "other_ops_state_county_1": ${ other_ops[3].county + ", " + other_ops[3].state }
    - "other_ops_year_1": ${ other_ops[3].year }
    - "other_ops_people_2": ${ other_ops[4].name.text }
    - "other_ops_state_county_2": ${ other_ops[4].county + ", " + other_ops[4].state }
    - "other_ops_year_2": ${ other_ops[4].year }
    - "other_ops_people_3": ${ other_ops[5].name.text }
    - "other_ops_state_county_3": ${ other_ops[5].county + ", " + other_ops[5].state }
    - "other_ops_year_3": ${ other_ops[5].year }
    - "other_ops_people_4": ${ other_ops[6].name.text }
    - "other_ops_state_county_4": ${ other_ops[6].county + ", " + other_ops[6].state }
    - "other_ops_year_4": ${ other_ops[6].year }
    - "other_ops_people_5": ${ other_ops[7].name.text }
    - "other_ops_state_county_5": ${ other_ops[7].county + ", " + other_ops[7].state }
    - "other_ops_year_5": ${ other_ops[7].year }
    - "other_ops_people_6": ${ other_ops[8].name.text }
    - "other_ops_state_county_6": ${ other_ops[8].county + ", " + other_ops[8].state }
    - "other_ops_year_6": ${ other_ops[8].year }

    - "other_ops_case_number_1": ${ other_ops[3].case_number }
    - "other_ops_pending_yes_1": ${ True if other_ops[3].is_pending else ''  }
    - "other_ops_pending_no_1": ${ True if not other_ops[3].is_pending else '' }

    - "other_ops_case_number_2": ${ other_ops[4].case_number }
    - "other_ops_pending_yes_2": ${ True if other_ops[4].is_pending else ''  }
    - "other_ops_pending_no_2": ${ True if not other_ops[4].is_pending else '' }

    - "other_ops_case_number_3": ${ other_ops[5].case_number }
    - "other_ops_pending_yes_3": ${ True if other_ops[5].is_pending else ''  }
    - "other_ops_pending_no_3": ${ True if not other_ops[5].is_pending else '' }

    - "other_ops_case_number_4": ${ other_ops[6].case_number }
    - "other_ops_pending_yes_4": ${ True if other_ops[6].is_pending else ''  }
    - "other_ops_pending_no_4": ${ True if not other_ops[6].is_pending else '' }

    - "other_ops_case_number_5": ${ other_ops[7].case_number }
    - "other_ops_pending_yes_5": ${ True if other_ops[7].is_pending else ''  }
    - "other_ops_pending_no_5": ${ True if not other_ops[7].is_pending else '' }

    - "other_ops_case_number_6": ${ other_ops[8].case_number }
    - "other_ops_pending_yes_6": ${ True if other_ops[8].is_pending else ''  }
    - "other_ops_pending_no_6": ${ True if not other_ops[8].is_pending else '' }

    - "other_ops_case_number_7": ${ other_ops[9].case_number }
    - "other_ops_pending_yes_7": ${ True if other_ops[9].is_pending else ''  }
    - "other_ops_pending_no_7": ${ True if not other_ops[9].is_pending else '' }    
    
    - "has_other_cases_yes": ${ True if has_other_cases == "Yes" and other_cases.number() > 3 else '' }
    - "has_other_cases_no": ${ has_other_cases == "No" }
    - "has_other_cases_idk": ${ has_other_cases == "I don't know" }
    
    - "other_cases_people_1": ${ other_cases[3].name.text }
    - "other_cases_state_county_1": ${ other_cases[3].county + ", " + other_cases[3].state }
    - "other_cases_year_1": ${ other_cases[3].year }
    - "other_cases_people_2": ${ other_cases[4].name.text }
    - "other_cases_state_county_2": ${ other_cases[4].county + ", " + other_cases[4].state }
    - "other_cases_year_2": ${ other_cases[4].year }
    - "other_cases_people_3": ${ other_cases[5].name.text }
    - "other_cases_state_county_3": ${ other_cases[5].county + ", " + other_cases[5].state }
    - "other_cases_year_3": ${ other_cases[5].year }
    - "other_cases_people_4": ${ other_cases[6].name.text }
    - "other_cases_state_county_4": ${ other_cases[6].county + ", " + other_cases[6].state }
    - "other_cases_year_4": ${ other_cases[6].year }
    - "other_cases_people_5": ${ other_cases[7].name.text }
    - "other_cases_state_county_5": ${ other_cases[7].county + ", " + other_cases[7].state }
    - "other_cases_year_5": ${ other_cases[7].year }
    - "other_cases_people_6": ${ other_cases[8].name.text }
    - "other_cases_state_county_6": ${ other_cases[8].county + ", " + other_cases[8].state }
    - "other_cases_year_6": ${ other_cases[8].year }
      
    - "other_cases_case_number_1": ${ other_cases[3].case_number }
    - "other_cases_pending_yes_1": ${ True if other_cases[3].is_pending else ''  }
    - "other_cases_pending_no_1": ${ True if not other_cases[3].is_pending else '' }

    - "other_cases_case_number_2": ${ other_cases[4].case_number }
    - "other_cases_pending_yes_2": ${ True if other_cases[4].is_pending else ''  }
    - "other_cases_pending_no_2": ${ True if not other_cases[4].is_pending else '' }

    - "other_cases_case_number_3": ${ other_cases[5].case_number }
    - "other_cases_pending_yes_3": ${ True if other_cases[5].is_pending else ''  }
    - "other_cases_pending_no_3": ${ True if not other_cases[5].is_pending else '' }

    - "other_cases_case_number_4": ${ other_cases[6].case_number }
    - "other_cases_pending_yes_4": ${ True if other_cases[6].is_pending else ''  }
    - "other_cases_pending_no_4": ${ True if not other_cases[6].is_pending else '' }

    - "other_cases_case_number_5": ${ other_cases[7].case_number }
    - "other_cases_pending_yes_5": ${ True if other_cases[7].is_pending else ''  }
    - "other_cases_pending_no_5": ${ True if not other_cases[7].is_pending else '' }

    - "other_cases_case_number_6": ${ other_cases[8].case_number }
    - "other_cases_pending_yes_6": ${ True if other_cases[8].is_pending else ''  }
    - "other_cases_pending_no_6": ${ True if not other_cases[8].is_pending else '' }
      
---
attachment:
  variable name: affidavit_pt_supervisor[i]
  name: affidavit_pt_supervisor
  filename: affidavit_pt_supervisor
  skip undefined: True
  editable: False
  pdf template file: affidavit_pt_supervisor.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name_full() }
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    #- "shared_kids_list": ${ comma_and_list(protected_minor_kids_list ) if protect_shared_kids else ''}
    - "shared_kids_list": ${ comma_and_list([person.name_full() for person in shared_kids if person.protect == True]) if (minor_kids_with_respondent == True and shared_kids.number() > 0 and protect_shared_kids == True) else "" }
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name_full() if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name_full() if protect_high_risk_adult else '' }
    - "pt_supervisor_name": ${ pt_supervisor.name_full() if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
---
attachment:
  variable name: efiling_exemption[i]
  name: efiling_exemption
  filename: efiling_exemption
  skip undefined: True
  editable: False
  pdf template file: efiling_exemption.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner__1": ${ users[0].name_full() }
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "reason_dv": ${ True }
    - "e_signature": ${ users[0].name_full() if e_signature else '' }
    - "petitioner__2": ${ users[0].name_full() }
    - "form_for_self": ${ True }
    - "user_address_one_line": ${ users[0].address.on_one_line(bare=True) }
    - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].email_notice else ""}

---
attachment:
  variable name: op_summons[i]
  name: op_summons
  filename: op_summons
  skip undefined: True
  editable: False
  pdf template file: op_summons.pdf
  fields:
    - "county__2": ${ trial_court.address.county }
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "obo_minor_cb_2": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb_2": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name_2": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent__1": ${other_parties[0].name_full()}
    - "petitioner__2": ${ users[0].name_full() }
    - "petitioner__3": ${ users[0].name_full() }
    - "respondent__3": ${other_parties[0].name_full()}
    - "respondent__4": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "case_number__4": ${ case_number }
    - "case_number__5": ${ case_number }
    - "respondent__2": ${other_parties[0].name_full()}
    - "service_address_line_1": |
        % if service_address_choice == "other":
        ${ service_address.line_one(bare=True) }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % else:
        ${ other_parties[0].work_address.line_one(bare=True) }        
        % endif
    - "service_address_csz": |
        % if service_address_choice == "other":
        ${ service_address.line_two() }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.line_two() }        
        % else:
        ${ other_parties[0].work_address.line_two() }        
        % endif
    - "respondent_phone": ${ phone_number_formatted(other_parties[0].phone_number) }
    - "respondent_email": ${ other_parties[0].email }
    - "additional_service_address_no": ${ not has_second_service_address }
    - "additional_service_address_yes": ${ has_second_service_address }

    - "service_alt_address_line_1": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.line_one(bare=True) }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % else:
        ${ other_parties[0].work_address.line_one(bare=True) }        
        % endif
        % endif
    - "service_alt_address_csz": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.line_two() }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.line_two() }        
        % else:
        ${ other_parties[0].work_address.line_two() }        
        % endif
        % endif
    - "respondent_alt_phone": ${ phone_number_formatted(other_parties[0].phone_number_alt) if has_second_service_address == True else "" }
    - "respondent_alt_email": ${ other_parties[0].email_alt if has_second_service_address == True else "" }

    - "service_method_sheriff": ${ True if service_method == "sheriff" and service_state == "IL" else ""}
    - "service_method_sheriff_outside_il": ${ True if service_method == "sheriff" and service_state != "IL" else ""}
    - "service_location_outside_il": |
        % if service_method == "sheriff" and service_state != "IL":
        ${ service_county + ", " + service_state }
        % endif
    - "service_method_sps": ${ True if service_method == "sps" else "" }
    - "service_method_detective": ${ True if service_method == "detective" else "" }
    - "protective_order_type_op": ${ True }
    - "court_date_on_attached": ${ True }
    - "show_address": ${ not hide_address }
    - "hide_address": ${ hide_address }
    - "user_mail_address_line_one": ${ users[0].address.line_one(bare=True) }
    - "user_mail_address_city_state_zip": ${ users[0].address.line_two() }
    - "user_phone_number": ${ phone_number_formatted(users[0].phone_number) }
    - "user_email": ${ users[0].email if users[0].email_notice else ""}

---
attachment:
  variable name: emergency_op[i]
  name: emergency_op
  filename: emergency_op
  skip undefined: True
  editable: True
  pdf template file: emergency_op.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "civil_proceeding": True
    - "petitioner": ${ users[0].name_full() }
    - "petitioner__2": |
        % if protect_petitioner and protect_obo_minor: 
        ${ users[0].name_full() + " and on behalf of minor: " + obo_minor.name_full()}
        % elif protect_petitioner:
        ${ users[0].name_full() }
        % elif protect_obo_minor:
        ${ "On behalf of minor: " + obo_minor.name_full()}
        % else:
        ${""}
        % endif
    - "petitioner__3": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "case_number__4": ${ case_number }
    - "case_number__5": ${ case_number }
    - "case_number__6": ${ case_number }
    - "case_number__7": ${ case_number }
    - "case_number__8": ${ case_number }
    - "case_number__9": ${ case_number }
    - "case_number__10": ${ case_number }
    - "case_number__11": ${ case_number }
    - "case_number__12": ${ case_number }
    - "case_number__13": ${ case_number }
    - "case_number__14": ${ case_number }
    - "case_number__15": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    - "shared_kids_list": ${ comma_and_list([person.name_full() for person in shared_kids if person.protect == True]) if (minor_kids_with_respondent == True and shared_kids.number() > 0 and protect_shared_kids == True) else "" }
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name_full() if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name_full() if protect_high_risk_adult else '' }    
      # page 2
    - "show_address": ${ not hide_address }
    - "hide_address": ${ hide_address }
    - "notice_address_one_line": ${ users[0].address.on_one_line(bare=True) }
    - "petitioner_notice_email": ${ users[0].email if users[0].email_notice else ""}
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ "about " + other_parties[0].approx_age }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_home_address": |
        % if other_parties[0].address.address != "":
        % if knows_respondent_home:
        ${ other_parties[0].address.on_one_line(bare=True) }
        % else:
        ${ "Last known: " + other_parties[0].address.on_one_line(bare=True) }
        % endif
        % else:
        ${ "do not know" }
        % endif
    - "respondent_email": ${ other_parties[0].email }
    - "respondent_employer": |
        % if knows_respondent_work:
        ${ other_parties[0].employer }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_hours": |
        % if knows_respondent_work and other_parties[0].work_hours != "":
        ${ other_parties[0].work_hours }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_address": |
        % if knows_respondent_work:
        ${ other_parties[0].work_address.on_one_line(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": ${ respondent_gender_other if other_parties[0].gender == 'other' else other_parties[0].gender }
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'other' else other_parties[0].race }
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_tattoos": ${ other_parties[0].tattoos if other_parties[0].tattoos != "" else '' }

      # page 3
    
    - "no_abuse": ${ any((no_harassment, no_physical, no_stalking, no_willful, no_intimidation, no_exploitation, no_neglect, no_interference)) }
    - "no_harassment": ${ no_harassment }
    - "no_physical": ${ no_physical }
    - "no_stalking": ${ no_stalking }
    - "no_willful": ${ no_willful }
    - "no_intimidation": ${ no_intimidation }
    - "no_exploitation": ${ no_exploitation }
    - "no_neglect": ${ no_neglect }
    - "no_interference": ${ no_interference}
    - "stay_away_checkbox": ${ stay_away or any((stay_away_jobs, stay_away_schools, stay_away_other)) }
    - "stay_away": ${ stay_away }
      
    - "possession_residence": ${ not (residence_remedies == 'none') }
    - "exclusive_home_address_checkbox": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "exclusive_home_address_one_line": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ users[0].address.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "exclusive_address_hidden": |
        % if hide_address and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "respondent_no_right_to_stay": ${ True if exclusive_possession_reason == "respondent_no_right_to_stay" and residence_remedies == "exclusive possession" else '' }
    - "both_parties_right_to_stay": ${ True if exclusive_possession_reason == "both_parties_right_to_stay" and residence_remedies == "exclusive possession" else '' }
      
    - "stay_away_checkbox": ${ stay_away or any((stay_away_jobs, stay_away_schools, stay_away_other)) }
    - "stay_away": ${ stay_away }
      
    - "stay_away_locations": ${ any((stay_away_jobs, stay_away_schools, stay_away_other))}
    - "stay_away_jobs": ${ stay_away_jobs }
    - "stay_away_job_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs:
        ${ jobs[0].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Confidential" }
        % elif stay_away_jobs:
        ${ jobs[0].on_one_line(bare=True) if stay_away_jobs else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_1": ${ True if hide_work_address and stay_away_jobs else '' }

    - "stay_away_job_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs_2:
        ${ jobs[1].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Confidential" }
        % elif stay_away_jobs_2:
        ${ jobs[1].on_one_line(bare=True) if stay_away_jobs_2 else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_2": ${ True if hide_work_address_2 and stay_away_jobs_2 else '' }

      # page 4
    
    - "stay_away_schools": ${ stay_away_schools }
    - "stay_away_school_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_address_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_hidden_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ True }
        % endif
        % endif
        % endif
    - "stay_away_school_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_address_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_hidden_2": |
        % if stay_away_schools:
        % if stay_away_schools_2:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ True }
        % endif
        % endif
        % endif
        % endif
        
    - "stay_away_other": ${ stay_away_other }
    - "stay_away_other_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ other_locations_hidden_description_1 }
        % elif stay_away_other:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ "Confidential" }
        % elif stay_away_other:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        True
        % else:
        False
        % endif
        % else:
        False
        % endif
        % elif hide_other_address_1 and stay_away_other:
        True
        % elif stay_away_other:
        False
        % else:
        ${ "" }
        % endif

    - "stay_away_other_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ other_locations_hidden_description_2 }
        % elif stay_away_other_2:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential" }
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ "Confidential" }
        % elif stay_away_other_2:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        True
        % else:
        False
        % endif
        % else:
        False
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        True
        % elif stay_away_other_2:
        False
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif

    - "same_school_restrictions": ${ True if (same_school and same_school_restrictions != "none") else ""} 
    - "same_school_name": ${ same_school_name if (same_school and same_school_restrictions != "none") else ""}

    - "respondent_one_time_entry": ${ True if respondent_one_time_entry == True else '' }
    - "respondent_one_time_entry_police": ${ True if respondent_one_time_entry == True and property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "respondent_one_time_entry_other_cb": ${ True if respondent_one_time_entry == True and property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "respondent_one_time_entry_name": ${ other_transfer_property_person.name_full() if respondent_one_time_entry == True and property_transfer_person == 'other' and property_transfer_present_cb == True else '' }


    - "same_school_not_attend": ${ True if (same_school and same_school_restrictions == "not attend") else ""}
    - "same_school_change_placement": ${ True if (same_school and same_school_restrictions == "change program") else ""}
    - "same_school_avoid_parts": ${ True if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "same_school_parts": ${ parts_of_school if (same_school and same_school_restrictions == "not present in parts") else ""}
      
    - "respondent_parent_help": ${True if respondent_parent_help == "Yes" else ""}
    - "respondent_parent_name": ${ respondent_parent_name if respondent_parent_help == "Yes" else "" }
    - "respondent_parent_order": ${ respondent_parent_order if respondent_parent_help == "Yes" else "" }

      # page 5
    
    - "care_and_possession_of_children": ${ minor_kids_with_respondent } 
    - "shared_kids_1_name": ${ shared_kids[0].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_1_age": ${ shared_kids[0].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_1_state": ${ shared_kids[0].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_1_pet_par": ${ True if minor_kids_with_respondent and shared_kids[0].pet_parentage == True else "" }
    - "shared_kids_1_res_par": ${ True if minor_kids_with_respondent and shared_kids[0].res_parentage == True else "" }
    - "shared_kids_1_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[0].pet_parentage == None and shared_kids[0].res_parentage == None) else "" }
    - "shared_kids_1_include_yes": ${ shared_kids[0].protect if minor_kids_with_respondent else '' }
    - "shared_kids_1_include_no": ${ True if minor_kids_with_respondent and shared_kids[0].protect == False else '' }
    - "shared_kids_2_name": ${ shared_kids[1].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_2_age": ${ shared_kids[1].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_2_state": ${ shared_kids[1].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_2_pet_par": ${ True if minor_kids_with_respondent and shared_kids[1].pet_parentage == True else "" }
    - "shared_kids_2_res_par": ${ True if minor_kids_with_respondent and shared_kids[1].res_parentage == False else "" }
    - "shared_kids_2_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[1].pet_parentage == None and shared_kids[1].res_parentage == None) else "" }
    - "shared_kids_2_include_yes": ${ shared_kids[1].protect if minor_kids_with_respondent else '' }
    - "shared_kids_2_include_no": ${ True if minor_kids_with_respondent and shared_kids[1].protect == False else '' }
    - "shared_kids_3_name": ${ shared_kids[2].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_3_age": ${ shared_kids[2].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_3_state": ${ shared_kids[2].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_3_pet_par": ${ True if minor_kids_with_respondent and shared_kids[2].pet_parentage == True else "" }
    - "shared_kids_3_res_par": ${ True if minor_kids_with_respondent and shared_kids[2].res_parentage == False else "" }
    - "shared_kids_3_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[2].pet_parentage == None and shared_kids[2].res_parentage == None) else "" }
    - "shared_kids_3_include_yes": ${ shared_kids[2].protect if minor_kids_with_respondent else '' }
    - "shared_kids_3_include_no": ${ True if minor_kids_with_respondent and shared_kids[2].protect == False else '' }
    - "shared_kids_4_name": ${ shared_kids[3].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_4_age": ${ shared_kids[3].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_4_state": ${ shared_kids[3].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_4_pet_par": ${ True if minor_kids_with_respondent and shared_kids[3].pet_parentage == True else "" }
    - "shared_kids_4_res_par": ${ True if minor_kids_with_respondent and shared_kids[3].res_parentage == False else "" }
    - "shared_kids_4_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[3].pet_parentage == None and shared_kids[3].res_parentage == None) else "" }
    - "shared_kids_4_include_yes": ${ shared_kids[3].protect if minor_kids_with_respondent else '' }
    - "shared_kids_4_include_no": ${ True if minor_kids_with_respondent and shared_kids[3].protect == False else '' }
    - "shared_kids_5_name": ${ shared_kids[4].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_5_age": ${ shared_kids[4].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_5_state": ${ shared_kids[4].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_5_pet_par": ${ True if minor_kids_with_respondent and shared_kids[4].pet_parentage == True else "" }
    - "shared_kids_5_res_par": ${ True if minor_kids_with_respondent and shared_kids[4].res_parentage == False else "" }
    - "shared_kids_5_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[4].pet_parentage == None and shared_kids[4].res_parentage == None) else "" }
    - "shared_kids_5_include_yes": ${ shared_kids[4].protect if minor_kids_with_respondent else '' }
    - "shared_kids_5_include_no": ${ True if minor_kids_with_respondent and shared_kids[4].protect == False else '' }
    - "shared_kids_6_name": ${ shared_kids[5].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_6_age": ${ shared_kids[5].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_6_state": ${ shared_kids[5].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_6_pet_par": ${ True if minor_kids_with_respondent and shared_kids[5].pet_parentage == True else "" }
    - "shared_kids_6_res_par": ${ True if minor_kids_with_respondent and shared_kids[5].res_parentage == False else "" }
    - "shared_kids_6_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[5].pet_parentage == None and shared_kids[5].res_parentage == None) else "" }
    - "shared_kids_6_include_yes": ${ shared_kids[5].protect if minor_kids_with_respondent else '' }
    - "shared_kids_6_include_no": ${ True if minor_kids_with_respondent and shared_kids[5].protect == False else '' }
    - "jurisdiction_over_children_cb": ${ True if any([children_live_in_il, children_removed_from_il, children_fled]) and minor_kids_with_respondent else "" }
    - "children_live_in_il": ${ True if children_live_in_il and minor_kids_with_respondent else '' }
    - "children_removed_from_il": ${ True if children_removed_from_il and minor_kids_with_respondent else '' }
    - "children_fled": ${ True if children_fled and minor_kids_with_respondent else '' }
    - "caretaker_cb": ${ minor_kids_with_respondent }
    - "caretaker_petitioner": ${ True if (primary_caretaker == "petitioner" and minor_kids_with_respondent) else '' }
    - "caretaker_respondent": ${ True if (primary_caretaker == "respondent" and minor_kids_with_respondent) else '' }
    - "caretaker_other": ${ True if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_name": ${ other_caretaker.name_full() if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_address": ${ other_caretaker.address.on_one_line(bare=True) if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "care_and_possession_cb": ${ True if physical_care_of_children or return_children_to == "petitioner" or return_children_to == "other" or no_removal_school or ((schools[0].hide or schools[1].hide) and stay_away_schools and minor_kids_with_respondent) else '' }

    - "physical_care_of_children": ${ True if physical_care_of_children and minor_kids_with_respondent else '' }
    
    - "return_children_possession": ${ True if (return_children_to == "petitioner" or return_children_to == "other") and minor_kids_with_respondent else '' }
    - "return_children_petitioner_cb": ${ True if return_children_to == "petitioner" and minor_kids_with_respondent else '' }
    - "return_children_other_cb": ${ True if return_children_to == "other" and minor_kids_with_respondent else '' }    
    - "return_children_other_person": ${ return_children_other_person.name_full() if return_children_to == "other" and minor_kids_with_respondent else '' }
    - "return_children_location": ${ return_children_location.on_one_line(bare=True) if knows_return_children_details and return_children_to == "other" and minor_kids_with_respondent else "" }

    
    - "no_removal_school": ${ True if no_removal_school and minor_kids_with_respondent else '' }
    - "no_removal_schools_list": |
        % if no_removal_school and minor_kids_with_respondent:    
        
        % if stay_away_schools:
        % if schools[0].hide:
        ${ "School 1: Confidential  " }
        % else:
        ${ schools[0].name + "  " }
        % endif
        % endif
        
        % if stay_away_schools:
        % if stay_away_schools_2:
        % if schools[1].hide:
        ${ "School 2: Confidential" }
        % else:
        ${ schools[1].name }
        % endif
        % endif
        % endif

        % if stay_away_other:
        % if other_location_1_is_school:
        % if schools[2].hide:
        ${ "School 3: Confidential" }
        % else:
        ${ schools[2].name }
        % endif
        % endif
        % endif

        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if schools[3].hide:
        ${ "School 4: Confidential" }
        % else:
        ${ schools[3].name }
        % endif
        % endif
        % endif
        
        % endif

    - "schools_get_order": ${ True if (stay_away_schools or (stay_away_other and other_location_1_is_school)) and minor_kids_with_respondent else '' }
    
      # page 6
    - "get_order_school_name_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % endif
        % endif
    - "get_order_school_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % endif
        % endif
    - "get_order_school_name_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % endif
        % endif
    - "get_order_school_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % endif
        % endif
    - "get_order_school_name_3": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent:
        % if schools[2].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].name if stay_away_other and other_location_1_is_school else '' }
        % endif
        % endif
        % endif
    - "get_order_school_3": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other and other_location_1_is_school else '' }
        % endif
        % endif
        % endif
    - "confidential_schools__2": ${ True if (schools[0].hide or schools[1].hide or schools[2].hide) and (stay_away_schools or (stay_away_other and other_location_1_is_school)) and minor_kids_with_respondent else False }

    - "parenting_time_cb": ${ True if parenting_time and minor_kids_with_respondent else '' }
    - "parenting_time_grant": ${ True if parenting_time == "grant" and minor_kids_with_respondent else '' }
    - "parenting_time_reserve": ${ True if parenting_time == "reserve" and minor_kids_with_respondent else '' }
    - "parenting_time_deny": ${ True if parenting_time == "deny" and minor_kids_with_respondent else '' }
    - "parenting_time_restrict": ${ True if parenting_time == "restrict" and minor_kids_with_respondent else '' }
    - "no_pt_no_abuse": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_abuse"] and minor_kids_with_respondent else '' }
    - "no_pt_no_harass": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_harass"] and minor_kids_with_respondent else '' }
    - "no_pt_no_hide": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_hide"] and minor_kids_with_respondent else '' }
    - "no_pt_no_best_interest": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_best_interest"] and minor_kids_with_respondent else '' }
    - "pt_format": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and minor_kids_with_respondent else '' }
    - "pt_attach": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "attach" and minor_kids_with_respondent else ''  }
    - "pt_interview": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekdays": ${ True if pt_weekdays and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_list": ${ comma_and_list(dow_abb[int(y)] for y in pt_weekday_days.true_values()) if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent == True else '' }
    - "pt_weekday_start": ${ format_time(pt_weekday_start, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_end": ${ format_time(pt_weekday_end, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every": ${ True if pt_weekend_cadence == "every" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every_other": ${ True if pt_weekend_cadence == "other" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_cb": ${ True if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_day": ${ dow_full[int(pt_weekend_start_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_time": ${ format_time(pt_weekend_start_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_day": ${ dow_full[int(pt_weekend_end_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_time": ${ format_time(pt_weekend_end_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    
    - "pt_start_date_cb": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_start_date": ${ pt_start_date if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_holidays": ${ pt_holidays if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_holiday_list": ${ pt_holiday_list if pt_holidays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else ''}
      
    - "pt_transportation_cb": ${ True if pt_transportation != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_transportation_person_name": |
        % if pt_transportation == "petitioner" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Petitioner" }
        % elif pt_transportation == "respondent" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Respondent" }
        % elif pt_transportation == "other" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_transportation_person.name_full() }
        % else:
        ${ "" }
        % endif
    - "pt_pickup_location_cb": ${ True if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_pickup_location_name": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_pickup_location": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif

     # page 7
        
    - "pt_return_location_cb": ${ True if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_return_location_name": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_return_location": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif          
    - "pt_location_cb": ${ True if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_location_name": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_location": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
        
    - "pt_supervised": ${ True if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervisor_name": ${ pt_supervisor.name_full() if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervised_center_cb": ${ True if pt_supervised == True and pt_supervisor_type == "agency" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_visitation_center_name": ${ pt_visitation_center_name  if pt_supervised == True and pt_supervisor_type == "agency" and (parenting_time == "restrict" or parenting_time == "grant") and pt_visitation_center_name != "" else "" }    

    - "pt_immediate_return_cb": ${ True if pt_immediate_return == True and pt_return_person_choice != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_pet": ${ True if pt_immediate_return == True and pt_return_person_choice == "Me" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other": ${ True if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other_name": ${ pt_return_person.name_full() if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }

    - "no_conceal_children_cb": ${ True if no_conceal_children and minor_kids_with_respondent else '' }

    - "order_to_appear_cb": ${ True if minor_kids_with_respondent and ((current_possession_of_children == False and return_children_to == "court" ) or (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) ) else '' }
    - "appear_alone_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) else '' }
    - "appear_with_children_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == False and return_children_to == "court" ) else '' }      
    - "appear_with_children_prevent": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_prevent:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_prevent:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_prevent:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_return": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_return:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_return:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_return:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_exam": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_exam:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_exam:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_exam:
        ${ True }
        % endif
        % endif
        % endif

    - "return_property_cb": |
        % if award_personal_property:
        True
        % elif residence_remedies == 'exclusive possession':
        % if respondent_one_time_entry:
        True
        % endif
        % endif
    - "award_petitioner_property_cb": ${ True if award_personal_property else "" }
    - "award_petitioner_property_cb": ${ True if award_personal_property else "" }
    - "petitioner_property_awarded_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property]) if award_personal_property else "" }
    - "respondent_ordered_return_property_cb": ${ True if award_personal_property == True and return_property == True else "" }
    - "return_all_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] == [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }
    - "return_some_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] != [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }

    - "petitioner_property_ordered_return_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property if item.respo_has == True]) if (award_personal_property == True and return_property == True) else "" }
    - "return_property_person_cb": ${ True if award_personal_property and return_property else "" }
    - "return_property_person": |
        % if award_personal_property == True and return_property == True: 
        % if return_property_person == "petitioner":
        ${ "Petitioner" }
        % elif return_property_person == 'other':
        ${ other_return_property_person.name_full() }
        % endif
        % endif

     # page 8
    
    - "return_property_reason_petitioner_owns": ${ True if (return_property_reason == "petitioner owns" and award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_both_own": ${ True if (return_property_reason == "both own" and award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_divorce": ${ True if (return_property_reason == "divorce" and award_personal_property == True and return_property == True) else "" }
     
    - "property_transfer_location_cb": ${ True if property_transfer_location_cb == True else '' }
    - "property_transfer_location": ${ property_transfer_location.on_one_line(bare=True) if property_transfer_location_cb == True else '' }
    - "property_transfer_present_cb": ${ True if property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_cb": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_name_known": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True and property_transfer_police != "" else '' }
    - "property_transfer_present_police_name": ${ property_transfer_police if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_cb": ${ True if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_name": ${ other_transfer_property_person.name_full() if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_date": ${ property_transfer_date if property_transfer_know_date == True else '' }
    - "property_transfer_time": ${ format_time(property_transfer_time, format='h:mm') if property_transfer_know_date == True else ''  }
    - "property_transfer_time_am": ${ True if format_time(property_transfer_time, format='a') == "AM" and property_transfer_know_date == True else "" }
    - "property_transfer_time_pm": ${ True if format_time(property_transfer_time, format='a') == "PM" and property_transfer_know_date == True else "" }     
    
    - "return_respo_property_cb": ${ True if return_respo_property else '' }
    - "return_respo_property": ${ True if return_respo_property else '' }
    - "return_respo_clothes": ${ True if (return_respo_property == True and respo_property['clothes'] == True) else '' }
    - "return_respo_medicine": ${ True if (return_respo_property == True and respo_property['medicine'] == True) else '' }
    - "return_respo_property_other": ${ True if (return_respo_property == True and respo_property['other'] == True) else '' }
    - "return_respo_property_list": ${ respo_property_other if (return_respo_property == True and respo_property['other'] == True) else '' }
    
    - "respondent_one_time_entry": ${ True if respondent_one_time_entry == True else '' }
    - "one_time_present_police_cb": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_police_name_known": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True and res_property_transfer_police != "" else '' }
    - "one_time_present_police_name": ${ res_property_transfer_police if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_other_cb": ${ True if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }
    - "one_time_present_person": ${ res_other_transfer_property_person.name_full() if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }
    
    - "property_restrictions_cb": ${ True if restrict_other_property == True or restrict_elderly_petitioner_resources == "Yes" else "" }
    - "restrict_property_cb": ${ True if restrict_other_property == True else "" }
    - "restrict_cars": ${ True if restrict_other_property == True and restrict_cars else '' }
    - "restricted_car_details": ${ restricted_car_details if restrict_other_property == True and restrict_cars else '' }
    - "restrict_home": ${ True if restrict_other_property == True and restrict_home else '' }
    - "restricted_property_address": ${ restricted_property_address.on_one_line(bare=True) if restrict_other_property == True and restrict_home else '' }
    - "restrict_property_space": ${ True if restrict_other_property == True and restrict_home and restrict_property_space else '' }
    - "restrict_property_items": ${ True if restrict_other_property == True and restrict_home and restrict_property_items else '' }
    - "restricted_property_list": ${ restricted_property.rstrip('.') if restrict_other_property == True else "" }
    - "restrict_property_reason_petitioner_owns": ${ True if (restrict_property_reason == "petitioner" and restrict_other_property == True) else "" }
    - "restrict_property_reason_both_own": ${ True if restrict_property_reason == "both" and restrict_other_property == True else "" }
    - "restrict_property_reason_divorce": ${ True if restrict_property_reason == "divorce" and restrict_other_property == True else "" }

     # page 9
    
    - "restrict_property_elderly_petitioner": ${ True if restrict_elderly_petitioner_resources == "Yes" else '' }
    - "possession_of_animals": ${ True if possession_of_animals else "" }
    - "animals_list": ${ comma_and_list([item.name.text + " (" + indefinite_article(item.description) + ")" for item in pets]) if possession_of_animals else "" }
    - "no_stay_under_influence": ${ no_stay_under_influence if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
    - "no_stay_influence_location": ${ no_stay_residence.on_one_line(bare=True) if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
      
    - "firearms_cb": ${ True if firearms_threat else '' }

     # page 10

    - "childrens_records_cb": ${ True if minor_kids_with_respondent and ( no_records_no_contact or no_records_hide_address or no_records_no_removal ) else "" }
    - "no_records_no_contact": ${ True if minor_kids_with_respondent and no_records_no_contact else "" }
    - "no_records_hide_address": ${ True if minor_kids_with_respondent and no_records_hide_address else "" }
    - "no_records_no_removal": ${ True if minor_kids_with_respondent and no_records_no_removal else "" }
    - "expenses_shelter":  |
        % if not expenses_none:
        ${ expenses_shelter }
        % endif
    - "expenses_shelter_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_shelter_amount, show_decimals=True) }
        % endif

    - "misc_remedies_cb": ${ True if misc_remedies_text != '' else '' }
    - "misc_remedies_text": ${ misc_remedies_text }
      
    - "separate_phone_service_cb": ${ True if separate_phone_service else '' }
    - "phone_provider": ${ phone_provider if separate_phone_service else '' }
    - "phone_account_holder": |
        % if phone_account_holder == 'respondent' and separate_phone_service == True:
        ${other_parties[0].name_full()}
        % elif phone_account_holder == 'other' and separate_phone_service == True:
        ${ other_phone_account_holder.name_full() }
        % endif
    - "billing_phone_number": ${ phone_number_formatted(billing_phone_number) if separate_phone_service else '' }
    - "cell_number_1": ${ phone_number_formatted(cell_numbers[0].name.text) if separate_phone_service else '' }
    - "cell_number_2": ${ phone_number_formatted(cell_numbers[1].name.text) if separate_phone_service else '' }
    - "cell_number_3": ${ phone_number_formatted(cell_numbers[2].name.text) if separate_phone_service else '' }
    - "cell_number_4": ${ phone_number_formatted(cell_numbers[3].name.text) if separate_phone_service else '' }

     # page 13

    - "relationship_bg": ${ relationship_bg }
    - "relationship_cc": ${ relationship_cc }
    - "relationship_ac": ${ relationship_ac }
    - "relationship_ma": ${ relationship_ma }
    - "relationship_se": ${ relationship_se }
    - "relationship_xs": ${ relationship_xs }
    - "relationship_il": ${ relationship_il }
    - "relationship_sc": ${ relationship_sc }
    - "relationship_ss": ${ relationship_ss }
    - "relationship_ofm": ${ relationship_ofm }
    
    - "relationship_cs": ${ relationship_cs }
    
    - "relationship_bl": ${ relationship_bl }
    - "relationship_ch": ${ relationship_ch }
    - "relationship_pa": ${ relationship_pa }
    - "relationship_sb": ${ relationship_sb }
    - "relationship_gc": ${ relationship_gc }
    - "relationship_gp": ${ relationship_gp }
    - "relationship_ofb": ${ relationship_ofb }
    
    - "relationship_bk": ${ relationship_bk }
    - "relationship_fc": ${ True if relationship_a or relationship_l else "" }
    - "relationship_a": ${ relationship_a }
    - "relationship_l": ${ relationship_l }
    - "relationship_pc": ${ relationship_pc }
---
attachment:
  variable name: plenary_op[i]
  name: plenary_op
  filename: plenary_op
  skip undefined: True
  editable: True
  pdf template file: plenary_op.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "civil_proceeding": True
    - "petitioner": ${ users[0].name_full() }
    - "petitioner__2": |
        % if protect_petitioner and protect_obo_minor: 
        ${ users[0].name_full() + " and on behalf of minor: " + obo_minor.name_full()}
        % elif protect_petitioner:
        ${ users[0].name_full() }
        % elif protect_obo_minor:
        ${ "On behalf of minor: " + obo_minor.name_full()}
        % else:
        ${""}
        % endif
    - "petitioner__3": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "obo_high_risk_adult_cb": ${ True if protect_high_risk_adult else '' }
    - "obo_child_or_adult_name": |
        % if protect_obo_minor and protect_high_risk_adult:
        ${ obo_minor.name_full() }, ${ high_risk_adult.name_full() }
        % elif protect_obo_minor:
        ${ obo_minor.name_full() }
        % elif protect_high_risk_adult:
        ${ high_risk_adult.name_full() }
        % else:
        ${""}
        % endif
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "case_number__2": ${ case_number }
    - "case_number__3": ${ case_number }
    - "case_number__4": ${ case_number }
    - "case_number__5": ${ case_number }
    - "case_number__6": ${ case_number }
    - "case_number__7": ${ case_number }
    - "case_number__8": ${ case_number }
    - "case_number__9": ${ case_number }
    - "case_number__10": ${ case_number }
    - "case_number__11": ${ case_number }
    - "case_number__12": ${ case_number }
    - "case_number__13": ${ case_number }
    - "case_number__14": ${ case_number }
    - "case_number__15": ${ case_number }
    - "case_number__16": ${ case_number }
    - "protect_petitioner": ${ protect_petitioner }
    - "protect_shared_kids": ${ protect_shared_kids }
    - "shared_kids_list": ${ comma_and_list([person.name_full() for person in shared_kids if person.protect == True]) if (minor_kids_with_respondent == True and shared_kids.number() > 0 and protect_shared_kids == True) else "" }
    - "protect_petitioner_kids": ${ protect_petitioner_kids }
    - "petitioner_kids_list": ${ petitioner_kids.full_names() if protect_petitioner_kids else '' }
    - "protect_dependent_adult": ${ protect_dependent_adult }
    - "protect_high_risk_adult": ${ protect_high_risk_adult }
    - "protect_other_hh_members": ${ protect_other_hh_members }
    - "other_hh_members_list": ${ other_hh_members.full_names() if protect_other_hh_members else '' }
    - "dependent_adult": ${ dependent_adult.name_full() if protect_dependent_adult else '' }
    - "high_risk_adult": ${ high_risk_adult.name_full() if protect_high_risk_adult else '' }    
      
      # page 2
    - "show_address": ${ not hide_address }
    - "hide_address": ${ hide_address }
    - "notice_address_one_line": ${ users[0].address.on_one_line(bare=True) }
    - "petitioner_notice_email": ${ users[0].email if users[0].email_notice else ""}
    - "respondent_gender": ${ respondent_gender_other if other_parties[0].gender == 'other' else other_parties[0].gender }
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'other' else other_parties[0].race }
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ "about " + other_parties[0].approx_age }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_home_address": |
        % if other_parties[0].address.address != "":
        % if knows_respondent_home:
        ${ other_parties[0].address.on_one_line(bare=True) }
        % else:
        ${ "Last known: " + other_parties[0].address.on_one_line(bare=True) }
        % endif
        % else:
        ${ "do not know" }
        % endif
    - "respondent_email": ${ other_parties[0].email }
    - "respondent_employer": |
        % if knows_respondent_work:
        ${ other_parties[0].employer }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_hours": |
        % if knows_respondent_work and other_parties[0].work_hours != "":
        ${ other_parties[0].work_hours }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_address": |
        % if knows_respondent_work:
        ${ other_parties[0].work_address.on_one_line(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_tattoos": ${ other_parties[0].tattoos if other_parties[0].tattoos != "" else '' }
      
      # page 3    
    - "no_abuse": ${ any((no_harassment, no_physical, no_stalking, no_willful, no_intimidation, no_exploitation, no_neglect, no_interference)) }
    - "no_harassment": ${ no_harassment }
    - "no_physical": ${ no_physical }
    - "no_stalking": ${ no_stalking }
    - "no_willful": ${ no_willful }
    - "no_intimidation": ${ no_intimidation }
    - "no_exploitation": ${ no_exploitation }
    - "no_neglect": ${ no_neglect }
    - "no_interference": ${ no_interference}

    - "possession_residence": ${ not (residence_remedies == 'none') }
    - "exclusive_home_address_checkbox": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "exclusive_home_address_one_line": |
        % if (not hide_address) and (residence_remedies == 'exclusive possession'):
        ${ users[0].address.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "exclusive_address_hidden": |
        % if hide_address and (residence_remedies == 'exclusive possession'):
        ${ True }
        % else:
        ${ False }
        % endif
    - "respondent_no_right_to_stay": ${ True if exclusive_possession_reason == "respondent_no_right_to_stay" and residence_remedies == "exclusive possession" else '' }
    - "both_parties_right_to_stay": ${ True if exclusive_possession_reason == "both_parties_right_to_stay" and residence_remedies == "exclusive possession" else '' }

    - "provide_alt_housing": ${ residence_remedies == 'provide alternate housing' }
    - "alt_housing_requirements_text": ${ "" }

    - "stay_away_checkbox": ${ stay_away or any((stay_away_jobs, stay_away_schools, stay_away_other)) }
    - "stay_away": ${ stay_away }
      
    - "stay_away_locations": ${ any((stay_away_jobs, stay_away_schools, stay_away_other))}
    - "stay_away_jobs": ${ stay_away_jobs }
    - "stay_away_job_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs:
        ${ jobs[0].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_1": |
        % if hide_work_address and stay_away_jobs:
        ${ "Confidential" }
        % elif stay_away_jobs:
        ${ jobs[0].on_one_line(bare=True) if stay_away_jobs else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_1": ${ True if hide_work_address and stay_away_jobs else '' }

    - "stay_away_job_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Wherever protected party may be employed" }
        % elif stay_away_jobs_2:
        ${ jobs[1].employer }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_address_2": |
        % if hide_work_address_2 and stay_away_jobs_2:
        ${ "Confidential" }
        % elif stay_away_jobs_2:
        ${ jobs[1].on_one_line(bare=True) if stay_away_jobs_2 else '' }
        % else:
        ${ "" }
        % endif
    - "stay_away_job_hidden_2": ${ True if hide_work_address_2 and stay_away_jobs_2 else '' }

      # page 4
    - "stay_away_schools": ${ stay_away_schools }
    - "stay_away_school_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_address_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % endif
    - "stay_away_school_hidden_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[0].hide:
        ${ True }
        % endif
        % endif
        % endif
    - "stay_away_school_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_address_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % endif
    - "stay_away_school_hidden_2": |
        % if stay_away_schools:
        % if stay_away_schools_2:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[1].hide:
        ${ True }
        % endif
        % endif
        % endif
        % endif
    
    - "stay_away_other": ${ stay_away_other }
    - "stay_away_other_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].name if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ other_locations_hidden_description_1 }
        % elif stay_away_other:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other else '' }
        % endif
        % elif hide_other_address_1 and stay_away_other:
        ${ "Confidential" }
        % elif stay_away_other:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_1": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[2].hide:
        True
        % else:
        False
        % endif
        % else:
        False
        % endif
        % elif hide_other_address_1 and stay_away_other:
        True
        % elif stay_away_other:
        False
        % else:
        ${ "" }
        % endif

    - "stay_away_other_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential school or daycare" }
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].name if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ other_locations_hidden_description_2 }
        % elif stay_away_other_2:
        ${ other_locations[0].name }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_address_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        ${ "Confidential" }
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % else:
        ${ schools[3].on_one_line(bare=True) if stay_away_other_2 else '' }
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        ${ "Confidential" }
        % elif stay_away_other_2:
        ${ other_locations[0].on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif
    - "stay_away_other_hidden_2": |
        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if minor_kids_with_respondent or protect_petitioner_kids:
        % if schools[3].hide:
        True
        % else:
        False
        % endif
        % else:
        False
        % endif
        % elif hide_other_address_2 and stay_away_other_2:
        True
        % elif stay_away_other_2:
        False
        % else:
        ${ "" }
        % endif
        % else:
        ${ "" }
        % endif

    - "respondent_one_time_entry": ${ True if respondent_one_time_entry == True else '' }
    - "respondent_one_time_entry_police": ${ True if respondent_one_time_entry == True and property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "respondent_one_time_entry_other_cb": ${ True if respondent_one_time_entry == True and property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "respondent_one_time_entry_name": ${ other_transfer_property_person.name_full() if respondent_one_time_entry == True and property_transfer_person == 'other' and property_transfer_present_cb == True else '' }

    - "same_school_restrictions": ${ True if (same_school and same_school_restrictions != "none") else ""} 
    - "same_school_name": ${ same_school_name if (same_school and same_school_restrictions != "none") else ""}

    - "same_school_not_attend": ${ True if (same_school and same_school_restrictions == "not attend") else ""}
    - "same_school_change_placement": ${ True if (same_school and same_school_restrictions == "change program") else ""}
    - "same_school_avoid_parts": ${ True if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "same_school_parts": ${ parts_of_school if (same_school and same_school_restrictions == "not present in parts") else ""}
    - "respondent_parent_help": ${True if respondent_parent_help == "Yes" else ""}
    - "respondent_parent_name": ${ respondent_parent_name if respondent_parent_help == "Yes" else "" }
    - "respondent_parent_order": ${ respondent_parent_order if respondent_parent_help == "Yes" else "" }

    - "counseling": ${ request_counseling }    
    - "dv_counseling": ${ True if request_counseling and dv_counseling else '' }    
    - "alcohol_counseling": ${ True if request_counseling and alcohol_counseling else '' }    
    - "mental_health_counseling": ${ True if request_counseling and mental_health_counseling else '' } 
    - "other_counseling": ${ True if request_counseling and other_counseling else '' }    
    - "other_counseling_text": ${ other_counseling_text if request_counseling and other_counseling else '' }    

      # page 5
    
    - "care_and_possession_of_children": ${ minor_kids_with_respondent } 
    - "minor_kids_with_respondent": ${ minor_kids_with_respondent }
    - "shared_kids_1_name": ${ shared_kids[0].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_1_age": ${ shared_kids[0].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_1_state": ${ shared_kids[0].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_1_pet_par": ${ True if minor_kids_with_respondent and shared_kids[0].pet_parentage == True else "" }
    - "shared_kids_1_res_par": ${ True if minor_kids_with_respondent and shared_kids[0].res_parentage == True else "" }
    - "shared_kids_1_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[0].pet_parentage == None and shared_kids[0].res_parentage == None) else "" }
    - "shared_kids_1_include_yes": ${ shared_kids[0].protect if minor_kids_with_respondent else '' }
    - "shared_kids_1_include_no": ${ True if minor_kids_with_respondent and shared_kids[0].protect == False else '' }
    - "shared_kids_2_name": ${ shared_kids[1].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_2_age": ${ shared_kids[1].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_2_state": ${ shared_kids[1].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_2_pet_par": ${ True if minor_kids_with_respondent and shared_kids[1].pet_parentage == True else "" }
    - "shared_kids_2_res_par": ${ True if minor_kids_with_respondent and shared_kids[1].res_parentage == False else "" }
    - "shared_kids_2_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[1].pet_parentage == None and shared_kids[1].res_parentage == None) else "" }
    - "shared_kids_2_include_yes": ${ shared_kids[1].protect if minor_kids_with_respondent else '' }
    - "shared_kids_2_include_no": ${ True if minor_kids_with_respondent and shared_kids[1].protect == False else '' }
    - "shared_kids_3_name": ${ shared_kids[2].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_3_age": ${ shared_kids[2].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_3_state": ${ shared_kids[2].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_3_pet_par": ${ True if minor_kids_with_respondent and shared_kids[2].pet_parentage == True else "" }
    - "shared_kids_3_res_par": ${ True if minor_kids_with_respondent and shared_kids[2].res_parentage == False else "" }
    - "shared_kids_3_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[2].pet_parentage == None and shared_kids[2].res_parentage == None) else "" }
    - "shared_kids_3_include_yes": ${ shared_kids[2].protect if minor_kids_with_respondent else '' }
    - "shared_kids_3_include_no": ${ True if minor_kids_with_respondent and shared_kids[2].protect == False else '' }
    - "shared_kids_4_name": ${ shared_kids[3].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_4_age": ${ shared_kids[3].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_4_state": ${ shared_kids[3].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_4_pet_par": ${ True if minor_kids_with_respondent and shared_kids[3].pet_parentage == True else "" }
    - "shared_kids_4_res_par": ${ True if minor_kids_with_respondent and shared_kids[3].res_parentage == False else "" }
    - "shared_kids_4_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[3].pet_parentage == None and shared_kids[3].res_parentage == None) else "" }
    - "shared_kids_4_include_yes": ${ shared_kids[3].protect if minor_kids_with_respondent else '' }
    - "shared_kids_4_include_no": ${ True if minor_kids_with_respondent and shared_kids[3].protect == False else '' }
    - "shared_kids_5_name": ${ shared_kids[4].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_5_age": ${ shared_kids[4].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_5_state": ${ shared_kids[4].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_5_pet_par": ${ True if minor_kids_with_respondent and shared_kids[4].pet_parentage == True else "" }
    - "shared_kids_5_res_par": ${ True if minor_kids_with_respondent and shared_kids[4].res_parentage == False else "" }
    - "shared_kids_5_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[4].pet_parentage == None and shared_kids[4].res_parentage == None) else "" }
    - "shared_kids_5_include_yes": ${ shared_kids[4].protect if minor_kids_with_respondent else '' }
    - "shared_kids_5_include_no": ${ True if minor_kids_with_respondent and shared_kids[4].protect == False else '' }
    - "shared_kids_6_name": ${ shared_kids[5].name_full() if  minor_kids_with_respondent else '' }
    - "shared_kids_6_age": ${ shared_kids[5].age_in_years() if minor_kids_with_respondent else '' }
    - "shared_kids_6_state": ${ shared_kids[5].address.state if minor_kids_with_respondent else '' }
    - "shared_kids_6_pet_par": ${ True if minor_kids_with_respondent and shared_kids[5].pet_parentage == True else "" }
    - "shared_kids_6_res_par": ${ True if minor_kids_with_respondent and shared_kids[5].res_parentage == False else "" }
    - "shared_kids_6_idk_par": ${ True if minor_kids_with_respondent and (shared_kids[5].pet_parentage == None and shared_kids[5].res_parentage == None) else "" }
    - "shared_kids_6_include_yes": ${ shared_kids[5].protect if minor_kids_with_respondent else '' }
    - "shared_kids_6_include_no": ${ True if minor_kids_with_respondent and shared_kids[5].protect == False else '' }
    - "jurisdiction_over_children_cb": ${ True if any([children_live_in_il, children_removed_from_il, children_fled]) and minor_kids_with_respondent else "" }
    - "children_live_in_il": ${ True if children_live_in_il and minor_kids_with_respondent else '' }
    - "children_removed_from_il": ${ True if children_removed_from_il and minor_kids_with_respondent else '' }
    - "children_fled": ${ True if children_fled and minor_kids_with_respondent else '' }
    - "caretaker_cb": ${ minor_kids_with_respondent }
    - "caretaker_petitioner": ${ True if (primary_caretaker == "petitioner" and minor_kids_with_respondent) else '' }
    - "caretaker_respondent": ${ True if (primary_caretaker == "respondent" and minor_kids_with_respondent) else '' }
    - "caretaker_other": ${ True if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_name": ${ other_caretaker.name_full() if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }
    - "other_caretaker_address": ${ other_caretaker.address.on_one_line(bare=True) if (primary_caretaker == "other" and minor_kids_with_respondent) else '' }

    - "care_and_possession_cb": ${ True if physical_care_of_children or return_children_to == "petitioner" or return_children_to == "other" or no_removal_school or ((schools[0].hide or schools[1].hide) and stay_away_schools and minor_kids_with_respondent) else '' }

    - "physical_care_of_children": ${ True if physical_care_of_children and minor_kids_with_respondent else '' }
    
    - "return_children_possession": ${ True if (return_children_to == "petitioner" or return_children_to == "other") and minor_kids_with_respondent else '' }
    - "return_children_petitioner_cb": ${ True if return_children_to == "petitioner" and minor_kids_with_respondent else '' }
    - "return_children_other_cb": ${ True if return_children_to == "other" and minor_kids_with_respondent else '' }    
    - "return_children_other_person": ${ return_children_other_person.name_full() if return_children_to == "other" and minor_kids_with_respondent else '' }
    - "return_children_location": ${ return_children_location.on_one_line(bare=True) if knows_return_children_details and return_children_to == "other" and minor_kids_with_respondent else "" }

    - "no_removal_school": ${ True if no_removal_school and minor_kids_with_respondent else '' }
    - "no_removal_schools_list": |
        % if no_removal_school and minor_kids_with_respondent:    
        
        % if stay_away_schools:
        % if schools[0].hide:
        ${ "School 1: Confidential  " }
        % else:
        ${ schools[0].name + "  " }
        % endif
        % endif
        
        % if stay_away_schools:
        % if stay_away_schools_2:
        % if schools[1].hide:
        ${ "School 2: Confidential" }
        % else:
        ${ schools[1].name }
        % endif
        % endif
        % endif

        % if stay_away_other:
        % if other_location_1_is_school:
        % if schools[2].hide:
        ${ "School 3: Confidential" }
        % else:
        ${ schools[2].name }
        % endif
        % endif
        % endif

        % if stay_away_other:
        % if stay_away_other_2 and other_location_2_is_school:
        % if schools[3].hide:
        ${ "School 4: Confidential" }
        % else:
        ${ schools[3].name }
        % endif
        % endif
        % endif
        
        % endif

    # page 6
        
    - "schools_get_order": ${ True if stay_away_schools and minor_kids_with_respondent else ''}
    
    - "get_order_school_name_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].name if stay_away_schools else '' }
        % endif
        % endif
        % endif
    - "get_order_school_1": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[0].hide:
        ${ "Confidential" }
        % else:
        ${ schools[0].on_one_line(bare=True) if stay_away_schools else '' }
        % endif
        % endif
        % endif
    - "get_order_school_name_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].name if stay_away_schools_2 else '' }
        % endif
        % endif
        % endif
    - "get_order_school_2": |
        % if stay_away_schools:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[1].on_one_line(bare=True) if stay_away_schools_2 else '' }
        % endif
        % endif
        % endif
    - "get_order_school_name_3": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent:
        % if schools[2].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].name if stay_away_other and other_location_1_is_school else '' }
        % endif
        % endif
        % endif
    - "get_order_school_3": |
        % if stay_away_other and other_location_1_is_school:
        % if minor_kids_with_respondent:
        % if schools[1].hide:
        ${ "Confidential" }
        % else:
        ${ schools[2].on_one_line(bare=True) if stay_away_other and other_location_1_is_school else '' }
        % endif
        % endif
        % endif
    - "confidential_schools__2": ${ True if (schools[0].hide or schools[1].hide or schools[2].hide) and (stay_away_schools or (stay_away_other and other_location_1_is_school)) and minor_kids_with_respondent else False }
      
    - "temp_custody_cb": ${ True if temp_custody_of_children and minor_kids_with_respondent else '' }
    
    - "parenting_time_cb": ${ True if parenting_time and minor_kids_with_respondent else '' }
    - "parenting_time_grant": ${ True if parenting_time == "grant" and minor_kids_with_respondent else '' }
    - "parenting_time_reserve": ${ True if parenting_time == "reserve" and minor_kids_with_respondent else '' }
    - "parenting_time_deny": ${ True if parenting_time == "deny" and minor_kids_with_respondent else '' }
    - "parenting_time_restrict": ${ True if parenting_time == "restrict" and minor_kids_with_respondent else '' }
    - "no_pt_no_abuse": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_abuse"] and minor_kids_with_respondent else '' }
    - "no_pt_no_harass": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_harass"] and minor_kids_with_respondent else '' }
    - "no_pt_no_hide": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_hide"] and minor_kids_with_respondent else '' }
    - "no_pt_no_best_interest": ${ True if (parenting_time == "restrict" or parenting_time == "deny") and restrict_or_deny_pt_reasons["no_pt_no_best_interest"] and minor_kids_with_respondent else '' }
    - "pt_format": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and minor_kids_with_respondent else '' }
    - "pt_attach": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "attach" and minor_kids_with_respondent else ''  }
    - "pt_interview": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekdays": ${ True if pt_weekdays and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_list": ${ comma_and_list(dow_abb[int(y)] for y in pt_weekday_days.true_values()) if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent == True else '' }
    - "pt_weekday_start": ${ format_time(pt_weekday_start, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekday_end": ${ format_time(pt_weekday_end, format='h:mm a') if pt_weekdays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every": ${ True if pt_weekend_cadence == "every" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_every_other": ${ True if pt_weekend_cadence == "other" and pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_cb": ${ True if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_day": ${ dow_full[int(pt_weekend_start_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_start_time": ${ format_time(pt_weekend_start_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_day": ${ dow_full[int(pt_weekend_end_day)] if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_weekend_end_time": ${ format_time(pt_weekend_end_time, format='h:mm a') if pt_weekends == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    
    - "pt_start_date_cb": ${ True if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_start_date": ${ pt_start_date if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_holidays": ${ pt_holidays if (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else '' }
    - "pt_holiday_list": ${ pt_holiday_list if pt_holidays == True and (parenting_time == "grant" or parenting_time == "restrict") and pt_format == "interview" and minor_kids_with_respondent else ''}
    
    - "pt_transportation_cb": ${ True if pt_transportation != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_transportation_person_name": |
        % if pt_transportation == "petitioner" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Petitioner" }
        % elif pt_transportation == "respondent" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ "Respondent" }
        % elif pt_transportation == "other" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_transportation_person.name_full() }
        % else:
        ${ "" }
        % endif
        
      # page 7
        
    - "pt_pickup_location_cb": ${ True if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_pickup_location_name": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_pickup_location": |
        % if pt_separate_pickup_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_pickup_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif   
    - "pt_return_location_cb": ${ True if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_return_location_name": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_return_location": |
        % if pt_separate_return_location == True and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_return_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif          
    - "pt_location_cb": ${ True if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_location_name": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.name }
        % else:
        ${ "" }
        % endif          
    - "pt_location": |
        % if pt_location_identified == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant"):
        ${ pt_location.on_one_line(bare=True) }
        % else:
        ${ "" }
        % endif
    - "pt_supervised": ${ True if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervisor_name": ${ pt_supervisor.name_full() if pt_supervised == True and pt_supervisor_type == "person" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_supervised_center_cb": ${ True if pt_supervised == True and pt_supervisor_type == "agency" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_visitation_center_name": ${ pt_visitation_center_name  if pt_supervised == True and pt_supervisor_type == "agency" and (parenting_time == "restrict" or parenting_time == "grant") and pt_visitation_center_name != "" else "" }    

    - "pt_immediate_return_cb": ${ True if pt_immediate_return == True and pt_return_person_choice != "later" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_pet": ${ True if pt_immediate_return == True and pt_return_person_choice == "Me" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other": ${ True if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }
    - "pt_immediate_return_other_name": ${ pt_return_person.name_full() if pt_immediate_return == True and pt_return_person_choice == "other" and (parenting_time == "restrict" or parenting_time == "grant") else "" }

    - "no_conceal_children_cb": ${ True if no_conceal_children and minor_kids_with_respondent else '' }

    - "order_to_appear_cb": ${ True if minor_kids_with_respondent and ((current_possession_of_children == False and return_children_to == "court" ) or (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) ) else '' }
    - "appear_alone_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == True and res_appear_alone) or ( current_possession_of_children == False and return_children_to != "court" and res_appear_alone ) else '' }
    - "appear_with_children_cb": ${ True if minor_kids_with_respondent and (current_possession_of_children == False and return_children_to == "court" ) else '' }      
    - "appear_with_children_prevent": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_prevent:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_prevent:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_prevent:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_return": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_return:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_return:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_return:
        ${ True }
        % endif
        % endif
        % endif
    - "appear_with_children_exam": |
        % if minor_kids_with_respondent:
        % if current_possession_of_children == True:
        % if res_appear_alone and appear_alone_exam:
        ${ True}
        % endif
        % elif return_children_to == "court":
        % if appear_with_children_exam:
        ${ True}
        % endif
        % elif res_appear_alone:
        % if appear_alone_exam:
        ${ True }
        % endif
        % endif
        % endif
        
     # page 8
    - "return_property_cb": |
        % if award_personal_property:
        True
        % elif residence_remedies == 'exclusive possession':
        % if respondent_one_time_entry:
        True
        % endif
        % endif
    - "award_petitioner_property_cb": ${ True if award_personal_property else "" }
    - "award_petitioner_property_cb": ${ True if award_personal_property else "" }
    - "petitioner_property_awarded_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property]) if award_personal_property else "" }
    - "respondent_ordered_return_property_cb": ${ True if award_personal_property == True and return_property == True else "" }
    - "return_all_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] == [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }
    - "return_some_property_cb": ${ True if [item.name.text for item in petitioner_personal_property] != [item.name.text for item in petitioner_personal_property if item.respo_has == True] and award_personal_property == True and return_property == True else "" }

    - "petitioner_property_ordered_return_list": ${ comma_and_list([item.name.text for item in petitioner_personal_property if item.respo_has == True]) if (award_personal_property == True and return_property == True) else "" }
    - "return_property_person_cb": ${ True if award_personal_property and return_property else "" }
    - "return_property_person": |
        % if award_personal_property == True and return_property == True: 
        % if return_property_person == "petitioner":
        ${ "Petitioner" }
        % elif return_property_person == 'other':
        ${ other_return_property_person.name_full() }
        % endif
        % endif
    
    - "return_property_reason_petitioner_owns": ${ True if (return_property_reason == "petitioner owns" and award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_both_own": ${ True if (return_property_reason == "both own" and award_personal_property == True and return_property == True) else "" }
    - "return_property_reason_divorce": ${ True if (return_property_reason == "divorce" and award_personal_property == True and return_property == True) else "" }
     
    - "property_transfer_location_cb": ${ True if property_transfer_location_cb == True else '' }
    - "property_transfer_location": ${ property_transfer_location.on_one_line(bare=True) if property_transfer_location_cb == True else '' }
    - "property_transfer_present_cb": ${ True if property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_cb": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_police_name_known": ${ True if property_transfer_person == 'police' and property_transfer_present_cb == True and property_transfer_police != "" else '' }
    - "property_transfer_present_police_name": ${ property_transfer_police if property_transfer_person == 'police' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_cb": ${ True if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_present_other_name": ${ other_transfer_property_person.name_full() if property_transfer_person == 'other' and property_transfer_present_cb == True else '' }
    - "property_transfer_date": ${ property_transfer_date if property_transfer_know_date == True else '' }
    - "property_transfer_time": ${ format_time(property_transfer_time, format='h:mm') if property_transfer_know_date == True else ''  }
    - "property_transfer_time_am": ${ True if format_time(property_transfer_time, format='a') == "AM" and property_transfer_know_date == True else "" }
    - "property_transfer_time_pm": ${ True if format_time(property_transfer_time, format='a') == "PM" and property_transfer_know_date == True else "" }     
    
    - "return_respo_property_cb": ${ True if return_respo_property else '' }
    - "return_respo_property": ${ True if return_respo_property else '' }
    - "return_respo_clothes": ${ True if (return_respo_property == True and respo_property['clothes'] == True) else '' }
    - "return_respo_medicine": ${ True if (return_respo_property == True and respo_property['medicine'] == True) else '' }
    - "return_respo_property_other": ${ True if (return_respo_property == True and respo_property['other'] == True) else '' }
    - "return_respo_property_list": ${ respo_property_other if (return_respo_property == True and respo_property['other'] == True) else '' }
    
    - "respondent_one_time_entry": ${ True if respondent_one_time_entry == True else '' }
    - "one_time_present_police_cb": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_police_name_known": ${ True if res_property_transfer_person == 'police' and respondent_one_time_entry == True and res_property_transfer_police != "" else '' }
    - "one_time_present_police_name": ${ res_property_transfer_police if res_property_transfer_person == 'police' and respondent_one_time_entry == True else '' }
    - "one_time_present_other_cb": ${ True if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }
    - "one_time_present_person": ${ res_other_transfer_property_person.name_full() if res_property_transfer_person == 'other' and respondent_one_time_entry == True else '' }

     # page 9    
    - "property_restrictions_cb": ${ True if restrict_other_property == True or restrict_elderly_petitioner_resources == "Yes" else "" }
    - "restrict_property_cb": ${ True if restrict_other_property == True else "" }
    - "restrict_cars": ${ True if restrict_other_property == True and restrict_cars else '' }
    - "restricted_car_details": ${ restricted_car_details if restrict_other_property == True and restrict_cars else '' }
    - "restrict_home": ${ True if restrict_other_property == True and restrict_home else '' }
    - "restricted_property_address": ${ restricted_property_address.on_one_line(bare=True) if restrict_other_property == True and restrict_home else '' }
    - "restrict_property_space": ${ True if restrict_other_property == True and restrict_home and restrict_property_space else '' }
    - "restrict_property_items": ${ True if restrict_other_property == True and restrict_home and restrict_property_items else '' }
    - "restricted_property_list": ${ restricted_property.rstrip('.') if restrict_other_property == True else "" }
    - "restrict_property_reason_petitioner_owns": ${ True if (restrict_property_reason == "petitioner" and restrict_other_property == True) else "" }
    - "restrict_property_reason_both_own": ${ True if restrict_property_reason == "both" and restrict_other_property == True else "" }
    - "restrict_property_reason_divorce": ${ True if restrict_property_reason == "divorce" and restrict_other_property == True else "" }
    
    - "restrict_property_elderly_petitioner": ${ True if restrict_elderly_petitioner_resources == "Yes" else '' }
    - "possession_of_animals": ${ True if possession_of_animals else "" }
    - "animals_list": ${ comma_and_list([item.name.text + " (" + indefinite_article(item.description) + ")" for item in pets]) if possession_of_animals else "" }

    - "temp_support_cb": |
        % if temp_child_support and minor_kids_with_respondent:
        ${ True }
        % elif relationship_ma:
        % if temp_maintenance and (relationship_se or relationship_xs):
        ${ True }
        % endif        
        % endif        
    - "temp_child_support": ${ True if (temp_child_support == True and minor_kids_with_respondent == True) else '' }
    - "temp_maintenance": |
        % if relationship_ma:
        % if temp_maintenance and (relationship_se or relationship_xs):
        ${ True }
        % endif        
        % endif
        
     # page 10
 
    - "payment_for_losses_cb":  |
        % if not expenses_none and (expenses_medical or expenses_lost_income or expenses_property or expenses_moving or expenses_housing or expenses_children or expenses_lawyer or expenses_other):
        ${ True }
        % endif
    - "expenses_any_cb":  |
        % if not expenses_none and (expenses_medical or expenses_lost_income or expenses_property or expenses_moving or expenses_housing or expenses_children or expenses_lawyer or expenses_other):
        ${ True }
        % endif
    - "expenses_medical": |
        % if not expenses_none:
        ${ expenses_medical }
        % endif
    - "expenses_medical_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_medical_amount, show_decimals=True) }
        % endif
    - "expenses_lost_income":  |
        % if not expenses_none:
        ${ expenses_lost_income }
        % endif
    - "expenses_lost_income_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_lost_income_amount, show_decimals=True) }
        % endif
    - "expenses_property":  |
        % if not expenses_none:
        ${ expenses_property }
        % endif
    - "expenses_property_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_property_amount, show_decimals=True) }
        % endif
    - "expenses_moving":  |
        % if not expenses_none:
        ${ expenses_moving }
        % endif
    - "expenses_moving_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_moving_amount, show_decimals=True) }
        % endif
    - "expenses_housing":  |
        % if not expenses_none:
        ${ expenses_housing }
        % endif
    - "expenses_housing_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_housing_amount, show_decimals=True) }
        % endif
    - "expenses_children":  |
        % if not expenses_none:
        ${ expenses_children }
        % endif
    - "expenses_children_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_children_amount, show_decimals=True) }
        % endif
    - "expenses_lawyer":  |
        % if not expenses_none:
        ${ expenses_lawyer }
        % endif
    - "expenses_lawyer_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_lawyer_amount, show_decimals=True) }
        % endif
    - "expenses_other":  |
        % if not expenses_none:
        ${ expenses_other }
        % endif
    - "expenses_other_kind":  |
        % if not expenses_none:
        ${ expenses_other_kind }
        % endif
    - "expenses_other_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_other_amount, show_decimals=True) }
        % endif      

    - "no_stay_under_influence": ${ no_stay_under_influence if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}
    - "no_stay_influence_location": ${ no_stay_residence.on_one_line(bare=True) if not (stay_away or (residence_remedies == 'exclusive possession') or (residence_remedies == 'provide alternate housing')) else ''}

    # page 11
    
    - "firearms_cb": ${ True if firearms_threat else '' }

    - "childrens_records_cb": ${ True if minor_kids_with_respondent and ( no_records_no_contact or no_records_hide_address or no_records_no_removal ) else "" }
    - "no_records_no_contact": ${ True if minor_kids_with_respondent and no_records_no_contact else "" }
    - "no_records_hide_address": ${ True if minor_kids_with_respondent and no_records_hide_address else "" }
    - "no_records_no_removal": ${ True if minor_kids_with_respondent and no_records_no_removal else "" }

    - "expenses_shelter":  |
        % if not expenses_none:
        ${ expenses_shelter }
        % endif
    - "expenses_shelter_amount":  |
        % if not expenses_none:
        ${ thousands(expenses_shelter_amount, show_decimals=True) }
        % endif

    - "misc_remedies_cb": ${ True if misc_remedies_text != '' else '' }
    - "misc_remedies_text": ${ misc_remedies_text }

    # page 12
    
    - "separate_phone_service_cb": ${ True if separate_phone_service else '' }
    - "phone_provider": ${ phone_provider if separate_phone_service else '' }
    - "phone_account_holder": |
        % if phone_account_holder == 'respondent' and separate_phone_service == True:
        ${other_parties[0].name_full()}
        % elif phone_account_holder == 'other' and separate_phone_service == True:
        ${ other_phone_account_holder.name_full() }
        % endif
    - "billing_phone_number": ${ phone_number_formatted(billing_phone_number) if separate_phone_service else '' }
    - "cell_number_1": ${ phone_number_formatted(cell_numbers[0].name.text) if separate_phone_service else '' }
    - "cell_number_2": ${ phone_number_formatted(cell_numbers[1].name.text) if separate_phone_service else '' }
    - "cell_number_3": ${ phone_number_formatted(cell_numbers[2].name.text) if separate_phone_service else '' }
    - "cell_number_4": ${ phone_number_formatted(cell_numbers[3].name.text) if separate_phone_service else '' }

     # page 15

    - "relationship_bg": ${ relationship_bg }
    - "relationship_cc": ${ relationship_cc }
    - "relationship_ac": ${ relationship_ac }
    - "relationship_ma": ${ relationship_ma }
    - "relationship_se": ${ relationship_se }
    - "relationship_xs": ${ relationship_xs }
    - "relationship_il": ${ relationship_il }
    - "relationship_sc": ${ relationship_sc }
    - "relationship_ss": ${ relationship_ss }
    - "relationship_ofm": ${ relationship_ofm }
    
    - "relationship_cs": ${ relationship_cs }
    
    - "relationship_bl": ${ relationship_bl }
    - "relationship_ch": ${ relationship_ch }
    - "relationship_pa": ${ relationship_pa }
    - "relationship_sb": ${ relationship_sb }
    - "relationship_gc": ${ relationship_gc }
    - "relationship_gp": ${ relationship_gp }
    - "relationship_ofb": ${ relationship_ofb }
    
    - "relationship_bk": ${ relationship_bk }
    - "relationship_fc": ${ True if relationship_a or relationship_l else "" }
    - "relationship_a": ${ relationship_a }
    - "relationship_l": ${ relationship_l }
    - "relationship_pc": ${ relationship_pc }

---
attachment:
  variable name: cook_dv_cover_sheet[i]
  name: cook_dv_cover_sheet
  filename: cook_dv_cover_sheet
  skip undefined: True
  editable: False
  pdf template file: cook_dv_cover_sheet.pdf
  fields:
    - "petitioner__1": ${ users[0].name_full() }
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "civil_proceeding": ${ True }

    - "involves_minors_yes": ${ True if minor_kids_with_respondent else '' }
    - "involves_minors_no": ${ True if not minor_kids_with_respondent else '' }
    - "previous_divorce_yes": ${ True if previous_cook_case_type == "divorce" else '' }
    - "previous_divorce_no": ${ True if not previous_cook_case_type == "divorce" or previous_cook_case_type == "none" else '' }
    - "previous_parentage_yes": ${ True if previous_cook_case_type == "parentage" else '' }
    - "previous_parentage_no": ${ True if not previous_cook_case_type == "parentage" or previous_cook_case_type == "none" else '' }
    - "previous_cook_case_date": ${ format_date(previous_cook_case_date, format='MMM d, yyyy') if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }
    - "previous_cook_case_number": ${ previous_cook_case_number if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }
    - "previous_cook_case_judge": ${ previous_cook_case_judge if previous_cook_case_type == "divorce" or previous_cook_case_type == "parentage" else '' }

    - "pro_se_cb": ${ True }
    - "petitioner__2": ${ users[0].name_full() }
    - "preparer_address_line_1": ${ users[0].address.line_one(bare=True) }
    - "petitioner_city": ${ users[0].address.city }
    - "petitioner_state": ${ users[0].address.state }
    - "petitioner_zip": ${ users[0].address.zip }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "preparer_email": ${ users[0].email if users[0].email_notice else ""}

---
attachment:
  variable name: cook_sheriff_info_sheet[i]
  name: cook_sheriff_info_sheet
  filename: cook_sheriff_info_sheet
  skip undefined: True
  editable: False
  pdf template file: cook_sheriff_info_sheet.pdf
  fields:
    - "respondent": ${other_parties[0].name_full()}
    - "alias_names": ${ other_parties[0].alias_names}
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'other' else other_parties[0].race }
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_male_at_birth": ${ True if respondent_sex_at_birth == "male" else '' }    
    - "respondent_female_at_birth": ${ True if respondent_sex_at_birth == "female" else '' }    
    - "respondent_gender_m": ${ True if other_parties[0].gender_cook['male'] == True else '' } 
    - "respondent_gender_w": ${ True if other_parties[0].gender_cook['female'] == True else '' }
    - "respondent_gender_tw": ${ True if other_parties[0].gender_cook['transfem'] == True else '' }
    - "respondent_gender_tm": ${ True if other_parties[0].gender_cook['transmasc'] == True else '' }
    - "respondent_gender_nb": ${ True if other_parties[0].gender_cook['nonbinary'] == True else '' }
    - "respondent_gender_other": ${ True if other_parties[0].gender_cook['other'] == True else '' }
    - "respondent_gender_other_text": ${ respondent_gender_other if other_parties[0].gender_cook['other'] == True else '' }
    
    - "respondent_age": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].age_in_years() }
        % elif knows_respondent_dob == 'some' and other_parties[0].approx_age != "":
        ${ "about " + other_parties[0].approx_age }
        % else:
        ${""}
        % endif
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_skin": |
        % if other_parties[0].skin != "":
        ${ respondent_skin_other if other_parties[0].skin == 'other' else other_parties[0].skin }
        % endif
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_glasses": ${other_parties[0].glasses if other_parties[0].glasses != "" else ''}
    - "respondent_tattoos": ${ other_parties[0].tattoos if other_parties[0].tattoos != "" else '' }
    - "respondent_history_illness": ${ True if caution_reasons['illness'] == True else "" }
    - "respondent_alcohol": ${ True if caution_reasons['alcohol'] == True else "" }
    - "respondent_drugs": ${ True if caution_reasons['drugs'] == True else "" }
    - "respondent_firearms_on_person": ${ True if caution_reasons['armed'] == True else "" }
    - "respondent_weapons_in_home": ${ True if caution_reasons['home'] == True else "" }
    - "respondent_weapons_description": ${ weapons_description if caution_reasons['armed'] or caution_reasons['home'] == True else "" }        
    - "respondent_suicidal": ${ True if caution_reasons['suicidal'] == True else ''  }    
    - "respondent_probation_yes":  ${ True if respondent_on_probation == "Yes" else ''  } 
    - "respondent_probation_no":  ${ True if respondent_on_probation == "No" else ''  } 
    - "respondent_probation_county":  ${ respondent_probation_county if respondent_on_probation == "Yes" else ''  } 
    
    - "respondent_employer": |
        % if knows_respondent_work:
        ${ other_parties[0].employer }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_type": |
        % if knows_respondent_work and respondent_work_type != "":
        ${ respondent_work_type }
        % else:
        ${ "" }
        % endif
    - "respondent_work_hours": |
        % if knows_respondent_work and respondent_work_type != "":
        ${ other_parties[0].work_hours }
        % else:
        ${ "" }
        % endif
    - "service_address_line_1": |
        % if service_address_choice == "other":
        ${ service_address.line_one(bare=True) }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % else:
        ${ other_parties[0].work_address.line_one(bare=True) }        
        % endif
    - "service_city": |
        % if service_address_choice == "other":
        ${ service_address.city }, ${ service_address.state }
        % elif service_address_choice == "home":
        ${ other_parties[0].address.city }, ${ other_parties[0].address.state }        
        % else:
        ${ other_parties[0].work_address.city }, ${ other_parties[0].work_address.state }        
        % endif
        
    - "last_known_address": |
        % if knows_respondent_home_last and knows_respondent_home == False:
        ${ other_parties[0].address.line_one(bare=True) }
        % endif
    - "last_known_city": |
        % if knows_respondent_home_last and knows_respondent_home == False:
        ${ other_parties[0].address.city }, ${ other_parties[0].address.state }
        % endif

    - "respondent_work_address": |
        % if knows_respondent_work:
        ${ other_parties[0].work_address.line_one(bare=True) }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_work_city": |
        % if knows_respondent_work:
        ${ other_parties[0].work_address.city }, ${ other_parties[0].work_address.state }
        % else:
        ${ "do not know" }
        % endif

    - "service_alt_address_line_1": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.line_one(bare=True) }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.line_one(bare=True) }        
        % else:
        ${ other_parties[0].work_address.line_one(bare=True) }        
        % endif
        % endif
    - "service_alt_city": |
        % if has_second_service_address == True:
        % if second_service_address_choice == "other":
        ${ second_service_address.city }, ${ second_service_address.state }
        % elif second_service_address_choice == "home":
        ${ other_parties[0].address.city }, ${ other_parties[0].address.state } 
        % else:
        ${ other_parties[0].work_address.city }, ${ other_parties[0].work_address.state }        
        % endif
        % endif
    - "respondent_phone": ${ phone_number_formatted(other_parties[0].phone_number) }
    - "respondent_cell": ${ phone_number_formatted(other_parties[0].mobile_number) }
    - "respondent_email": ${ other_parties[0].email }
    - "respondent_social_media_yes": ${ True if respondent_on_social_media == "Yes" else '' }
    - "respondent_social_media_no": ${ True if respondent_on_social_media == "No" else '' }
    - "respondent_social_media_accounts": ${ respondent_social_media_accounts if respondent_on_social_media == "Yes" else '' }
    
    - "additional_service_info": ${ service_information }
    - "cook_vehicle_make": ${ respondent_car_make }
    - "cook_vehicle_model": ${ respondent_car_model }
    #- "cook_vehicle_make": ${ cook_vehicle_make }
    #- "cook_vehicle_model": ${ cook_vehicle_model }
    - "cook_vehicle_year": ${ cook_vehicle_year if cook_vehicle_year != 0 else "" }
    - "cook_vehicle_color": ${ cook_vehicle_color }
    - "cook_vehicle_plate": ${ cook_vehicle_plate }
    - "cook_vehicle_state": ${ state_name(cook_vehicle_state) }

    - "preparer_name": ${ users[0].name_full() }
    - "preparer_phone": ${ phone_number_formatted(users[0].phone_number) }
---
attachment:
  variable name: sheriff_cover_sheet[i]
  name: sheriff_cover_sheet
  filename: sheriff_cover_sheet
  skip undefined: True
  editable: False
  pdf template file: sheriff_cover_sheet.pdf
  fields:
    - "fake": ${ "" }

---
attachment:
  variable name: op_warrant_info_sheet[i]
  name: op_warrant_info_sheet
  filename: warrant_info_sheet
  skip undefined: True
  editable: False
  pdf template file: op_warrant_info_sheet.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }
    - "petitioner_notice_phone": ${ phone_number_formatted(users[0].phone_number) }
    - "petitioner_notice_email": ${ users[0].email if users[0].email_notice else "" }
    - "respondent_dob": |
        % if knows_respondent_dob == 'exact' and other_parties[0].birthdate != "":
        ${ other_parties[0].birthdate }
        % elif knows_respondent_dob == 'some':
        ${ "about " + other_parties[0].approx_age }
        % else:
        ${ "do not know" }
        % endif
    - "respondent_gender": ${ respondent_gender_other if other_parties[0].gender == 'other' else other_parties[0].gender }
    - "respondent_race": ${ respondent_race_other if other_parties[0].race == 'other' else other_parties[0].race }
    - "respondent_height": |
        % if other_parties[0].height_feet > 1:
        ${ str(other_parties[0].height_feet) + "\'" }
        % if other_parties[0].height_inches > 0:
        ${ str(other_parties[0].height_inches) + "\""}
        % endif
        % else:
        ${""}
        % endif
    - "respondent_weight": ${ str(other_parties[0].weight) + " lbs." if other_parties[0].weight > 0 else '' }
    - "respondent_hair": ${ other_parties[0].hair if other_parties[0].hair != "" else '' }
    - "respondent_eyes": ${ other_parties[0].eyes if other_parties[0].eyes != "" else '' }
    - "respondent_tattoos": ${ other_parties[0].tattoos if other_parties[0].tattoos != "" else '' }
    - "respondent_warrant_help": ${ respondent_warrant_help if has_helpful_warrant_info else '' }
    - "warrant_location_1": ${ warrant_location_list[0].on_one_line(bare=True) + ", " + warrant_location_list[0].description }
    - "warrant_location_1_days_times": ${ warrant_location_list[0].days_times }
    - "warrant_location_1_others_yes": ${ warrant_location_list[0].others_present  }
    - "warrant_location_1_others_no": ${ not warrant_location_list[0].others_present  }
    - "warrant_location_1_others_info": ${ warrant_location_list[0].others_present_details if warrant_location_list[0].others_present else '' }
    - "warrant_location_2": ${ warrant_location_list[1].on_one_line(bare=True) + ", " + warrant_location_list[1].description if warrant_location_list.number() > 1 else "" }
    - "warrant_location_2_days_times": ${ warrant_location_list[1].days_times if warrant_location_list.number() > 1 else "" }
    - "warrant_location_2_others_yes": ${ warrant_location_list[1].others_present if warrant_location_list.number() > 1 else "" }
    - "warrant_location_2_others_no": ${ not warrant_location_list[1].others_present if warrant_location_list.number() > 1 else "" }
    - "warrant_location_2_others_info": ${ warrant_location_list[1].others_present_details if warrant_location_list.number() > 1 and warrant_location_list[1].others_present else '' }

---
attachment:
  variable name: op_warrant[i]
  name: op_warrant
  filename: search_warrant
  skip undefined: True
  editable: False
  pdf template file: op_warrant.pdf
  fields:
    - "county": ${ trial_court.address.county }
    - "petitioner": ${ users[0].name_full() }
    - "obo_minor_cb": ${ True if protect_obo_minor else '' }
    - "respondent": ${other_parties[0].name_full()}
    - "case_number__1": ${ case_number }